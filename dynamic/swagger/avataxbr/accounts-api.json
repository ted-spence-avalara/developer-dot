{
  "swagger": "2.0",
  "info": {
    "title": "AvaTax Brazil - Account API",
    "description": "The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.",
    "version": "1.0"
  },
  "host": "avataxbr-sandbox.avalarabrasil.com.br",
  "x-swagger-namespace": "DB",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/v2",
  "paths": {
    "/accounts/companies": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompaniesList",
        "summary": "Retrieve Companies by account",
        "description": "Retrieve list companies of one account",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "List of Companies by Account",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountCompany"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "post": {
        "operationId": "createAccountCompany",
        "summary": "Create company and your data configuration",
        "description": "This method operation create a company for a account\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Company Code",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/accounts/companies/{companyId}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_companyId"
        }
      ],
      "delete": {
        "operationId": "deleteAccountCompany",
        "description": "Delete relation Account x company",
        "tags": [
          "Company"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    }
  },
  "parameters": {
    "header_jwt": {
      "name": "Authorization",
      "in": "header",
      "description": "Bearer {auth}",
      "required": true,
      "type": "string"
    },
    "path_companyId": {
      "name": "companyId",
      "in": "path",
      "description": "Company ID",
      "required": true,
      "type": "string",
      "format": "uuid"
    }
  },
  "responses": {
    "200_SuccessList": {
      "description": "Success response",
      "headers": {
        "X-Pagination-Current-Page": {
          "description": "The current page. Defaults to 1.",
          "type": "number"
        },
        "X-Pagination-Limit": {
          "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
          "type": "number"
        },
        "X-Pagination-Total-Pages": {
          "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
          "type": "number"
        },
        "X-Pagination-Total-Count": {
          "description": "The total number of records across all pages.",
          "type": "number"
        }
      }
    },
    "201_Created": {
      "description": "Success.",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid"
          }
        }
      }
    },
    "204_NoContent": {
      "description": "Success."
    },
    "400_BadRequest": {
      "description": "The request was invalid or cannot be otherwise served.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    },
    "401_Unauthorized": {
      "description": "Authentication credentials were missing or incorrect.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "403_Forbidden": {
      "description": "The request is understood, but it has been refused or access is not allowed.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "404_NotFound": {
      "description": "The URI requested is invalid or the resource requested does not exists.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "429_TooManyRequests": {
      "description": "The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "500_InternalServerError": {
      "description": "Something is broken.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "503_ServiceUnavailable": {
      "description": "The server is up, but overloaded with requests. Try again later.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    }
  },
  "definitions": {
    "AccountCompany": {
      "type": "object",
      "required": [
        "companyId",
        "companyCode"
      ],
      "properties": {
        "companyId": {
          "type": "string",
          "format": "uuid"
        },
        "companyCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        }
      }
    },
    "Company": {
      "type": "object",
      "required": [
        "code",
        "officialName",
        "name",
        "entityType",
        "federalTaxRegime"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60,
          "description": "string is a code maintained by the client application to uniquely identify the company for which this transaction is being recorded. It is unique within the context of an Account. It will be limited to 60 characters when creating a Company"
        },
        "officialName": {
          "type": "string",
          "maxLength": 150,
          "description": "Official Company name (Razão Social)"
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "description": "Company name (DBA - Nome de Fantasia),  Used to identify branches/subsidiaries with same name"
        },
        "entityType": {
          "$ref": "#/definitions/EntityType"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Company has participation of state-owned capital (it will be considerated like a government entity)"
        },
        "federalTaxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "pisSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "cofinsSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "csllSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "receiptsAreFullNoCumulativePisCofins": {
          "type": "boolean",
          "description": "When th company is REAL PROFIT usually it operates under a Non-Cumulative PIS/COFINS regime\nBut exist some services that are always Cumulative regime.\nIf the company has all receipts from Non-Cumulative services this flag will be set to True.\nThis flag informs special conditions to credit of PIS/COFINS when this company is out of Free zone and  purchases from Free Zone Company\nQuando uma empresa fora da Zona Franca adquire uma produto ou serviço de uma empresa situada na Zona Franca de Manaus, o crédito de PIS E COFINS segue estas aliquotas diferenciadas.\nFundamentação, art. 5º da Instrução Normativa SRF nº 546/2005; art. 3º, § 12 da Lei nº 10.637/2002; art. 3º, § 17 da Lei nº 10.833/2003; art. 4º da Lei nº 11.307/2006.\nDESTINATÁRIO ALÍQUOTAS.\nPIS COFINS\na) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure a Contribuição para o PIS/PASEP no regime de não-cumulatividade débito 0,65% 3% crédito 1% 4,6%\nc) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure o imposto de renda com base no lucro real e que tenha sua receita, total ou parcialmente, excluída do regime de incidência não-cumulativa da Contribuição para o PIS/PASEP débito 1,3% 6% crédito 1,65% 7,6%\n"
        },
        "inssWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withholding INSS this Flag can be set to True"
        },
        "issWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withhold ISS this Flag can be set to True"
        },
        "irrfWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, if this flag is FALSE, the system will not withhold IRRF.\nif this flag is TRUE the system will analise other rules to define if will have witholding\n"
        },
        "icmsRateForSimplestaxregime": {
          "type": "number",
          "format": "double",
          "description": "Actual ICMS Rate for this company (if the company is Tax Regime Simplified).\nAliquota de ICMS da companhia caso Optante do Simples\n"
        },
        "isExemptByGrossRevenueForSimplestaxregime": {
          "type": "boolean",
          "description": "ICMS Exempt when Tax Regime is Simplified because total gross revenue is bellow amount defined by state (see PARANÁ State)\nIsenção do ICMS no Simples Nacional para faixa de receita bruta\n"
        },
        "subjectToPayrollTaxRelief": {
          "type": "boolean",
          "description": "Sujeito à desoneração de folha de pagamento."
        },
        "configuration": {
          "type": "object",
          "properties": {
            "certificate": {
              "type": "string",
              "description": "digital certificate A1 model, p12, encoded by base64"
            },
            "certificatepwd": {
              "type": "string",
              "description": "certificate password"
            },
            "certificateexpiration": {
              "type": "string",
              "description": "expiration date of this certificate"
            },
            "logo": {
              "type": "string",
              "description": "company logo image encoded by base64"
            },
            "tpImpNFe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "tpImpNFCe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
              "enum": [
                "0",
                "4",
                "5"
              ]
            }
          }
        },
        "mailServer": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string",
              "description": "User for login on email server"
            },
            "password": {
              "type": "string",
              "description": "Password to login on email server"
            },
            "smtpAddress": {
              "type": "string",
              "description": "smtp address to email server"
            },
            "port": {
              "type": "integer",
              "description": "port"
            },
            "emailFrom": {
              "type": "string",
              "description": "email address to identify the sender e-mail, to send a XML and DANFE"
            },
            "protocol": {
              "type": "string",
              "enum": [
                "ssl",
                "tls"
              ],
              "description": "protocol SSL or TLS"
            },
            "templatemessageToEmail": {
              "type": "string",
              "description": "Message to add to email body"
            }
          }
        },
        "authorizedToDownloadNFe": {
          "description": "Person or company authorized to downloadNFe",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "federalTaxId": {
                "type": "string",
                "pattern": "[0-9]{11,14}",
                "description": "Federal tax id, CNPJ or CPF"
              }
            }
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "params",
            "body",
            "query"
          ]
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "EntityType": {
      "type": "string",
      "enum": [
        "business",
        "individual",
        "federalGovernment",
        "stateGovernment",
        "cityGovernment",
        "foreign"
      ],
      "description": "Entity Type (business, individual, federal government, state government, city government, foreign)"
    },
    "FederalTaxRegime": {
      "type": "string",
      "enum": [
        "realProfit",
        "estimatedProfit",
        "simplified",
        "simplifiedOverGrossthreshold",
        "simplifiedEntrepreneur",
        "notApplicable",
        "individual"
      ],
      "description": "- Federal tax regime\n- realProfit - REAL PROFIT LUCRO REAL\n- estimatedProfit - ESTIMATED PROFIT / LUCRO PRESUMIDO\n- simplified - SIMPLIFIED - OPTANTE TO SIMPLES\n- simplifiedOverGrossthreshold - OPTANTE DO SIMPLES COM LIMITE DE GROSS REVENUE\n- simplifiedEntrepreneur - SIMPLIFIED ENTREPRENEUR / MEI MICRO EMPREENDEDOR INDIVIDUAL \n- notApplicable - Not Applicable 1 \n- individual - INDIVIDUAL / INDIVIDUO\n"
    }
  }
}