{
  "swagger": "2.0",
  "info": {
    "title": "AvaTax Brazil",
    "description": "The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.",
    "version": "1.0"
  },
  "host": "avataxbr-sandbox.avalarabrasil.com.br",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/v2",
  "paths": {
    "/auth": {
      "post": {
        "operationId": "authorization",
        "summary": "authorization",
        "description": "Authorization: Basic VGVzdDoxMjM=\n\nGenerate Base64:\n\n- auth = \"user:password\"\n\n- base = base64(auth)\n\n- header[\"Authorization\"] = \"Basic \" + base\n",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Accepts \"Basic + hash\", where hash is user:password base64 encoded.\n",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "expired": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "responses": {
    "200_SuccessList": {
      "description": "Success response",
      "headers": {
        "X-Pagination-Current-Page": {
          "description": "The current page. Defaults to 1.",
          "type": "number"
        },
        "X-Pagination-Limit": {
          "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
          "type": "number"
        },
        "X-Pagination-Total-Pages": {
          "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
          "type": "number"
        },
        "X-Pagination-Total-Count": {
          "description": "The total number of records across all pages.",
          "type": "number"
        }
      }
    },
    "201_Created": {
      "description": "Success.",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid"
          }
        }
      }
    },
    "204_NoContent": {
      "description": "Success."
    },
    "400_BadRequest": {
      "description": "The request was invalid or cannot be otherwise served.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    },
    "401_Unauthorized": {
      "description": "Authentication credentials were missing or incorrect.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "403_Forbidden": {
      "description": "The request is understood, but it has been refused or access is not allowed.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "404_NotFound": {
      "description": "The URI requested is invalid or the resource requested does not exists.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "429_TooManyRequests": {
      "description": "The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "500_InternalServerError": {
      "description": "Something is broken.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "503_ServiceUnavailable": {
      "description": "The server is up, but overloaded with requests. Try again later.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    }
  },
  "parameters": {
    "header_jwt": {
      "name": "Authorization",
      "in": "header",
      "description": "Bearer {auth}",
      "required": true,
      "type": "string"
    },
    "path_companyId": {
      "name": "companyId",
      "in": "path",
      "description": "Company ID",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "path_zipCode": {
      "name": "zipcode",
      "in": "path",
      "description": "ZIP Code",
      "required": true,
      "type": "string",
      "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
      "maxLength": 60
    },
    "path_agastCode": {
      "name": "code",
      "in": "path",
      "description": "Agast Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "query_agastCode": {
      "name": "agast",
      "in": "query",
      "description": "Custom Agast Code",
      "type": "string",
      "maxLength": 60
    },
    "path_accountId": {
      "name": "accountId",
      "in": "path",
      "description": "Account ID",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "path_companyCode": {
      "name": "companyCode",
      "in": "path",
      "description": "Company Code",
      "required": true,
      "type": "string"
    },
    "path_transactionType_goods": {
      "name": "transactionType",
      "in": "path",
      "description": "Transaction Type",
      "required": true,
      "type": "string",
      "enum": [
        "sale",
        "purchase",
        "sales-return",
        "purchase-return",
        "transfer-return",
        "shipping",
        "shipping-return",
        "transfer",
        "receipt-adjustment",
        "transfer-adjustment"
      ]
    },
    "path_transactionType_service": {
      "name": "transactionType",
      "in": "path",
      "description": "Transaction Type (sale, purchase, receipts or payment)",
      "required": true,
      "type": "string",
      "enum": [
        "sale",
        "purchase",
        "payment",
        "receipt"
      ]
    },
    "path_documentCode": {
      "name": "documentCode",
      "in": "path",
      "description": "Document Code",
      "required": true,
      "type": "string"
    },
    "path_cityCode": {
      "name": "cityCode",
      "in": "path",
      "description": "City Code",
      "required": true,
      "type": "number"
    },
    "path_itemCode": {
      "name": "code",
      "in": "path",
      "description": "Item Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_locationCode": {
      "name": "code",
      "in": "path",
      "description": "Location Code",
      "required": true,
      "type": "string"
    },
    "path_processCode": {
      "name": "code",
      "in": "path",
      "description": "Process Code",
      "required": true,
      "type": "string"
    },
    "path_taxType": {
      "name": "taxType",
      "in": "path",
      "description": "Tax Type",
      "required": true,
      "type": "string",
      "enum": [
        "inss",
        "inss-rf",
        "irrf",
        "pis",
        "pis-rf",
        "cofins",
        "cofins-rf",
        "csll",
        "csll-rf",
        "irpj",
        "iss",
        "iss-rf",
        "ipi"
      ]
    },
    "path_stateAbbr": {
      "name": "state",
      "in": "path",
      "description": "Brazilian State",
      "required": true,
      "type": "string",
      "enum": [
        "ac",
        "al",
        "am",
        "ap",
        "ba",
        "ce",
        "df",
        "es",
        "go",
        "ma",
        "mg",
        "ms",
        "mt",
        "pa",
        "pb",
        "pe",
        "pi",
        "pr",
        "rj",
        "rn",
        "ro",
        "rr",
        "rs",
        "sc",
        "se",
        "sp",
        "to"
      ],
      "maxLength": 2
    },
    "query_agastParent": {
      "name": "parent",
      "in": "query",
      "description": "Agast Code",
      "type": "string",
      "maxLength": 60
    },
    "query_itemCode": {
      "name": "code",
      "in": "query",
      "description": "Item Code",
      "type": "string",
      "maxLength": 60
    },
    "query_textQuery": {
      "name": "text",
      "in": "query",
      "description": "Performs text search.",
      "type": "string",
      "maxLength": 40
    },
    "header_AvaTypeGoods": {
      "name": "Avalara-Product-Type",
      "in": "header",
      "description": "Avalara Product Type",
      "type": "string",
      "enum": [
        "goods",
        "service"
      ],
      "default": "goods",
      "required": true
    },
    "header_AvaTypeService": {
      "name": "Avalara-Product-Type",
      "in": "header",
      "description": "Avalara Product Type",
      "type": "string",
      "enum": [
        "goods",
        "service"
      ],
      "default": "service"
    },
    "header_listLimit": {
      "name": "X-Pagination-Limit",
      "in": "header",
      "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
      "type": "integer",
      "format": "int32",
      "default": 10,
      "minimum": 5
    },
    "header_listPage": {
      "name": "X-Pagination-Current-Page",
      "in": "header",
      "type": "integer",
      "format": "int32",
      "description": "The current page. Defaults to 1.",
      "default": 1,
      "minimum": 1
    },
    "header_listSort": {
      "name": "X-Pagination-Sort",
      "in": "header",
      "type": "string",
      "format": "-?\\w+"
    },
    "path_invoiceKey": {
      "name": "key",
      "in": "path",
      "description": "Invoice Key",
      "required": true,
      "type": "string",
      "pattern": "^(\\d{44})$"
    },
    "path_rpsSerie": {
      "name": "serie",
      "in": "path",
      "description": "RPS Serie",
      "required": true,
      "type": "string"
    },
    "path_rpsNumber": {
      "name": "number",
      "in": "path",
      "description": "RPS Number",
      "required": true,
      "type": "integer",
      "format": "int64"
    },
    "query_documentType": {
      "name": "documentType",
      "in": "query",
      "description": "Document Type",
      "type": "string",
      "required": true,
      "enum": [
        "SERVICO",
        "MERCADORIA",
        "TRANSPORTE"
      ]
    },
    "query_startDate": {
      "name": "startDate",
      "in": "query",
      "description": "The start date in range",
      "type": "string",
      "required": true,
      "maxLength": 10
    },
    "query_endDate": {
      "name": "endDate",
      "in": "query",
      "description": "The end date in range",
      "type": "string",
      "required": true,
      "maxLength": 10
    },
    "query_documentSubType": {
      "name": "subType",
      "in": "query",
      "description": "Document Sub-type",
      "type": "string",
      "required": true,
      "enum": [
        "ENTRADA",
        "EMISSAO"
      ]
    },
    "query_federalTaxId": {
      "name": "federalTaxId",
      "in": "query",
      "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}",
      "type": "string",
      "required": true,
      "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?"
    },
    "path_serviceCode": {
      "name": "serviceCode",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "path_icmsCode": {
      "name": "code",
      "in": "path",
      "description": "ICMS Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_ipbtCode": {
      "name": "code",
      "in": "path",
      "description": "IBPT Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_cfopCode": {
      "name": "code",
      "in": "path",
      "description": "CFOP Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "query_stateAbbr": {
      "name": "state",
      "in": "query",
      "description": "Brazilian State",
      "required": false,
      "type": "string",
      "enum": [
        "ac",
        "al",
        "am",
        "ap",
        "ba",
        "ce",
        "df",
        "es",
        "go",
        "ma",
        "mg",
        "ms",
        "mt",
        "pa",
        "pb",
        "pe",
        "pi",
        "pr",
        "rj",
        "rn",
        "ro",
        "rr",
        "rs",
        "sc",
        "se",
        "sp",
        "to"
      ],
      "maxLength": 2
    }
  },
  "definitions": {
    "InformerForGoods": {
      "type": "object",
      "description": "Internal Type used to references all taxes.",
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForGoods"
        },
        "line": {
          "$ref": "#/definitions/LineForGoods"
        },
        "_company": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "_entity": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "emitter": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "receiver": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "transporter": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "csts": {
          "type": "object",
          "properties": {
            "icms": {
              "type": "string",
              "description": "CST-B"
            },
            "ipi": {
              "type": "string",
              "description": "CST-IPI"
            },
            "pisCofins": {
              "type": "string",
              "description": "CST PIS/COFINS"
            }
          }
        },
        "amount": {
          "type": "number"
        },
        "discount": {
          "type": "number"
        },
        "quantity": {
          "type": "number"
        },
        "unitPrice": {
          "type": "number"
        },
        "freightAmount": {
          "type": "number"
        },
        "insuranceAmount": {
          "type": "number"
        },
        "otherCostAmount": {
          "type": "number"
        },
        "exemptValue": {
          "type": "number"
        }
      }
    },
    "EntityInformerForGoods": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "taxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "federalTaxRegime": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "abbr": {
              "type": "string"
            }
          }
        },
        "cityCode": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "details": {
          "type": "object"
        },
        "icmsTaxPayer": {
          "type": "boolean"
        }
      }
    },
    "HeaderForGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/HeaderForGoodsBase"
        },
        {
          "type": "object",
          "required": [
            "participants",
            "transactionType"
          ],
          "properties": {
            "messageType": {
              "type": "string",
              "enum": [
                "goods"
              ],
              "default": "goods"
            },
            "documentCode": {
              "type": "string",
              "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
            },
            "participants": {
              "description": "List of transaction participants, Seller, Buyer, Carrier",
              "type": "object",
              "properties": {
                "entity": {
                  "$ref": "#/definitions/EntityForGoods"
                },
                "transporter": {
                  "$ref": "#/definitions/EntityForGoods"
                }
              }
            },
            "nfAccessKey": {
              "type": "string",
              "description": "This is the public NF id. With this number is possible get invoice information directly from government."
            },
            "nfceQrCode": {
              "type": "string",
              "maxLength": 600,
              "minLength": 100,
              "description": "qr code printed on DANFE;"
            },
            "transactionType": {
              "type": "string",
              "enum": [
                "Sale",
                "Purchase",
                "SalesReturn",
                "PurchaseReturn",
                "TransferReturn",
                "Shipping",
                "ShippingReturn",
                "Transfer",
                "ReceiptAdjustment",
                "TransferAdjustment"
              ],
              "description": "This string indicates the type of transaction for which tax should be calculated."
            },
            "transactionModel": {
              "type": "string",
              "enum": [
                "01",
                "1B",
                "02",
                "2D",
                "2E",
                "04",
                "06",
                "07",
                "08",
                "8B",
                "09",
                "10",
                "11",
                "13",
                "14",
                "15",
                "16",
                "18",
                "21",
                "22",
                "26",
                "27",
                "28",
                "29",
                "55",
                "57",
                "59",
                "60",
                "65"
              ],
              "description": "- '01' # Nota Fiscal 1/1A\n- '1B' # Nota Fiscal Avulsa\n- '02' # Nota Fiscal de Venda a-Consumidor\n- '2D' # Cupom Fiscal\n- '2E' # Cupom Fiscal-Bilhete de Passagem\n- '04' # Nota Fiscal de Produtor\n- '06' # Nota Fiscal/Conta de Energia Elétrica\n- '07' # Nota Fiscal de Serviço de Transporte\n- '08' # Conhecimento de Transporte Rodoviário de-Cargas\n- '8B' # Conhecimento de Transporte de-Cargas Avulso\n- '09' # Conhecimento de Transporte Aquaviário de-Cargas\n- '10' # Conhecimento Aéreo\n- '11' # Conhecimento de Transporte Ferroviário de-Cargas\n- '13' # Bilhete de Passagem Rodoviário\n- '14' # Bilhete de Passagem Aquaviário\n- '15' # Bilhete de Passagem e-Nota de-Bagagem\n- '16' # Bilhete de Passagem Ferroviário\n- '18' # Resumo de Movimento Diário\n- '21' # Nota Fiscal de Serviço de-Comunicação\n- '22' # Nota Fiscal de Serviço de Telecomunicação\n- '26' # Conhecimento de Transporte Multimodal de-Cargas\n- '27' # Nota Fiscal De Transporte Ferroviário De-Carga\n- '28' # Nota Fiscal/Conta de Fornecimento de Gás-Canalizado\n- '29' # Nota Fiscal/Conta de Fornecimento de Água-Canalizada\n- '55' # Nota Fiscal Eletrônica (NF-e)\n- '57' # Conhecimento de Transporte Eletrônico (CT-e)\n- '59' # Cupom Fiscal Eletrônico (CF-e-SAT)\n- '60' # Cupom Fiscal Eletrônico (CF-e-ECF)\n- '65' # Nota Fiscal Eletrônica ao-Consumidor Final (NFC-e)\n"
            },
            "transactionClass": {
              "type": "string",
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "currency": {
              "type": "string",
              "default": "BRL",
              "description": "currency code"
            },
            "shippingDate": {
              "type": "string",
              "description": "This string is the transaction date in ISO 8601 format, when products were shipped, can be empty or absent"
            },
            "additionalInfo": {
              "$ref": "#/definitions/AdditionalInformation"
            },
            "tpImp": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n- '3' # DANFe Simplified;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5"
              ]
            },
            "idDest": {
              "description": "This indicator inform transaction target place, when is AUTOMATIC the company address and entity address are analyzed to identify type of transaction target place\n1- same state; 2 - interstate; 3-with exterior. Exist some cases where is necessary force this situation like when buyer from another state buy something in loco, the address are from different states, but transaction no. \nIdentificador de Local de destino da operação, na opção AUTOMATIC endereços da Companhia e da entidade destino são analisados para\nsaber se é uma operação dentro do mesmo estado, interestadual ou com o exterior. Há situações onde é necessário forçar este indicador como por exemplo \nQuando uma pessoa com endereço em outro estado, compra uma mercadoria de forma presencial, é uma operação interna apesar dos endereços dos envolvidos estarem em estados distintos.\n- 0 # AUTOMATIC - DEFAULT\n- 1 # Interna;\n- 2 # Interestadual;\n- 3 # Exterior)\n",
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3
              ],
              "default": 0
            },
            "indPres": {
              "type": "string",
              "description": "Presence indicator\n- '0' # Not applicable\n- '1' # Presential;\n- '2' # Remote, internet;\n- '3' # Remote, phone;\n- '4' # NFC-e home delivery;\n- '9' # Remote, others\n",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "9"
              ]
            },
            "invoiceNumber": {
              "type": "integer",
              "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)"
            },
            "invoiceSerial": {
              "type": "integer",
              "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)\n"
            },
            "transport": {
              "description": "Shipment",
              "$ref": "#/definitions/Transport"
            },
            "payment": {
              "$ref": "#/definitions/Payment"
            },
            "purchaseInfo": {
              "$ref": "#/definitions/PurchaseInfo"
            },
            "export": {
              "$ref": "#/definitions/ExportInfo"
            }
          }
        }
      ]
    },
    "LineForGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/LineForGoodsBase"
        },
        {
          "type": "object",
          "required": [
            "itemDescription"
          ],
          "properties": {
            "avalaraGoodsAndServicesType": {
              "type": "string",
              "description": "AGAST CODE for itemCode"
            },
            "returnedPercentageAmount": {
              "type": "number",
              "format": "double",
              "description": "when is return operation this field inform the percentage of returned itens. This decimal max 3 integers and 2 decimals, v >=0.00 and v <= 100.00"
            },
            "itemDescription": {
              "type": "string",
              "description": "This string captures the description of the item represented by this line, will be used LC 116"
            },
            "legalReason": {
              "type": "object",
              "description": "Legal Reason for this tax scenario",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Internal ID"
                },
                "name": {
                  "type": "string",
                  "description": "Short name to this message"
                }
              }
            },
            "cfop": {
              "type": "integer",
              "description": "Fiscal Operation Code of transport service"
            },
            "overwrite": {
              "type": "string",
              "enum": [
                "all",
                "cfop",
                "proportional",
                "no"
              ],
              "description": "- 'all' # THE SYSTEM GET ALL INFORMATIONS PASSED IN TRANSACTION\n- 'cfop' # THE SYSTEM DISCOVRE AND REPLACE ONLY CFOP\n- 'proportional' # THE SYSTEM DISCOVER CFOP AND AND USES TAX VALUES FROM REFERENCED TRANSACTION, PROPORTINAL BY QUANTITY\n- 'no' # DEFAULT THE SYSTEM WILL CALCULATED ALL TAXES\n",
              "default": "no"
            },
            "hasStockImpact": {
              "type": "boolean",
              "description": "return if this transaction has stock impact for this process or CFOP"
            },
            "hasFinantialImpact": {
              "type": "boolean",
              "description": "return if this transaction has finantial impact for this process or CFOP"
            },
            "indTotType": {
              "type": "boolean",
              "default": true,
              "description": "The item value will compose the invoice total value."
            },
            "referencedItem": {
              "type": "object",
              "description": "order number, information used for B2B control process",
              "properties": {
                "refNFe": {
                  "type": "string",
                  "maxLength": 44,
                  "pattern": "[0-9]{44}"
                },
                "lineCode": {
                  "type": "integer",
                  "description": "This identifier for this line in the transaction"
                }
              }
            },
            "orderNumber": {
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "description": "order number, information used for B2B control process"
            },
            "orderItemNumber": {
              "type": "string",
              "pattern": "[0-9]{1,6}",
              "description": "number of the item from order number, information used for B2B control process"
            },
            "fciNumber": {
              "type": "string",
              "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
              "description": "Gloal Unique identifier (Importation form)"
            },
            "recopiNumber": {
              "type": "string",
              "maxLength": 20,
              "pattern": "[0-9]{20}",
              "description": "RECOPI number"
            },
            "infAdProd": {
              "type": "string",
              "maxLength": 500,
              "description": "additional information about product (referenced standard, complementary info, etc)"
            },
            "vehicle": {
              "$ref": "#/definitions/Vehicle"
            },
            "medicine": {
              "$ref": "#/definitions/Medicine"
            },
            "weapon": {
              "$ref": "#/definitions/Weapon"
            },
            "fuel": {
              "$ref": "#/definitions/Fuel"
            },
            "export": {
              "description": "Exportation detail",
              "type": "array",
              "maxItems": 500,
              "items": {
                "type": "object",
                "properties": {
                  "drawbackNumber": {
                    "type": "string",
                    "maxLength": 11,
                    "pattern": "[0-9]{0,11}"
                  },
                  "indExport": {
                    "type": "object",
                    "description": "indirect exportation",
                    "required": [
                      "registerNumber",
                      "accessKey",
                      "quantity"
                    ],
                    "properties": {
                      "registerNumber": {
                        "type": "string",
                        "maxLength": 12,
                        "pattern": "[0-9]{0,12}",
                        "description": "Exportation register number"
                      },
                      "accessKey": {
                        "type": "string",
                        "maxLength": 44,
                        "pattern": "[0-9]{44}",
                        "description": "invoice access key received to export"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "This decimal 11 integers and 0 to 4 decimals, quantity exported in real"
                      }
                    }
                  }
                }
              }
            },
            "di": {
              "description": "Import declaration",
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "object",
                "required": [
                  "diNumber",
                  "registerDateDI",
                  "clearanceSite",
                  "clearanceState",
                  "transportDIType",
                  "intermediateType",
                  "adi"
                ],
                "properties": {
                  "customsValue": {
                    "type": "number",
                    "format": "double",
                    "description": "customs value, valor aduaneiro (II Block of NFe)"
                  },
                  "diNumber": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 1,
                    "description": "Import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
                  },
                  "registerDateDI": {
                    "type": "string",
                    "description": "Register date of import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
                  },
                  "clearanceSite": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 1,
                    "description": "Clerance Site\nLocal do desembaraço aduaneiro\n"
                  },
                  "clearanceState": {
                    "$ref": "#/definitions/StateEnum",
                    "description": "Clerance Site State\nEstado onde ocorrreu o desembaraço aduaneiro\n"
                  },
                  "clearanceDate": {
                    "type": "string",
                    "description": "Clerance date"
                  },
                  "transportDIType": {
                    "description": "- '1' # Maritima\n- '2' # Fluvial\n- '3' # Lacustre\n- '4' # Aerea\n- '5' # Postal\n- '6' # Ferroviaria\n- '7' # Rodoviaria\n- '8' # Conduto\n- '9' # Meios Proprios\n- '10' # Entrada/Saida Ficta\n",
                    "type": "string",
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10"
                    ]
                  },
                  "afrmmValue": {
                    "type": "number",
                    "format": "double",
                    "description": "Aditional amount to freight to renew merchant marine, This decimal 13 integers and 2 decimals\n[Valor Adicional ao frete para renovação de marinha mercante]\n"
                  },
                  "intermediateType": {
                    "description": "- '1' # On One's Own [1-por conta propria]\n- '2' # On Behalf And Order [2-por conta e ordem]\n- '3' # Order [3-encomenda]\n",
                    "type": "string",
                    "enum": [
                      "1",
                      "2",
                      "3"
                    ]
                  },
                  "buyerFederalTaxID": {
                    "type": "string",
                    "pattern": "[0-9]{14}",
                    "description": "Buyer federal tax id\nCNPJ do comprador ou encomendante\n"
                  },
                  "buyerState": {
                    "$ref": "#/definitions/StateEnum",
                    "description": "Buyer sate\nEstado do comprador ou encomendante\n"
                  },
                  "exporterCode": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 1,
                    "description": "Exporter code"
                  },
                  "adi": {
                    "type": "array",
                    "maxItems": 100,
                    "description": "aditional import declaration",
                    "items": {
                      "type": "object",
                      "required": [
                        "addNumber",
                        "sequentialNumber",
                        "manufacturerCode"
                      ],
                      "properties": {
                        "addNumber": {
                          "type": "integer",
                          "description": "aditional sequence number (1 to 100)"
                        },
                        "sequentialNumber": {
                          "type": "integer",
                          "description": "sequential item number for this adi, sequence number (1 to 999)"
                        },
                        "manufacturerCode": {
                          "type": "string",
                          "maxLength": 60,
                          "minLength": 1,
                          "description": "Manufatorer erp internal code"
                        },
                        "adiDiscount": {
                          "type": "number",
                          "format": "double",
                          "description": "This decimal 13 integers and 2 decimals, aditional adi discount"
                        },
                        "drawbackNumber": {
                          "type": "string",
                          "pattern": "[0-9]{0,11}",
                          "minLength": 1,
                          "description": "Drawback number"
                        }
                      }
                    }
                  }
                }
              }
            },
            "calculatedTax": {
              "type": "object",
              "properties": {
                "taxByType": {
                  "type": "object",
                  "properties": {
                    "icms": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsSt": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsStSd": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsPartOwn": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsPartDest": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDifaFCP": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDifaDest": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDifaRemet": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsRf": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDeson": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsCredsn": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "pis": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "pisSt": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "cofins": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "cofinsSt": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "ipi": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "ipiReturned": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TaxByTypeTax"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "calcBase": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      ]
                    },
                    "ii": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "iof": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "aproxtribState": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "aproxtribFed": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    }
                  }
                },
                "tax": {
                  "type": "number",
                  "format": "double"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DetailsCalculatedTaxItem"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "Address": {
      "title": "Address",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "zipcode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "description": "Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "[0-9]{7}|0",
              "description": "City Code",
              "default": "0"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "type": "string",
              "description": "State Code",
              "pattern": "^([A-Z]{2,3})$"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$"
            },
            "number": {
              "type": "string",
              "maxLength": 60,
              "description": "House number"
            },
            "complement": {
              "type": "string",
              "maxLength": 60,
              "description": "Any other information about the address (Room, Suite, Floor, etc))."
            },
            "phone": {
              "type": "string",
              "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
              "description": "Phone number"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "zipcode",
            "cityCode",
            "state"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
              "description": "Brazilian Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "^(\\d{7})$",
              "description": "City Code (IBGE)"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "$ref": "#/definitions/StateEnum"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$",
              "default": "BRA"
            }
          }
        },
        {
          "title": "Address",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "zipcode"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "description": "Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "[0-9]{7}|0",
                  "description": "City Code",
                  "default": "0"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "type": "string",
                  "description": "State Code",
                  "pattern": "^([A-Z]{2,3})$"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$"
                },
                "number": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "House number"
                },
                "complement": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Any other information about the address (Room, Suite, Floor, etc))."
                },
                "phone": {
                  "type": "string",
                  "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
                  "description": "Phone number"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "zipcode",
                "cityCode",
                "state"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
                  "description": "Brazilian Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "^(\\d{7})$",
                  "description": "City Code (IBGE)"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "$ref": "#/definitions/StateEnum"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$",
                  "default": "BRA"
                }
              }
            }
          ]
        }
      ]
    },
    "EntityType": {
      "type": "string",
      "enum": [
        "business",
        "individual",
        "federalGovernment",
        "stateGovernment",
        "cityGovernment",
        "foreign"
      ],
      "description": "Entity Type (business, individual, federal government, state government, city government, foreign)"
    },
    "FederalTaxRegime": {
      "type": "string",
      "enum": [
        "realProfit",
        "estimatedProfit",
        "simplified",
        "simplifiedOverGrossthreshold",
        "simplifiedEntrepreneur",
        "notApplicable",
        "individual"
      ],
      "description": "- Federal tax regime\n- realProfit - REAL PROFIT LUCRO REAL\n- estimatedProfit - ESTIMATED PROFIT / LUCRO PRESUMIDO\n- simplified - SIMPLIFIED - OPTANTE TO SIMPLES\n- simplifiedOverGrossthreshold - OPTANTE DO SIMPLES COM LIMITE DE GROSS REVENUE\n- simplifiedEntrepreneur - SIMPLIFIED ENTREPRENEUR / MEI MICRO EMPREENDEDOR INDIVIDUAL \n- notApplicable - Not Applicable 1 \n- individual - INDIVIDUAL / INDIVIDUO\n"
    },
    "StateEnum": {
      "type": "string",
      "maxLength": 2,
      "enum": [
        "AC",
        "AL",
        "AP",
        "AM",
        "BA",
        "CE",
        "DF",
        "ES",
        "GO",
        "MA",
        "MT",
        "MS",
        "MG",
        "PA",
        "PB",
        "PR",
        "PE",
        "PI",
        "RJ",
        "RN",
        "RS",
        "RO",
        "RR",
        "SC",
        "SP",
        "SE",
        "TO"
      ],
      "description": "State Abreviation:\n- 'AC'\n- 'AL'\n- 'AP'\n- 'AM'\n- 'BA'\n- 'CE'\n- 'DF'\n- 'ES'\n- 'GO'\n- 'MA'\n- 'MT'\n- 'MS'\n- 'MG'\n- 'PA'\n- 'PB'\n- 'PR'\n- 'PE'\n- 'PI'\n- 'RJ'\n- 'RN'\n- 'RS'\n- 'RO'\n- 'RR'\n- 'SC'\n- 'SP'\n- 'SE'\n- 'TO'\n"
    },
    "HeaderForGoodsBase": {
      "type": "object",
      "required": [
        "eDocCreatorType",
        "companyLocation"
      ],
      "properties": {
        "participants": {
          "description": "List of transaction participants, Seller, Buyer, Carrier",
          "type": "object",
          "properties": {
            "entity": {
              "$ref": "#/definitions/EntityForGoods"
            },
            "transporter": {
              "$ref": "#/definitions/EntityForGoods"
            }
          }
        },
        "eDocCreatorType": {
          "type": "string",
          "enum": [
            "self",
            "other"
          ],
          "default": "self"
        },
        "eDocCreatorPerspective": {
          "type": "boolean",
          "default": true,
          "description": "This Flag is used only when eDocCreatorType is other and the return show Taxes using eDocCreator perspective or self perspective."
        },
        "companyLocation": {
          "type": "string",
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format, create transaction date"
        },
        "defaultLocations": {
          "$ref": "#/definitions/DefaultLocations"
        },
        "nfRef": {
          "description": "Transactions or other invoices referenced",
          "type": "array",
          "maxItems": 500,
          "items": {
            "$ref": "#/definitions/NRef"
          }
        }
      }
    },
    "EntityForGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "icmsTaxPayer": {
              "type": "boolean",
              "description": "Inform if the entity is ICMS tax payer."
            }
          }
        }
      ]
    },
    "Payment": {
      "type": "object",
      "properties": {
        "installmentsTerms": {
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ],
          "description": "Installment terms\n- 0 # cash\n- 1 # on terms\n- 2 # other\n"
        },
        "bill": {
          "description": "Bill information",
          "type": "object",
          "properties": {
            "nFat": {
              "description": "Bill identifier",
              "type": "string",
              "maxLength": 60,
              "minLength": 1
            },
            "vOrig": {
              "description": "Orignal value",
              "type": "number",
              "format": "double"
            },
            "vDiscount": {
              "description": "Discount",
              "type": "number",
              "format": "double"
            },
            "vNet": {
              "description": "Net value",
              "type": "number",
              "format": "double"
            }
          }
        },
        "installment": {
          "type": "array",
          "maxItems": 120,
          "items": {
            "type": "object",
            "required": [
              "grossValue"
            ],
            "properties": {
              "documentNumber": {
                "type": "string",
                "maxLength": 60,
                "minLength": 1,
                "description": "Instalment number identifier"
              },
              "date": {
                "type": "string",
                "description": "Installment expiration date"
              },
              "grossValue": {
                "type": "number",
                "format": "double",
                "description": "Installment value"
              }
            }
          }
        },
        "paymentMode": {
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "required": [
              "mode",
              "value"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "01",
                  "02",
                  "03",
                  "04",
                  "05",
                  "10",
                  "11",
                  "12",
                  "13",
                  "99"
                ],
                "description": "Payment mode\n- '01' # Dinheiro\n- '02' # Cheque\n- '03' # Cartão de Crédito\n- '04' # Cartão de Débito\n- '05' # Crédito Loja\n- '10' # Vale Alimentação\n- '11' # Vale Refeição\n- '12' # Vale Presente\n- '13' # Vale Combustível\n- '99' # Outros\n"
              },
              "value": {
                "type": "number",
                "format": "double",
                "description": "payment value"
              },
              "cardTpIntegration": {
                "type": "string",
                "enum": [
                  "1",
                  "2"
                ],
                "description": "- '1' # Payment integrated with system,\n- '2' # Payment not integrated with system\n"
              },
              "cardCNPJ": {
                "type": "string",
                "pattern": "[0-9]{14}",
                "description": "Federal tax id of accrediting card (credenciadora do cartão)"
              },
              "cardBrand": {
                "type": "string",
                "enum": [
                  "01",
                  "02",
                  "03",
                  "04",
                  "99"
                ],
                "description": "card brand\n- '01' # Visa\n- '02' # Mastercard\n- '03' # American Express\n- '04' # Sorocred\n- '99' # Other\n"
              },
              "cardAuthorization": {
                "description": "transaction authorization number",
                "type": "string",
                "maxLength": 20,
                "minLength": 1
              }
            }
          }
        }
      }
    },
    "PurchaseInfo": {
      "type": "object",
      "properties": {
        "governmentOrder": {
          "description": "Invoice info for government purchase orders\nInformação da Nota de Empenho de compras públicas\n",
          "type": "string",
          "maxLength": 22,
          "minLength": 1
        },
        "orderNumber": {
          "description": "Order info\nInformação do pedido\n",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        },
        "contractNumber": {
          "description": "Agreement info\nInformação do contrato\n",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        }
      }
    },
    "ExportInfo": {
      "description": "Export information",
      "type": "object",
      "required": [
        "shippingState",
        "place"
      ],
      "properties": {
        "shippingState": {
          "description": "shipping state",
          "$ref": "#/definitions/StateEnum"
        },
        "place": {
          "description": "shipping place",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        },
        "placeDescription": {
          "description": "description of shipping place",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        }
      }
    },
    "Transport": {
      "required": [
        "modFreight"
      ],
      "properties": {
        "modFreight": {
          "type": "string",
          "enum": [
            "CIF",
            "FOB",
            "Thridparty",
            "FreeShipping"
          ],
          "description": "Freight model \n- 0 - CIF, \n- 1 - FOB, \n- 2 - Thrid party,\n- 9 - Free shipping\nwhen 9 - Free shipping, the fields below will be ignored if present\n- 'transporter'\n- 'withholdICMSTransport'\n- 'volumes'\n- 'vehicle'\n"
        },
        "withholdICMSTransport": {
          "type": "boolean",
          "description": "Forces witholding of ICMS on transport amount (freight)"
        },
        "volumes": {
          "type": "array",
          "maxItems": 5000,
          "description": "Packages",
          "items": {
            "type": "object",
            "properties": {
              "qVol": {
                "type": "string",
                "pattern": "[0-9]{1,15}",
                "description": "Quantity of packages transported"
              },
              "specie": {
                "type": "string",
                "minLength": 1,
                "maxLength": 60,
                "description": "package type"
              },
              "brand": {
                "type": "string",
                "minLength": 1,
                "maxLength": 60,
                "description": "brand"
              },
              "volumeNumeration": {
                "type": "string",
                "minLength": 1,
                "maxLength": 60,
                "description": "packages numeration"
              },
              "netWeight": {
                "type": "number",
                "format": "double",
                "description": "net weight using Kg"
              },
              "grossWeight": {
                "type": "number",
                "format": "double",
                "description": "gross weight using Kg"
              },
              "seal": {
                "type": "array",
                "maxItems": 5000,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "vehicle": {
          "$ref": "#/definitions/VehicleTransp"
        }
      }
    },
    "AdditionalInformation": {
      "type": "object",
      "properties": {
        "fiscalInfo": {
          "type": "string",
          "maxLength": 2000,
          "pattern": "[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}",
          "description": "Additional information of fiscal interest"
        },
        "complementaryInfo": {
          "type": "string",
          "maxLength": 5000,
          "pattern": "[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}",
          "description": "Additional information of user interest"
        },
        "procRef": {
          "description": "Referenced Process",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "properties": {
              "nProc": {
                "type": "string",
                "maxLength": 60,
                "description": "Process Identifier"
              },
              "indProc": {
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "9"
                ],
                "description": "Process Origin\n- '0' # SEFAZ;\n- '1' # Justiça Federal;\n- '2' # Justiça Estadual;\n- '3' # Secex/RFB;\n- '9' # Outros\n"
              }
            }
          }
        }
      }
    },
    "NRef": {
      "description": "Referenced Invoices\nThe invoice can be one of this types,\n- 'refNFe - Eletronic Invoice'\n- 'refCTE - Transport Invoice'\n- 'refECF - Reatail Cupom'\n- 'refNF  - Invoice model 1 or 1A'\n- 'refFarmerNF - farmer invoice'\n",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "refNFe",
            "refCTE",
            "refECF",
            "refNF",
            "refFarmerNF"
          ]
        },
        "refNFe": {
          "type": "string",
          "maxLength": 44,
          "pattern": "[0-9]{44}"
        },
        "refCTe": {
          "type": "string",
          "maxLength": 44,
          "pattern": "[0-9]{44}"
        },
        "refECF": {
          "type": "object",
          "required": [
            "nECF",
            "nCOO",
            "modECF"
          ],
          "properties": {
            "nECF": {
              "description": "ECF Sequential number that generated Cupom attached to NFe\ninformar o número de ordem seqüencial do ECF que emitiu o Cupom Fiscal vinculado à NF-e\n",
              "type": "string",
              "pattern": "[0-9]{1,3}"
            },
            "nCOO": {
              "description": "Operational counter number attached to NFe\nInformar o Número do Contador de Ordem de Operação - COO vinculado à NF-e\n",
              "type": "string",
              "pattern": "[0-9]{1,6}"
            },
            "modECF": {
              "description": "Fiscal document model\n- '2B' # coupon tax not ECF\n- '2C' # PDV coupon tax\n- '2D' # ECF coupon tax\n",
              "type": "string",
              "enum": [
                "2B",
                "2C",
                "2D"
              ]
            }
          }
        },
        "refNF": {
          "type": "object",
          "required": [
            "stateCd",
            "yymm",
            "federalTaxId",
            "serie",
            "number"
          ],
          "properties": {
            "stateCd": {
              "description": "State code of fiscal Document creator",
              "$ref": "#/definitions/StateEnum"
            },
            "yymm": {
              "description": "year and month of fiscal document creation",
              "type": "string",
              "pattern": "[0-9]{2}[0]{1}[1-9]{1}|[0-9]{2}[1]{1}[0-2]{1}"
            },
            "federalTaxId": {
              "description": "fiscal document creator federalTaxId",
              "type": "string",
              "pattern": "[0-9]{14}"
            },
            "serie": {
              "description": "fiscal document serie",
              "type": "string",
              "pattern": "0|[1-9]{1}[0-9]{0,2}"
            },
            "number": {
              "description": "fiscal document number",
              "type": "string",
              "pattern": "[1-9]{1}[0-9]{0,8}"
            }
          }
        },
        "refFarmerNF": {
          "type": "object",
          "required": [
            "stateCd",
            "yymm",
            "federalTaxId",
            "stateTaxId",
            "model",
            "serie",
            "number"
          ],
          "properties": {
            "stateCd": {
              "description": "State code of fiscal Document creator, farmer",
              "$ref": "#/definitions/StateEnum"
            },
            "yymm": {
              "description": "year and month of fiscal document creation",
              "type": "string",
              "pattern": "[0-9]{2}[0]{1}[1-9]{1}|[0-9]{2}[1]{1}[0-2]{1}"
            },
            "federalTaxId": {
              "description": "fiscal document creator farmer federalTaxId",
              "type": "string",
              "pattern": "[0-9]{14}"
            },
            "stateTaxId": {
              "description": "fiscal document creator, farmer stateTaxId",
              "type": "string",
              "pattern": "[0-9]{14}"
            },
            "model": {
              "description": "Document Fiscal model\n- '04' # FARMER DOCUMENT\n- '01' # DETACHED DOCUMENT - AVULSO\n",
              "type": "string",
              "enum": [
                "04",
                "01"
              ]
            },
            "serie": {
              "description": "fiscal document serie",
              "type": "string",
              "pattern": "0|[1-9]{1}[0-9]{0,2}"
            },
            "number": {
              "description": "fiscal document number",
              "type": "string",
              "pattern": "[1-9]{1}[0-9]{0,8}"
            }
          }
        }
      }
    },
    "DefaultLocations": {
      "type": "object",
      "description": "This element contains a dictionary of locations such as the origin and destination addresses to be associated with this transaction. These locations may be overridden within each line item. The key for each location in the dictionary is the location 'purpose'. Valid locations purposes are 'ShipFrom', 'ShipTo', 'POS', 'POM', 'POO', 'BillingLocation', 'CallPlaced', 'CallReceived', 'ServiceRendered', 'POA' and 'FirstUse'. There can only be one location of a given purpose in the dictionary.",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EntityLocation"
        },
        "company": {
          "$ref": "#/definitions/EntityLocation"
        },
        "transporter": {
          "$ref": "#/definitions/EntityLocation"
        },
        "deliveryLocation": {
          "$ref": "#/definitions/EntityLocation"
        },
        "pickupLocation": {
          "$ref": "#/definitions/EntityLocation"
        }
      }
    },
    "Entity": {
      "type": "object",
      "required": [
        "type",
        "federalTaxId"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity name, official name (Razão Social)"
        },
        "role": {
          "description": "- 'transporter'\n- 'sender' # REMETENTE\n- 'dispatcher' # EXPEDITOR\n- 'receiver' # RECEIVER\n- 'addressee' # DESTINATÁRIO\n- 'other' # OUTRO\n",
          "type": "string",
          "enum": [
            "transporter",
            "sender",
            "dispatcher",
            "receiver",
            "addressee",
            "other"
          ]
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "federalTaxId": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "pattern": "[0-9]{2,14}|ISENTO",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "taxRegime": {
          "type": "string",
          "enum": [
            "realProfit",
            "estimatedProfit",
            "simplified",
            "simplifiedOverGrossthreshold",
            "simplifiedEntrepreneur",
            "notApplicable",
            "individual"
          ]
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Companies subject to follow same rules of Government entities (Instrução Normativa SRF1234)"
        },
        "subjectToPayrollTaxRelief": {
          "type": "boolean",
          "description": "Sujeito à desoneração de folha de pagamento."
        }
      }
    },
    "EntityLocation": {
      "title": "Address",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "zipcode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "description": "Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "[0-9]{7}|0",
              "description": "City Code",
              "default": "0"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "type": "string",
              "description": "State Code",
              "pattern": "^([A-Z]{2,3})$"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$"
            },
            "number": {
              "type": "string",
              "maxLength": 60,
              "description": "House number"
            },
            "complement": {
              "type": "string",
              "maxLength": 60,
              "description": "Any other information about the address (Room, Suite, Floor, etc))."
            },
            "phone": {
              "type": "string",
              "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
              "description": "Phone number"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "zipcode",
            "cityCode",
            "state"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
              "description": "Brazilian Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "^(\\d{7})$",
              "description": "City Code (IBGE)"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "$ref": "#/definitions/StateEnum"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$",
              "default": "BRA"
            }
          }
        },
        {
          "title": "Address",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "zipcode"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "description": "Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "[0-9]{7}|0",
                  "description": "City Code",
                  "default": "0"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "type": "string",
                  "description": "State Code",
                  "pattern": "^([A-Z]{2,3})$"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$"
                },
                "number": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "House number"
                },
                "complement": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Any other information about the address (Room, Suite, Floor, etc))."
                },
                "phone": {
                  "type": "string",
                  "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
                  "description": "Phone number"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "zipcode",
                "cityCode",
                "state"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
                  "description": "Brazilian Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "^(\\d{7})$",
                  "description": "City Code (IBGE)"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "$ref": "#/definitions/StateEnum"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$",
                  "default": "BRA"
                }
              }
            }
          ]
        }
      ]
    },
    "VehicleTransp": {
      "type": "object",
      "description": "Identify type of vehicle used to transport\nthe attributes, except atribute type,  follow rule oneOf then only one of this atributes will be informed.\n",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "automobile",
            "wagon",
            "ferry",
            "trailer"
          ]
        },
        "automobile": {
          "$ref": "#/definitions/VehicleID"
        },
        "trailer": {
          "description": "Trailer",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/VehicleID"
          }
        },
        "wagon": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "ferry": {
          "description": "Ferry",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        }
      }
    },
    "VehicleID": {
      "type": "object",
      "required": [
        "licensePlate",
        "stateCode"
      ],
      "properties": {
        "licensePlate": {
          "type": "string",
          "pattern": "[A-Z]{2,3}[0-9]{4}|[A-Z]{3,4}[0-9]{3}"
        },
        "stateCode": {
          "$ref": "#/definitions/StateEnum"
        },
        "rtnc": {
          "type": "string",
          "maxLength": 20,
          "description": "Cargo Transport National Register, Registro Nacional de Transportador de Carga (ANTT)"
        }
      }
    },
    "LineForGoodsBase": {
      "type": "object",
      "required": [
        "lineCode",
        "itemCode",
        "numberOfItems",
        "lineAmount",
        "useType",
        "processScenario"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This is unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "maxLength": 60,
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states."
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal 11 integers and 1 to 4 decimals captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "This decimal 11 integers and 1 to 10 decimals captures the unit price of this line."
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "In its simplest form lineAmount = (item price * numberOfItems). If taxIncluded is 'true', lineAmount = (item price * numberOfItems + tax)."
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Discount conditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "discount unconditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "useType": {
          "type": "string",
          "enum": [
            "use or consumption",
            "resale",
            "agricultural production",
            "production",
            "use or consumption on business establishment",
            "use or consumption on transporter service establishment",
            "use or consumption on communication service establishment",
            "use or consumption on demand by contract",
            "use or consumption on energy supplier establishment",
            "use or consumption of fuel transaction type exportation",
            "use or consumption on services",
            "fixed assets",
            "resale export",
            "resale icms exempt",
            "resale buyer under the same icmsSt tax rule",
            "transport of goods that don't need invoice (nf)"
          ],
          "description": "This is a enumeration folowing table"
        },
        "processScenario": {
          "type": "string",
          "maxLength": 60,
          "description": "Reference to process configurantion of this transaction, See ProcessScenario definition\nthis property is used only if eDocCreator=self or  eDocCreator=others and eDocCreatorPerspective=true\n"
        },
        "operationTypeReceiptMap": {
          "type": "string",
          "maxLength": 60,
          "description": "Mapping table used to discover the CFOP when execute the Tax receipt in funciotn of CFOP Received and Item Type\nthis property is used only if eDocCreator=others and eDocCreatorPerspective=false\n"
        },
        "freightAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "insuranceAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "otherCostAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "entityIsIcmsSubstitute": {
          "type": "boolean",
          "description": "Inform that for this item the Entity referenced is ICMS Substitute"
        },
        "isTransportIcmsWithheld": {
          "type": "boolean",
          "description": "Inform that this item has ICMS withheld for transport value service."
        },
        "icmsTaxRelief": {
          "type": "object",
          "required": [
            "reasonCode"
          ],
          "properties": {
            "reasonCode": {
              "type": "string",
              "enum": [
                "1",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "16"
              ],
              "description": "When item transaction subject to desoneration, this is the reason code\n- '1' # Táxi;\n- '3' # Produtor Agropecuário;\n- '4' # Frotista/Locadora;\n- '5' # Diplomático/Consular;\n- '6' # Utilitários e Motocicletas da Amazônia Ocidental e Áreas de Livre Comércio (Resolução 714/88 e 790/94 – CONTRAN e suas alterações);\n- '7' # SUFRAMA;\n- '8' # Venda a órgão Público;\n- '9' # Outros\n- '10' # Deficiente Condutor\n- '11' # Deficiente não condutor\n- '12' # Fomento agropecuário\n- '16' # Olimpíadas Rio 2016\n"
            },
            "taxBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS Tax base rate discount  (desconto na base do ICMS referetne a desoneração)"
            },
            "taxAmount": {
              "type": "number",
              "format": "double",
              "description": "Amount for Icms Relief (desoneração)"
            }
          }
        }
      }
    },
    "DetailsCalculatedTaxItem": {
      "allOf": [
        {
          "$ref": "#/definitions/DetailsCalculatedTax"
        },
        {
          "type": "object",
          "description": "Details",
          "properties": {
            "source": {
              "$ref": "#/definitions/CSTTableAEnum"
            },
            "cstB": {
              "$ref": "#/definitions/CSTTableBEnum"
            },
            "cst": {
              "type": "string"
            },
            "modBC": {
              "type": "string"
            },
            "pMVA": {
              "type": "number",
              "format": "double",
              "description": "Percent of Value-added margin (%)"
            },
            "pRedBC": {
              "type": "number",
              "format": "double",
              "description": "calc base percent of discount"
            },
            "pBCOp": {
              "type": "number",
              "format": "double",
              "description": "percent of calc base of own icms"
            },
            "ufst": {
              "$ref": "#/definitions/StateEnum"
            },
            "calcMode": {
              "$ref": "#/definitions/CalcModelEnum"
            },
            "legalTaxClass": {
              "type": "integer",
              "description": "Legal tax classificação for IPI (enquadramento tributário)"
            },
            "legalTaxClassDC": {
              "type": "integer",
              "description": "Legal tax classificação for IPI (enquadramento) for Drinks and Cigarettes"
            },
            "cnpjProd": {
              "type": "string",
              "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
              "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'\nFederal tax ID of real manufacturer, nly for exportation\n"
            },
            "sealCode": {
              "type": "string",
              "maxLength": 60,
              "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
            },
            "sealQuantity": {
              "type": "string",
              "pattern": "[0-9]{1,12}",
              "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
            },
            "icmsInterPartRate": {
              "type": "number",
              "format": "double",
              "description": "percent of icms apportionment between two states"
            },
            "icmsSesonReason": {
              "$ref": "#/definitions/ICMSSesonReason"
            },
            "perQuantityReturned": {
              "type": "number",
              "format": "double",
              "description": "percent of merchandise returned"
            }
          }
        }
      ]
    },
    "TaxByTypeTax": {
      "type": "object",
      "required": [
        "tax"
      ],
      "properties": {
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Tax value, negative value for withhold value"
        }
      }
    },
    "Vehicle": {
      "type": "object",
      "required": [
        "tpOp",
        "chassisNumber",
        "colorCode",
        "colorName",
        "cvPower",
        "cylinderVolumCC",
        "netWeight",
        "grossWeight",
        "serialNumber",
        "fuelType",
        "engineNumber",
        "cmt",
        "lengthBetweenAxis",
        "modelYear",
        "manufactoryYear",
        "paintType",
        "vehicleRENAVAMType",
        "specieRENAVAMType",
        "modelRENAVAMCode",
        "colorDENATRANCode",
        "vin",
        "vehicleManufactoryStatus",
        "maxOccupantsQuantity",
        "restrictionType"
      ],
      "properties": {
        "tpOp": {
          "description": "- 1 # Sales by car dealership\n- 2 # Direct billing\n- 3 # Direct sales\n- 0 # Other\n",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            0
          ]
        },
        "chassisNumber": {
          "type": "string",
          "maxLength": 17,
          "pattern": "[A-Z0-9]+"
        },
        "colorCode": {
          "type": "string",
          "maxLength": 17,
          "description": "color code used by factory"
        },
        "colorName": {
          "type": "string",
          "maxLength": 40,
          "description": "color name"
        },
        "cvPower": {
          "type": "string",
          "maxLength": 4,
          "description": "Power using CV unid"
        },
        "cylinderVolumCC": {
          "type": "string",
          "maxLength": 4,
          "description": "engine size in cubic centimeters"
        },
        "netWeight": {
          "type": "string",
          "maxLength": 9,
          "description": "net weight"
        },
        "grossWeight": {
          "type": "string",
          "maxLength": 9,
          "description": "gross weight"
        },
        "serialNumber": {
          "type": "string",
          "maxLength": 9,
          "description": "serie"
        },
        "fuelType": {
          "description": "- '01' # Alcohol\n- '02' # Gas\n- '03' # Diesel\n- '16' # Alcohol/Gas\n- '17' # Gas/Alcohol/GNV\n- '18' # Gas/Electric\n",
          "type": "string",
          "enum": [
            "01",
            "02",
            "03",
            "16",
            "17",
            "18"
          ]
        },
        "engineNumber": {
          "type": "string",
          "maxLength": 21,
          "description": "engine number"
        },
        "cmt": {
          "type": "string",
          "maxLength": 9,
          "description": "traction capacity, tonne"
        },
        "lengthBetweenAxis": {
          "type": "string",
          "maxLength": 4,
          "description": "length between axis"
        },
        "modelYear": {
          "type": "string",
          "pattern": "[0-9]{4}",
          "description": "model year"
        },
        "manufactoryYear": {
          "type": "string",
          "pattern": "[0-9]{4}",
          "description": "year of factory"
        },
        "paintType": {
          "type": "string",
          "maxLength": 1,
          "description": "paynt type"
        },
        "vehicleRENAVAMType": {
          "type": "string",
          "pattern": "[0-9]{1,2}"
        },
        "specieRENAVAMType": {
          "type": "string",
          "pattern": "[0-9]{1}"
        },
        "modelRENAVAMCode": {
          "type": "string",
          "pattern": "[0-9]{1,6}"
        },
        "colorDENATRANCode": {
          "description": "- '01' # YELLOW\n- '02' # BLUE\n- '03' # BEIGE\n- '04' # WHITE\n- '05' # GRAY\n- '06' # GOLDEN\n- '07' # GRENA\n- '08' # ORANGE\n- '09' # BROWN\n- '10' # SILVER\n- '11' # BLACK\n- '12' # PINK\n- '13' # PURPLE\n- '14' # GREEN\n- '15' # RED\n- '16' # FANTASY\n",
          "type": "string",
          "pattern": "[0-9]{1,2}",
          "enum": [
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16"
          ]
        },
        "vin": {
          "type": "string",
          "enum": [
            "R",
            "N"
          ],
          "description": "chassis condition original or modified (remarcado)"
        },
        "vehicleManufactoryStatus": {
          "description": "- '1' # Finished(Done)\n- '2' # Not finished\n- '3' # Semi-finished\n",
          "type": "string",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "maxOccupantsQuantity": {
          "type": "string",
          "maxLength": 3,
          "format": "[0-9]{1,3}",
          "description": "max number of sit occupants"
        },
        "restrictionType": {
          "description": "Lien/restriction type\n- '0' # No one;\n- '1' # Alienação Fiduciária;\n- '2' # Arrendamento Mercantil;\n- '3' # Reserva de Domínio;\n- '4' # Penhor de Veículos;\n- '9' # Other.\n",
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "9"
          ]
        }
      }
    },
    "Medicine": {
      "type": "object",
      "required": [
        "loteNumber",
        "loteQuantity",
        "manufactotyDate",
        "expirationDate",
        "maxValueToEndUser"
      ],
      "properties": {
        "loteNumber": {
          "type": "string",
          "maxLength": 20
        },
        "loteQuantity": {
          "type": "number",
          "format": "double",
          "description": "This is a decimal type with 11 digits including 3 decimal positions."
        },
        "manufactotyDate": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "maxValueToEndUser": {
          "type": "number",
          "format": "double",
          "description": "This is a decimal type with 15 digits including 2 decimal positions.  Max value to end user."
        }
      }
    },
    "Weapon": {
      "type": "object",
      "required": [
        "weaponRestrictionType",
        "serieNumber",
        "gunBarrelSerieNumber",
        "weaponDescription"
      ],
      "properties": {
        "weaponRestrictionType": {
          "description": "- '0' # restrict use\n- '1' # public use\n",
          "type": "string",
          "enum": [
            "0",
            "1"
          ]
        },
        "serieNumber": {
          "type": "string",
          "maxLength": 15
        },
        "gunBarrelSerieNumber": {
          "type": "string",
          "maxLength": 15,
          "description": "Barrel's serial number.\nNúmero de série do cano\n"
        },
        "weaponDescription": {
          "type": "string",
          "maxLength": 256,
          "description": "weapon description"
        }
      }
    },
    "Fuel": {
      "type": "object",
      "required": [
        "prodANPCode",
        "stateCodeOfUndUser"
      ],
      "properties": {
        "prodANPCode": {
          "type": "string",
          "pattern": "[0-9]{9}"
        },
        "perMixGN": {
          "type": "number",
          "format": "double",
          "description": "percentage of natural gas (GLP)"
        },
        "authorizationCodeCODIF": {
          "type": "string",
          "pattern": "[0-9]{1,21}"
        },
        "quantityOnRoomTemperature": {
          "type": "number",
          "format": "double",
          "description": "This decimal 12 integers and 0 to 4 decimals\nQuantidade de combustível faturada à temperatura ambiente.\nInformar quando a quantidade faturada informada no campo qCom (I10) tiver sido ajustada para\numa temperatura diferente da ambiente.\n"
        },
        "stateCodeOfUndUser": {
          "$ref": "#/definitions/StateEnum",
          "description": "state where fuel was used"
        },
        "cide": {
          "type": "object",
          "required": [
            "baseCalcCIDE",
            "rateCIDE",
            "valueCIDE"
          ],
          "properties": {
            "baseCalcCIDE": {
              "type": "number",
              "format": "double",
              "description": "percentage of natural gas (GLP), this decimal 12 integers and 0 to 4 decimals"
            },
            "rateCIDE": {
              "type": "number",
              "format": "double",
              "description": "percentage of natural gas (GLP), this decimal 11 integers and 0 to 4 decimals - R$"
            },
            "valueCIDE": {
              "type": "number",
              "format": "double",
              "description": "percentage of natural gas (GLP), this decimal 13 integers and 2 decimals - R$"
            }
          }
        },
        "pumpNumber": {
          "type": "object",
          "required": [
            "nozzleNumberFuelSupply",
            "fuelPumpNumber",
            "fuelTankNumber",
            "startValueOfPumpNumber",
            "endValueOfPumpNumber"
          ],
          "properties": {
            "nozzleNumberFuelSupply": {
              "type": "string",
              "pattern": "[0-9]{1,3}",
              "description": "Identification number of nozzle used in the dispensing process.  \nNumero de identificação do Bico utilizado no abastecimento\n"
            },
            "fuelPumpNumber": {
              "type": "string",
              "pattern": "[0-9]{1,3}",
              "description": "Identification number of the Pump connect to the used nozzle.  \nNumero de identificação da bomba ao qual o bico está interligado\n"
            },
            "fuelTankNumber": {
              "type": "string",
              "pattern": "[0-9]{1,3}",
              "description": "Identification number of the Pump connect to the used nozzle.  \nNumero de identificação da bomba ao qual o bico está interligado\n"
            },
            "startValueOfPumpNumber": {
              "type": "number",
              "format": "double",
              "description": "Valor do Encerrante no ínicio do abastecimento. \nReading of auto-counter (encerrante) at the start of the refueling/dispensing.\nThis decimal 12 integers and 3 decimals - R$\n"
            },
            "endValueOfPumpNumber": {
              "type": "number",
              "format": "double",
              "description": "Valor do Encerrante no final do abastecimento. \nReading of auto-counter (encerrante) at the end of the refueling/dispensing.\nThis decimal 12 integers and 3 decimals - R$\n"
            }
          }
        }
      }
    },
    "DetailsCalculatedTax": {
      "type": "object",
      "properties": {
        "locationType": {
          "type": "string",
          "description": "This string captures the applicable location type. Location used for calc. Buyer or Seller"
        },
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n",
          "default": "Country"
        },
        "taxImpact": {
          "type": "object",
          "properties": {
            "impactOnFinalPrice": {
              "type": "string",
              "enum": [
                "Add",
                "Included",
                "Subtracted",
                "Informative"
              ]
            },
            "impactOnNetAmount": {
              "type": "string",
              "enum": [
                "Add",
                "Included",
                "Subtracted",
                "Informative"
              ]
            },
            "accounting": {
              "type": "string",
              "description": "Escrituração",
              "enum": [
                "liability",
                "asset",
                "none"
              ]
            }
          }
        },
        "taxType": {
          "type": "string",
          "enum": [
            "icms",
            "icmsSt",
            "icmsStSd",
            "icmsPartOwn",
            "icmsPartDest",
            "icmsDifaFCP",
            "icmsDifaDest",
            "icmsDifaRemet",
            "icmsRf",
            "icmsDeson",
            "icmsCredsn",
            "pis",
            "pisSt",
            "cofins",
            "cofinsSt",
            "ipi",
            "ipiReturned",
            "ii",
            "iof",
            "aproxtribCity",
            "aproxtribState",
            "aproxtribFed",
            "aproxtrib"
          ],
          "description": "Tax identificator"
        },
        "rateType": {
          "type": "string",
          "description": "Name of configuration rate"
        },
        "scenario": {
          "type": "string",
          "description": "This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in."
        },
        "subtotalTaxable": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "legalReason": {
          "type": "object",
          "description": "Legal Reason for this tax scenario",
          "properties": {
            "id": {
              "type": "string",
              "description": "Internal ID"
            },
            "name": {
              "type": "string",
              "description": "Short name to this message"
            }
          }
        },
        "significantLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This element captures the list of locations that contributed to the tax determination. for Service is Buyer and Seller Address"
        },
        "taxRuleType": {
          "type": "string",
          "enum": [
            "SELLER",
            "BUYER",
            "TRANSACTION",
            "ITEM",
            "TAX"
          ],
          "description": "This string with type of rule"
        }
      }
    },
    "CalcModelEnum": {
      "type": "string",
      "enum": [
        "rate",
        "quantity"
      ]
    },
    "CSTPistCofinsEnum": {
      "type": "string",
      "enum": [
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "49",
        "50",
        "51",
        "52",
        "53",
        "54",
        "55",
        "56",
        "60",
        "61",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "70",
        "71",
        "72",
        "73",
        "74",
        "75",
        "98",
        "99"
      ],
      "description": "Use to determined how the tax is applicable and calculated. It may define and exemption, a tax base reduction, identify that a special rate is applicable (not the rate itself).\n- '01' # Operação Tributável com Alíquota Básica\n- '02' # Operação Tributável com Alíquota Diferenciada\n- '03' # Operação Tributável com Alíquota por Unidade de Medida de Produto\n- '04' # Operação Tributável Monofásica - 'Revenda a Alíquota Zero\n- '05' # Operação Tributável por Substituição Tributária\n- '06' # Operação Tributável a Alíquota Zero\n- '07' # Operação Isenta da Contribuição\n- '08' # Operação sem Incidência da Contribuição\n- '09' # Operação com Suspensão da Contribuição\n- '49' # Outras Operações de Saída\n- '50' # Operação com Direito a Crédito - 'Vinculada Exclusivamente a Receita Tributada no Mercado Interno\n- '51' # Operação com Direito a Crédito – Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno\n- '52' # Operação com Direito a Crédito - 'Vinculada Exclusivamente a Receita de Exportação\n- '53' # Operação com Direito a Crédito - 'Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno\n- '54' # Operação com Direito a Crédito - 'Vinculada a Receitas Tributadas no Mercado Interno e de Exportação\n- '55' # Operação com Direito a Crédito - 'Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação\n- '56' # Operação com Direito a Crédito - 'Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação\n- '60' # Crédito Presumido - 'Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno\n- '61' # Crédito Presumido - 'Operação de Aquisição Vinculada Exclusivamente a Receita Não-Tributada no Mercado Interno\n- '62' # Crédito Presumido - 'Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação\n- '63' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno\n- '64' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação\n- '65' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação\n- '66' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação\n- '67' # Crédito Presumido - 'Outras Operações\n- '70' # Operação de Aquisição sem Direito a Crédito\n- '71' # Operação de Aquisição com Isenção\n- '72' # Operação de Aquisição com Suspensão\n- '73' # Operação de Aquisição a Alíquota Zero\n- '74' # Operação de Aquisição sem Incidência da Contribuição\n- '75' # Operação de Aquisição por Substituição Tributária\n- '98' # Outras Operações de Entrada\n- '99' # Outras Operações\n"
    },
    "CSTTableAEnum": {
      "type": "string",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ],
      "description": "Source of product or merchandise,\n- '0' # National goods - 'except those treated in codes 3,4, 5 and 8\n- '1' # Imported directly by seller, except those in code 6\n- '2' # Foreign goods - 'Acquired in the internal market (inside Brazil), except those in code 7\n- '3' # Merchandise or goods with imported content above 40% and with less than or equal to 70%\n- '4' # National goods from production following 'standard basic processes' as stablished by legislation (standard basic processes are devised to separate simple assembly from manufaturing processes)\n- '5' # National goods - 'Merchandise or goods with imported content equal or below 40%\n- '6' # Foreign goods - 'Directly imported by Seller, without a National Equivalent as listed by Comex and natural gas\n- '7' # Foreign goods - 'Acquired inside Brazil, without a National Equivalent  as listed by Comex and natural gas\n- '8' # Merchandise or goods with imported content above 70%\n"
    },
    "CSTTableBEnum": {
      "type": "string",
      "enum": [
        "00",
        "10",
        "20",
        "30",
        "40",
        "41",
        "50",
        "51",
        "60",
        "70",
        "90"
      ],
      "description": "Use to determined how the tax is applicable and calculated. It may define and exemption, a tax base reduction, identify that a special rate is applicable (not the rate itself).\n- '00' # Taxed in its totality\n- '10' # Taxed and subject to tax substitution (ICMS ST)\n- '20' # Taxed with Tax Base Reduction\n- '30' # Exempt /Not Taxed and subject to tax Substitution (ICMS#ST)\n- '40' # Tax Exempt\n- '41' # Not Taxed\n- '50' # Taxes Suspended\n- '51' # Taxes Diferred\n- '60' # ICMS Tax already collected through Substituition (ICMS ST)\n- '70' # Taxed with Tax Base Reduction and subject to Tax Subsititution (ICMS ST)\n- '90' # Others\n"
    },
    "ICMSSesonReason": {
      "description": "- '0' # NO ICMS TAX RELIEF\n- '1' # TAXI\n- '3' # AGRICULTURAL PRODUCTION\n- '4' # FLEET OWNERS\n- '5' # DIPLOMATIC MISSIONS\n- '6' # VEHICLE AND MOTORCICLE OF FREE ZONE AREA AND OCIDENTAL AMAZON\n- '7' # SUFRAMA\n- '8' # SALES TO GOVERNMENT\n- '9' # OTHERS\n- '10' # DISABLED PERSON DRIVER\n- '11' # DISABLED PERSON NOT DRIVER\n",
      "type": "string",
      "enum": [
        "0",
        "1",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "AccountCompany": {
      "type": "object",
      "required": [
        "companyId",
        "companyCode"
      ],
      "properties": {
        "companyId": {
          "type": "string",
          "format": "uuid"
        },
        "companyCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        }
      }
    },
    "Company": {
      "type": "object",
      "required": [
        "code",
        "officialName",
        "name",
        "entityType",
        "federalTaxRegime"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60,
          "description": "string is a code maintained by the client application to uniquely identify the company for which this transaction is being recorded. It is unique within the context of an Account. It will be limited to 60 characters when creating a Company"
        },
        "officialName": {
          "type": "string",
          "maxLength": 150,
          "description": "Official Company name (Razão Social)"
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "description": "Company name (DBA - Nome de Fantasia),  Used to identify branches/subsidiaries with same name"
        },
        "entityType": {
          "$ref": "#/definitions/EntityType"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Company has participation of state-owned capital (it will be considerated like a government entity)"
        },
        "federalTaxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "pisSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "cofinsSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "csllSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "receiptsAreFullNoCumulativePisCofins": {
          "type": "boolean",
          "description": "When th company is REAL PROFIT usually it operates under a Non-Cumulative PIS/COFINS regime\nBut exist some services that are always Cumulative regime.\nIf the company has all receipts from Non-Cumulative services this flag will be set to True.\nThis flag informs special conditions to credit of PIS/COFINS when this company is out of Free zone and  purchases from Free Zone Company\nQuando uma empresa fora da Zona Franca adquire uma produto ou serviço de uma empresa situada na Zona Franca de Manaus, o crédito de PIS E COFINS segue estas aliquotas diferenciadas.\nFundamentação, art. 5º da Instrução Normativa SRF nº 546/2005; art. 3º, § 12 da Lei nº 10.637/2002; art. 3º, § 17 da Lei nº 10.833/2003; art. 4º da Lei nº 11.307/2006.\nDESTINATÁRIO ALÍQUOTAS.\nPIS COFINS\na) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure a Contribuição para o PIS/PASEP no regime de não-cumulatividade débito 0,65% 3% crédito 1% 4,6%\nc) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure o imposto de renda com base no lucro real e que tenha sua receita, total ou parcialmente, excluída do regime de incidência não-cumulativa da Contribuição para o PIS/PASEP débito 1,3% 6% crédito 1,65% 7,6%\n"
        },
        "inssWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withholding INSS this Flag can be set to True"
        },
        "issWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withhold ISS this Flag can be set to True"
        },
        "irrfWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, if this flag is FALSE, the system will not withhold IRRF.\nif this flag is TRUE the system will analise other rules to define if will have witholding\n"
        },
        "icmsRateForSimplestaxregime": {
          "type": "number",
          "format": "double",
          "description": "Actual ICMS Rate for this company (if the company is Tax Regime Simplified).\nAliquota de ICMS da companhia caso Optante do Simples\n"
        },
        "isExemptByGrossRevenueForSimplestaxregime": {
          "type": "boolean",
          "description": "ICMS Exempt when Tax Regime is Simplified because total gross revenue is bellow amount defined by state (see PARANÁ State)\nIsenção do ICMS no Simples Nacional para faixa de receita bruta\n"
        },
        "subjectToPayrollTaxRelief": {
          "type": "boolean",
          "description": "Sujeito à desoneração de folha de pagamento."
        },
        "configuration": {
          "type": "object",
          "properties": {
            "certificate": {
              "type": "string",
              "description": "digital certificate A1 model, p12, encoded by base64"
            },
            "certificatepwd": {
              "type": "string",
              "description": "certificate password"
            },
            "certificateexpiration": {
              "type": "string",
              "description": "expiration date of this certificate"
            },
            "logo": {
              "type": "string",
              "description": "company logo image encoded by base64"
            },
            "tpImpNFe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "tpImpNFCe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
              "enum": [
                "0",
                "4",
                "5"
              ]
            }
          }
        },
        "mailServer": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string",
              "description": "User for login on email server"
            },
            "password": {
              "type": "string",
              "description": "Password to login on email server"
            },
            "smtpAddress": {
              "type": "string",
              "description": "smtp address to email server"
            },
            "port": {
              "type": "integer",
              "description": "port"
            },
            "emailFrom": {
              "type": "string",
              "description": "email address to identify the sender e-mail, to send a XML and DANFE"
            },
            "protocol": {
              "type": "string",
              "enum": [
                "ssl",
                "tls"
              ],
              "description": "protocol SSL or TLS"
            },
            "templatemessageToEmail": {
              "type": "string",
              "description": "Message to add to email body"
            }
          }
        },
        "authorizedToDownloadNFe": {
          "description": "Person or company authorized to downloadNFe",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "federalTaxId": {
                "type": "string",
                "pattern": "[0-9]{11,14}",
                "description": "Federal tax id, CNPJ or CPF"
              }
            }
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "params",
            "body",
            "query"
          ]
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "AgastGoods": {
      "title": "Service Agast Specialization",
      "allOf": [
        {
          "$ref": "#/definitions/Agast"
        },
        {
          "type": "object",
          "properties": {
            "ex": {
              "type": "integer",
              "description": "hsCode Exception for IPI tax"
            },
            "cest": {
              "type": "string",
              "pattern": "[0-9]{7}",
              "description": "tax substitution code - Codigo especificador da Substuicao Tributaria"
            },
            "cean": {
              "type": "string",
              "pattern": "[0-9]{0}|[0-9]{8}|[0-9]{12,14}",
              "description": "GTIN NUMBER"
            },
            "cstIPI": {
              "type": "string",
              "description": "Inform if this process is subject to IPI taxation on output process\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'N'  # NO TAXABLE\n- 'I'  # IMMUNE\n",
              "enum": [
                "T",
                "Z",
                "E",
                "N",
                "I"
              ]
            },
            "ipiLegalTaxClass": {
              "type": "string",
              "description": "Legal tax classificação for IPI (enquadramento tributário)\nWhen the process has CST IPI 52 or 54, it is mandatory to inform a Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU=\n"
            },
            "ipiLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the IPI legal reason, this message will be placed on invoice."
            },
            "specialProductClass": {
              "type": "string",
              "enum": [
                "OTHERS",
                "COMMUNICATION",
                "ENERGY",
                "TRANSPORT",
                "FUEL AND LUBRICANT",
                "VEHICLE",
                "ALCOHOLIC BEVERAGES",
                "WEAPONS",
                "AMMO",
                "PERFUME",
                "TOBACCO"
              ]
            },
            "icmsConf": {
              "type": "array",
              "description": "One per State",
              "items": {
                "$ref": "#/definitions/AgastGoods_IcmsConf"
              }
            }
          }
        },
        {
          "title": "Service Agast Specialization"
        }
      ]
    },
    "AgastService": {
      "title": "Service Agast Specialization",
      "allOf": [
        {
          "$ref": "#/definitions/Agast"
        },
        {
          "type": "object",
          "title": "Service Agast Specialization",
          "properties": {
            "pisCofinsTaxReporting": {
              "type": "string",
              "enum": [
                "cumulative",
                "noCumulative"
              ],
              "description": "when the company is Real Profit inform if this item is cumulative or no cumulative by default"
            },
            "accruableCSLLTaxation": {
              "type": "string",
              "description": "Inform if this item by nature is subject to CSLL taxation or exempt\n- 'T' # TAXABLE\n- 'E' # EXEMPT\n",
              "enum": [
                "T",
                "E"
              ]
            },
            "csllExemptLegalReason": {
              "type": "string",
              "maxLength": 1024
            },
            "csllExemptLegalReasonCode": {
              "type": "string"
            },
            "withholding": {
              "$ref": "#/definitions/AgastService_Withhold"
            },
            "issDueatDestination": {
              "type": "boolean",
              "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
            }
          }
        },
        {
          "title": "Service Agast Specialization"
        }
      ]
    },
    "AgastServiceOperations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgastServiceOperations_Item"
      }
    },
    "AgastServiceOperations_Item": {
      "type": "object",
      "properties": {
        "serviceCode": {
          "type": "string",
          "description": "Service Code in City"
        },
        "cityCode": {
          "type": "integer",
          "format": "int64",
          "description": "City Code (IBGE)"
        },
        "agastCode": {
          "type": "string",
          "description": "AGAST Code"
        },
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "description": {
          "type": "string",
          "description": "Service description"
        },
        "issWhOriginUnregSeller": {
          "type": "boolean"
        },
        "issDueatDestination": {
          "type": "boolean",
          "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
        },
        "subjectPayrollTaxRelief": {
          "type": "boolean",
          "description": "Item subjecto to Payroll Tax Relief\nItem sujeto à desoneraçãode folha de pagamento\n"
        },
        "subjectToINSS": {
          "type": "boolean",
          "description": "Item subjecto to INSS\nItem sujeto à INSS\n"
        },
        "customCompany": {
          "type": "boolean",
          "description": "Custom AGAST"
        }
      }
    },
    "Agast": {
      "type": "object",
      "required": [
        "code",
        "codeType"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Agast Code. AGAST (Avalara Goods and Services Types) are preset products with default tax definitions available to be used as provided or copied to create an specific comapany item."
        },
        "description": {
          "type": "string",
          "maxLength": 200,
          "description": "Agast Description"
        },
        "lifeTimeStart": {
          "type": "string",
          "description": "date when this configuration values starts"
        },
        "lifeTimeEnd": {
          "type": "string",
          "description": "date when this configuration values expire"
        },
        "inactive": {
          "type": "boolean",
          "description": "set this configuration to Inactive"
        },
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "codeType": {
          "type": "string",
          "enum": [
            "NCM",
            "NBS",
            "LC116",
            "SERVICE UNREGULATED"
          ]
        },
        "accruablePISTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to PIS taxation or exempt\n- 'T' # TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'N' # NO TAXABLE\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N"
          ]
        },
        "pisExemptLegalReasonCode": {
          "type": "string",
          "description": "When exempt, taxable with zero rate, suspended, not taxable, this field informs the official code number for the exemption"
        },
        "pisExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specified a reason, this field holds the reason's description"
        },
        "accruableCOFINSTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to COFINS taxation or exempt\n- 'T' # TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'N' # NO TAXABLE\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N"
          ]
        },
        "cofinsExemptLegalReasonCode": {
          "type": "string",
          "description": "When exempt, taxable with zero rate, suspended, not taxable, this field informs the official code number for the exemption"
        },
        "cofinsExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specified a reason, this field holds the reason's description"
        },
        "pisCofinsCreditNotAllowed": {
          "type": "boolean",
          "description": "on Real Profit Purchase transaction, inform if this item allows tax credits when it is non-cumulative"
        },
        "federalTaxRate": {
          "type": "array",
          "description": "This is an array of tax object related to an agast.",
          "items": {
            "$ref": "#/definitions/TaxTypeRate"
          }
        },
        "notes": {
          "type": "string",
          "description": "Free-form text for optionally adding any comment on this."
        },
        "taxAdviserCode": {
          "type": "string",
          "description": "This adds a purely informational information about the source of TaxAdviser imported data."
        }
      }
    },
    "AgastGoods_IcmsConf": {
      "type": "object",
      "description": "See definitions IcmsConfByState",
      "properties": {
        "code": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        }
      }
    },
    "TaxTypeRate": {
      "type": "object",
      "required": [
        "taxType",
        "taxModel"
      ],
      "properties": {
        "taxType": {
          "$ref": "#/definitions/TaxType"
        },
        "taxModel": {
          "type": "string",
          "enum": [
            "rate",
            "srf"
          ],
          "description": "Tax can be calculated by rate or by quantity"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "Specific tax rate ex 3.5 (3.5%)"
        },
        "srvAmount": {
          "type": "number",
          "format": "double",
          "description": "Specific tax rate ex 3.5 (3.5%)"
        },
        "quantityUnidBase": {
          "type": "string",
          "maxLength": 6
        },
        "specializationType": {
          "type": "string",
          "enum": [
            "basic",
            "monophase",
            "taxSubstitution"
          ]
        }
      }
    },
    "TaxType": {
      "type": "string",
      "description": "Tax Rate\nObs: AR - \"a recolher\" (serviço).\nRP e PP - filtrado para alvos de lucro real ou lucro presumido (serviço)\n",
      "enum": [
        "INSS",
        "INSS_RF",
        "INSS_AR",
        "IRRF",
        "PIS",
        "PIS_RF",
        "PIS_RP",
        "PIS_PP",
        "COFINS",
        "COFINS_RF",
        "COFINS_RP",
        "COFINS_PP",
        "CSLL",
        "CSLL_RF",
        "CSLL_PP",
        "CSLL_RP",
        "IRPJ",
        "ISS",
        "ISS_RF",
        "IPI"
      ]
    },
    "LegalReason": {
      "type": "object",
      "required": [
        "name",
        "description",
        "scope"
      ],
      "description": "Legal Reason (Fundamentação Legal):\n- 'name'\n- 'description'\n- 'scope'\n",
      "properties": {
        "id": {
          "type": "string",
          "description": "Internal ID"
        },
        "referenceCode": {
          "type": "string",
          "description": "A custom, non-unique, non-mandatory reference code that might be used to reference\na company Reason record to a global Reason record.\n"
        },
        "companyId": {
          "type": "string",
          "description": "If present, this record is scoped to the company."
        },
        "scope": {
          "type": "string",
          "description": "Message scope. May be one of these.\ngeneral - This message is not linked to any entity (agast/process/cfop) and will be applied to any item in a transacition. (Esta mensagem tem escopo geral, nao está relacionadas diretamente qualquer objeto.);\nlinkedTo - This message is linked to an entity, and its processing will only occur when the context involves it. (Esta mensagens estão relacionadas diretamente a algum objeto como um AGAST por exemplo, um Processo ou uma CFOP.);\n",
          "enum": [
            "general",
            "linkedTo"
          ]
        },
        "disable": {
          "type": "boolean",
          "description": "Set this message as no longer valid"
        },
        "description": {
          "type": "string",
          "maxLength": 5000,
          "description": "Legal reason textual description;"
        },
        "name": {
          "type": "string",
          "description": "Short name to this message"
        },
        "legalCode": {
          "type": "string",
          "description": "this field inform the official code number"
        },
        "showInInvoice": {
          "type": "string",
          "description": "Optional. Show this message when used in Invoice (NFe, NFCe, others...). Where to show this.",
          "enum": [
            "complementaryInfoMessage",
            "fiscalInfoMessage",
            "itemInfoMessage",
            "no show"
          ]
        },
        "referencedProcesses": {
          "description": "Referenced Process",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "properties": {
              "nProc": {
                "type": "string",
                "maxLength": 60,
                "description": "Process Identifier (NFe <nProc> tag)"
              },
              "indProc": {
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "9"
                ],
                "description": "Process Origin (NFe <indProc> tag)\n- '0' # SEFAZ;\n- '1' # Justiça Federal;\n- '2' # Justiça Estadual;\n- '3' # Secex/RFB;\n- '9' # Outros\n"
              }
            }
          }
        },
        "taxConstraint": {
          "description": "Filter this message application to specified tax cases.\n",
          "properties": {
            "taxType": {
              "type": "string",
              "enum": [
                "NONE",
                "INSS",
                "IRRF",
                "IRPJ",
                "PIS",
                "COFINS",
                "CSLL",
                "IPI",
                "ICMS",
                "II",
                "IOF",
                "ISS",
                "APROXTOTALTAX"
              ],
              "description": "This is the Tax Type to apply legal messages.\n- 'NONE'\n- 'INSS'\n- 'IRRF'\n- 'IRPJ'\n- 'PIS'\n- 'COFINS'\n- 'CSLL'\n- 'IPI'\n- 'ICMS'\n- 'II'\n- 'IOF'\n- 'ISS'\n- 'APROXTOTALTAX'\n"
            },
            "specializedTaxType": {
              "type": "string",
              "enum": [
                "icms",
                "icmsSt",
                "icmsStSd",
                "icmsPartOwn",
                "icmsPartDest",
                "icmsDifaFCP",
                "icmsDifaDest",
                "icmsDifaRemet",
                "icmsRf",
                "icmsDeson",
                "icmsCredsn",
                "pis",
                "pisSt",
                "cofins",
                "cofinsSt",
                "ipi",
                "ipiReturned",
                "ii",
                "iof"
              ],
              "description": "These are the specific tax types to which a message may be applied\n- 'icms'\n- 'icmsSt'\n- 'icmsStSd'\n- 'icmsPartOwn'\n- 'icmsPartDest'\n- 'icmsDifaFCP'\n- 'icmsDifaDest'\n- 'icmsDifaRemet'\n- 'icmsRf'\n- 'icmsDeson'\n- 'icmsCredsn'\n- 'pis'\n- 'pisSt'\n- 'cofins'\n- 'cofinsSt'\n- 'ipi'\n- 'ipiReturned'\n- 'ii'\n- 'iof'\n"
            },
            "jurisdictionType": {
              "type": "string",
              "enum": [
                "NONE",
                "City",
                "State",
                "Country"
              ],
              "description": "Types of jurisdiction\n- 'NONE'\n- 'City'\n- 'State'\n- 'Country'\n"
            },
            "jurisdictionCode": {
              "type": "string",
              "description": "Code to identify the Jurisdiction"
            },
            "precondition": {
              "type": "string",
              "description": "script rule that will evaluated to decide if this message is applicable.\nif doesn't have rule is samething that return true value.\n"
            }
          }
        }
      }
    },
    "AgastService_Withhold": {
      "description": "inform if this item is subject to withholding tax on service Transactions, default true",
      "type": "object",
      "properties": {
        "IRRF": {
          "type": "boolean"
        },
        "IRRFLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "INSSSubjectPayrollTaxRelief": {
          "type": "boolean",
          "description": "Item subjecto to Payroll Tax Relief\nItem sujeto à desoneraçãode folha de pagamento\n"
        },
        "INSS": {
          "type": "boolean"
        },
        "INSSLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "INSSForSimples": {
          "type": "boolean"
        },
        "INSSForSimplesLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "PIS": {
          "description": "inform if this item is subject to withholding PIS on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        },
        "COFINS": {
          "description": "inform if this item is subject to withholding COFINS on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        },
        "CSLL": {
          "description": "inform if this item is subject to withholding CSLL on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        }
      }
    },
    "AgastService_WithholdPCC": {
      "type": "object",
      "properties": {
        "business": {
          "type": "boolean"
        },
        "businessLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "federalGovernment": {
          "type": "boolean"
        },
        "federalGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "stateGovernment": {
          "type": "boolean"
        },
        "stateGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "cityGovernment": {
          "type": "boolean"
        },
        "cityGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        }
      }
    },
    "TransactionForGoodsIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForGoods"
        },
        "lines": {
          "type": "array",
          "maxItems": 990,
          "items": {
            "$ref": "#/definitions/LineForGoods"
          }
        }
      }
    },
    "TransactionForGoodsOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForGoods"
        },
        "lines": {
          "type": "array",
          "maxItems": 990,
          "items": {
            "$ref": "#/definitions/LineForGoods"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/CalculatedTaxSummaryForGoods"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "SalesTransactionOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/SalesHeaderOut"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/SalesLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/SalesCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "SalesTransactionIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/SalesHeaderIn"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/SalesLinesIn"
          }
        }
      }
    },
    "PurchaseTransactionOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PurchaseHeaderOut"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PurchaseLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/PurchaseCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "PurchaseTransactionIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PurchaseHeaderIn"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PurchaseLinesIn"
          }
        }
      }
    },
    "PaymentTransactionOut": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayRecLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/PayRecCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "PaymentTransactionIn": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentLinesIn"
          }
        }
      }
    },
    "ReceiptTransactionOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PayRecLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/PayRecCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "ReceiptTransactionIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PaymentLinesIn"
          }
        }
      }
    },
    "CalculatedTaxSummaryForGoods": {
      "type": "object",
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "taxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line taxed discounts"
        },
        "untaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line untaxed discounts"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute + sum of all line tax attribute not VAT - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "properties": {
            "icms": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsStSd": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsPartOwn": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsPartDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDifaFCP": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDifaDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDifaRemet": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDeson": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsCredsn": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "pisSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "cofinsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "ipi": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "ipiReturned": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "ii": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "iof": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "aproxtribState": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "aproxtribFed": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            }
          }
        }
      }
    },
    "ProcessingInfo": {
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string"
        },
        "duration": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TaxByTypeSummaryForGoods": {
      "type": "object",
      "description": "summary of all taxes",
      "properties": {
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "sum of all lines calcBase"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value"
        },
        "jurisdictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxByTypeSummaryJurisdictionForGoods"
          }
        }
      }
    },
    "TaxByTypeSummaryJurisdictionForGoods": {
      "properties": {
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value by jurisdiction"
        }
      }
    },
    "SalesHeaderOut": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesHeaderIn"
        },
        {
          "type": "object",
          "properties": {
            "discriminationOut": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 1,
              "description": "Invoice discrimination, it is discriminationIn plus automatic messages"
            },
            "xml": {
              "type": "string",
              "maxLength": 50000,
              "description": "RPS XML or NFSe XML generated, when the client system doesn't have EDI with government then BR16 return RPS when transaction is created."
            },
            "ediSyncState": {
              "type": "string",
              "enum": [
                "STORED",
                "WAITING APPROVAL",
                "AUTHORIZED",
                "AUTHORIZED with NOTE",
                "ERROR",
                "CANCELED REPLACED",
                "CANCELED",
                "CANCELLATION REQUESTED"
              ],
              "description": "Service sales usually has a EDI integration with government to get Final document or Authorization. This is external process and the integration status is followed by this property.\n- 'STORED'\n- 'WAITING APPROVAL'\n- 'AUTHORIZED'\n- 'AUTHORIZED with NOTE'\n- 'ERROR'\n- 'CANCELED REPLACED'\n- 'CANCELED'\n- 'CANCELLATION REQUESTED'\n"
            },
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "withholdingMode": {
                  "$ref": "#/definitions/WithholdingMode",
                  "description": "To avoid having to verify multiple attributes from a Invoice at the time of funds collection which subject to Tax Withholding, this attribute will allow a referenced Invoice to be quickly checked for withholdings during the cash transaction. This is an SALES.Transaction attribute to be consisted in the Tax Engine that can be used during the receivable process. The values are enumeration where each letter identify if that tax has been withheld PCC,xxx, PCx, PxC ..."
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/InstallmentComplete"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "SalesLinesOut": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "avalaraGoodsAndServicesType": {
              "type": "string",
              "description": "AGAST CODE for itemCode"
            },
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "This decimal captures the total cost of this line. In its simplest form lineNetValue = (lineAmount - discountTaxable - sum of whithholdings)."
            },
            "cst": {
              "type": "string",
              "maxLength": 2,
              "enum": [
                "01",
                "02",
                "03",
                "04",
                "05",
                "21",
                "22",
                "23",
                "24",
                "25",
                "40"
              ],
              "description": "- '01' # ORIGIN MODE\n- '02' # ORIGIN MODE BUT EXEMPT\n- '03' # ORIGIN MODE BUT IMMUNE\n- '04' # ORIGIN MODE BUT SUSPENDED FOR LEGAL REASON\n- '05' # ORIGIN MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '21' # DESTINATION MODE\n- '22' # DESTINATION MODE BUT EXEMPT\n- '23' # DESTINATION MODE BUT IMMUNE\n- '24' # DESTINATION MODE BUT SUSPENDED\n- '25' # DESTINATION MODE BUT SUSPENDED\n- '40' # FOREIGN IMMUNE MODE\n"
            },
            "cstRf": {
              "type": "string",
              "maxLength": 2,
              "enum": [
                "61",
                "62",
                "63",
                "64",
                "65",
                "66",
                "67",
                "68",
                "69",
                "70",
                "71",
                "72"
              ],
              "description": "- '61' # WITHHOLD NORMAL MODE\n- '62' # WITHHOLD NORMAL MODE BUT EXEMPT\n- '63' # WITHHOLD NORMAL MODE BUT IMMUNE\n- '64' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR LEGAL REASON\n- '65' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '66' # WITHHOLD FORCED MODE\n- '67' # WITHHOLD FORCED MODE BUT EXEMPT\n- '68' # WITHHOLD FORCED MODE BUT IMMUNE\n- '69' # WITHHOLD FORCED MODE BUT SUSPENDED FOR LEGAL REASON\n- '70' # WITHHOLD FORCED MODE BUT SUSPENDED FOR ADMINISTRATIVE PROCESS\n- '71' # NO WITHHOLD MODE\n- '72' # NO WITHHOLD FOREIGN MODE\n"
            },
            "taxDeductions": {
              "type": "object",
              "properties": {
                "iss": {
                  "type": "number",
                  "format": "double",
                  "description": "Deduction amount not ISS taxable. Example Building material"
                }
              }
            },
            "calculatedTax": {
              "$ref": "#/definitions/SalesCalculatedTax"
            }
          }
        }
      ]
    },
    "SalesCalculatedTaxSummaryForService": {
      "type": "object",
      "required": [
        "taxByType"
      ],
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute - sum of all line tax attribute - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "description": "Object with summary of all taxes returned by engine",
          "properties": {
            "pisRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofinsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csllRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irrf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csll": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "issRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "iss": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "aproxtribCity": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "aproxtribFed": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irpj": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inss": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            }
          }
        }
      }
    },
    "InstallmentComplete": {
      "type": "object",
      "required": [
        "documentNumber",
        "date",
        "grossValue"
      ],
      "properties": {
        "documentNumber": {
          "type": "string",
          "description": "DOCNUMBER, ID OF THIS DOCUMENT FOR THIS transaction"
        },
        "date": {
          "type": "string",
          "description": "installment Due Date"
        },
        "grossValue": {
          "type": "number",
          "format": "double",
          "description": "Intallment amount, fraction of  ∑(lineAmount - lineTaxedDiscount)"
        },
        "netValue": {
          "type": "number",
          "format": "double",
          "description": "net amount due for this installment, grossValue - ∑ (withhold amounts)"
        },
        "withholdingMode": {
          "$ref": "#/definitions/WithholdingMode",
          "description": "Inform if this payment is subject to Pis, Cofins or CSLL"
        },
        "withholdingPIS": {
          "type": "number",
          "format": "double",
          "description": "calculated PIS-RF tax for this payment"
        },
        "withholdingCOFINS": {
          "type": "number",
          "format": "double",
          "description": "calculated COFINS-RF tax for this payment"
        },
        "withholdingCSLL": {
          "type": "number",
          "format": "double",
          "description": "calculated CSLL-RF tax for this payment"
        }
      }
    },
    "PaymentTerms": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "description": "0 – cash pagamento à vista\n1 – on terms, pagamento à prazo;\n"
    },
    "SalesHeaderIn": {
      "allOf": [
        {
          "$ref": "#/definitions/HeaderBaseInfo"
        },
        {
          "type": "object",
          "properties": {
            "purchaseOrderNumber": {
              "type": "string",
              "description": "The number of Purchase Order"
            },
            "rpsNumber": {
              "type": "integer",
              "description": "Provisional receipt services, sequencial number maintained by the client application, unique by serie"
            },
            "rpsSerie": {
              "type": "string",
              "description": "set name identifier for rps number sequency.",
              "default": "0"
            },
            "discriminationIn": {
              "type": "string",
              "maxLength": 1000,
              "minLength": 1,
              "description": "Service discrimination, free description about service"
            },
            "entity": {
              "$ref": "#/definitions/SalesEntity"
            },
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/SalesInstallmentIn"
                  }
                }
              }
            },
            "taxesConfig": {
              "$ref": "#/definitions/SalesTaxesConfig"
            },
            "defaultLocations": {
              "$ref": "#/definitions/SalesDefaultLocations"
            }
          }
        }
      ]
    },
    "WithholdingMode": {
      "type": "string",
      "enum": [
        "xxx",
        "PCC",
        "PCx",
        "PxC",
        "Pxx",
        "xCC",
        "xxC",
        "xCx"
      ],
      "description": "Using the placing reference in PCC for PIS (P), COFINS (C) and COFINS (C).  x = tax is not subject to withholding. \n- 'xxx'\n- 'PCC'\n- 'PCx'\n- 'PxC'\n- 'Pxx'\n- 'xCC'\n- 'xxC'\n- 'xCx'\n"
    },
    "HeaderBaseInfo": {
      "type": "object",
      "required": [
        "transactionType",
        "transactionDate",
        "companyLocation"
      ],
      "properties": {
        "transactionType": {
          "type": "string",
          "enum": [
            "Sale",
            "Purchase",
            "Payment",
            "Receipt"
          ],
          "description": "This string indicates the type of transaction for which tax should be calculated.\n- 'Sale'\n- 'Purchase'\n- 'Payment'\n- 'Receipt'\n"
        },
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "currency": {
          "type": "string",
          "description": "currency code / transactions must be in Brazilian Reais \"BRL\""
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format (which may be different from the date the tax calculation is performed)"
        },
        "taxCalculationDate": {
          "type": "string",
          "description": "accrual date, This string is the date, in ISO 8601 format, on which tax is to be calculated for this transaction (normally tax is calculated on the date the transaction is performed as captured in the transactionDate field). This is useful for layaways and other deferred transactions."
        },
        "companyLocation": {
          "type": "string",
          "maxLength": 64,
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        }
      }
    },
    "SalesEntity": {
      "type": "object",
      "required": [
        "type",
        "taxRegime"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "SERVICE BUYER NAME OFFICIAL"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "cnpjcpf": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "pattern": "[0-9]{2,14}|ISENTO",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "taxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "specialTaxRegime": {
          "type": "string",
          "enum": [
            "MEM",
            "EST",
            "SPR",
            "COP",
            "MEI",
            "MPP"
          ],
          "description": "Entity Special Tax Regime \n- 'MEM' # Microempresa municipal\n- 'EST' # Estimativa\n- 'SPR' # Sociedade de profissionais\n- 'COP' # Cooperativa\n- 'MEI' # Microempresário Individual (MEI)\n- 'MPP' # Microempresário e Empresa de Pequeno Porte (ME EPP)\n"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Companies subject to rule follow same rule of Government"
        },
        "requiredWithholdingISS": {
          "type": "boolean",
          "description": "If Withholding ISS is required, independently the rules applied."
        },
        "adminProcess": {
          "type": "string",
          "maxLength": 30,
          "description": "PROCESS NUMBER TO ISS SUSPENDED FOR ADMINISTRATIVE PROCESS"
        },
        "build": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 15,
              "description": "Business code. Código da obra OBRA"
            },
            "art": {
              "type": "string",
              "maxLength": 15,
              "description": "technical note. Anota\\u00e7\\u00e3o de Responsabilidade T\\u00e9cnica-ART, estabelece que todos os contratos referentes à  execu\\u00e7\\u00e3o de servi\\u00e7os ou obras de Engenharia, Agronomia, Geologia, Geografia ou Meteorologia dever\\u00e3o ser objeto de anota\\u00e7\\u00e3o no Conselho Regional de Engenharia e Agronomia"
            },
            "cei": {
              "type": "string",
              "maxLength": 15,
              "description": "Número CEI da Obra"
            },
            "number": {
              "type": "string",
              "maxLength": 15,
              "description": "Número de Matrícula da Obra"
            }
          }
        }
      }
    },
    "SalesInstallmentIn": {
      "type": "object",
      "required": [
        "documentNumber",
        "date",
        "grossValue"
      ],
      "properties": {
        "documentNumber": {
          "type": "string",
          "description": "DOCNUMBER, ID OF THIS DOCUMENT FOR THIS transaction"
        },
        "date": {
          "type": "string",
          "description": "installment Due Date"
        },
        "grossValue": {
          "type": "number",
          "format": "double",
          "description": "Intallment value, fraction of  ∑(lineAmount - lineTaxedDiscount)"
        }
      }
    },
    "SalesTaxesConfig": {
      "type": "object",
      "properties": {
        "accruableCOFINSTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings.\n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n"
        },
        "accruableCSLLTaxation": {
          "type": "string",
          "enum": [
            "T",
            "E"
          ],
          "description": "There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be CSLL exempt.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. \n- T TAXABLE\n- E EXEMPT\n"
        },
        "accruablePISTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. \n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n"
        },
        "accruableCOFINSExempCodeTaxation": {
          "type": "string",
          "pattern": "[0-9]{3}",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption"
        },
        "accruablePISExempCodeTaxation": {
          "type": "string",
          "pattern": "[0-9]{3}",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption"
        },
        "withholdingCOFINS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdingCSLL": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdingIRRF": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdingPIS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdIRRFExemptReasonTaxation": {
          "type": "string",
          "description": "When property withholdingIRRF is false is mandatory inform the reason"
        }
      }
    },
    "SalesDefaultLocations": {
      "type": "object",
      "description": "This element contains a dictionary of locations such as the origin and destination addresses to be associated with this transaction. There can only be one location of a given purpose in the dictionary.",
      "properties": {
        "serviceRendered": {
          "$ref": "#/definitions/ServiceRendered"
        }
      }
    },
    "ServiceRendered": {
      "type": "object",
      "description": "Address where the rendered service.",
      "properties": {
        "address": {
          "$ref": "#/definitions/SimpleAddress"
        }
      }
    },
    "SimpleAddress": {
      "title": "Address",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "line1",
            "line2",
            "line3",
            "zipcode",
            "country"
          ],
          "properties": {
            "line1": {
              "type": "string",
              "maxLength": 60,
              "description": "Address"
            },
            "line2": {
              "type": "string",
              "maxLength": 60,
              "description": "Number"
            },
            "line3": {
              "type": "string",
              "maxLength": 60,
              "description": "District"
            },
            "city": {
              "type": "string",
              "maxLength": 60
            },
            "zipcode": {
              "type": "string",
              "description": "Zip Code"
            },
            "state": {
              "type": "string",
              "description": "State Code",
              "pattern": "^([A-Z]{2,3})$"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "line1",
            "line2",
            "line3",
            "zipcode",
            "country"
          ],
          "properties": {
            "line1": {
              "type": "string",
              "maxLength": 60,
              "description": "Address"
            },
            "line2": {
              "type": "string",
              "maxLength": 60,
              "description": "Number"
            },
            "line3": {
              "type": "string",
              "maxLength": 60,
              "description": "District"
            },
            "city": {
              "type": "string",
              "maxLength": 60
            },
            "zipcode": {
              "type": "string",
              "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
              "description": "Brazilian Zip Code"
            },
            "state": {
              "$ref": "#/definitions/StateEnum"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "default": "BRA"
            }
          }
        },
        {
          "title": "Address",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "line1",
                "line2",
                "line3",
                "zipcode",
                "country"
              ],
              "properties": {
                "line1": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Address"
                },
                "line2": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Number"
                },
                "line3": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "District"
                },
                "city": {
                  "type": "string",
                  "maxLength": 60
                },
                "zipcode": {
                  "type": "string",
                  "description": "Zip Code"
                },
                "state": {
                  "type": "string",
                  "description": "State Code",
                  "pattern": "^([A-Z]{2,3})$"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "line1",
                "line2",
                "line3",
                "zipcode",
                "country"
              ],
              "properties": {
                "line1": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Address"
                },
                "line2": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Number"
                },
                "line3": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "District"
                },
                "city": {
                  "type": "string",
                  "maxLength": 60
                },
                "zipcode": {
                  "type": "string",
                  "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
                  "description": "Brazilian Zip Code"
                },
                "state": {
                  "$ref": "#/definitions/StateEnum"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "default": "BRA"
                }
              }
            }
          ]
        }
      ]
    },
    "SalesCalculatedTax": {
      "type": "object",
      "properties": {
        "taxByType": {
          "$ref": "#/definitions/SalesTaxByType"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Sum of tax type not VAT (Value Added Tax)"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesTaxByTypeDetail"
          }
        }
      }
    },
    "SalesLinesIn": {
      "type": "object",
      "required": [
        "itemCode"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This string is a unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU."
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Conditional discount"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Unconditional discount"
        },
        "withLaborAssignment": {
          "type": "boolean",
          "description": "Service w/labor assignment\nServiço com cessão de mão de obra\n"
        },
        "taxDeductions": {
          "type": "object",
          "properties": {
            "iss": {
              "type": "number",
              "format": "double",
              "description": "Deduction amount not taxable by ISS . Example constructions materials included in a service invoice"
            }
          }
        }
      }
    },
    "SalesTaxByType": {
      "type": "object",
      "description": "Object with summary of all taxes returned by engine",
      "properties": {
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "irrf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pis": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofins": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csll": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "issRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "iss": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "aproxtribCity": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "aproxtribFed": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "irpj": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inss": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "SalesTaxByTypeDetail": {
      "type": "object",
      "properties": {
        "locationType": {
          "type": "string",
          "description": "This string captures the applicable location type. Location used for calc. Buyer or Seller"
        },
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "taxType": {
          "type": "string",
          "enum": [
            "aproxtribCity",
            "aproxtribFed",
            "pis",
            "pisRf",
            "cofins",
            "cofinsRf",
            "csll",
            "csllRf",
            "irrf",
            "inss",
            "inssRf",
            "iss",
            "issRf",
            "irpj"
          ],
          "description": "Tax identificator\n- 'aproxtribCity'\n- 'aproxtribFed'\n- 'pis'\n- 'pisRf'\n- 'cofins'\n- 'cofinsRf'\n- 'csll'\n- 'csllRf'\n- 'irrf'\n- 'inss'\n- 'inssRf'\n- 'iss'\n- 'issRf'\n- 'irpj'\n"
        },
        "rateType": {
          "type": "string",
          "description": "Name of configuration rate"
        },
        "scenario": {
          "type": "string",
          "description": "This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in."
        },
        "subtotalTaxable": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "exemptionCode": {
          "type": "string",
          "description": "This string is required if is exempt"
        },
        "significantLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This element captures the list of locations that contributed to the tax determination. for BR16 Service is Buyer and Seller Address"
        },
        "taxRuleType": {
          "type": "string",
          "enum": [
            "SELLER",
            "BUYER",
            "TRANSACTION",
            "ITEM",
            "TAX",
            "NO_EXEMPTION"
          ],
          "description": "This string with type of rule\n- 'SELLER'\n- 'BUYER'\n- 'TRANSACTION'\n- 'ITEM'\n- 'TAX'\n- 'NO_EXEMPTION'\n"
        }
      }
    },
    "TaxByTypeSummaryForService": {
      "type": "object",
      "description": "summary of all taxes",
      "properties": {
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value"
        },
        "jurisdictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxByTypeSummaryJurisdiction"
          }
        }
      }
    },
    "TaxByTypeSummaryJurisdiction": {
      "properties": {
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value by jurisdiction"
        }
      }
    },
    "PurchaseHeaderOut": {
      "allOf": [
        {
          "$ref": "#/definitions/PurchaseHeaderIn"
        },
        {
          "type": "object",
          "properties": {
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "withholdingMode": {
                  "$ref": "#/definitions/WithholdingMode"
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/InstallmentComplete"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "PurchaseLinesOut": {
      "allOf": [
        {
          "$ref": "#/definitions/PurchaseLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "avalaraGoodsAndServicesType": {
              "type": "string",
              "description": "AGAST CODE for itemCode"
            },
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "This decimal captures the value of lineAmount - lineTaxedDiscount - sum of withholding."
            },
            "calculatedTax": {
              "$ref": "#/definitions/PurchaseCalculatedTax"
            }
          }
        }
      ]
    },
    "PurchaseCalculatedTaxSummaryForService": {
      "type": "object",
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute - sum of all line tax attribute - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "description": "Object with summary of all taxes returned by engine",
          "properties": {
            "issRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pisRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofinsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csllRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irrf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssAr": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            }
          }
        }
      }
    },
    "PurchaseHeaderIn": {
      "allOf": [
        {
          "$ref": "#/definitions/HeaderBaseInfo"
        },
        {
          "type": "object",
          "properties": {
            "purchaseOrderNumber": {
              "type": "string",
              "description": "The number of Purchase Order"
            },
            "entity": {
              "$ref": "#/definitions/PurchaseEntity"
            },
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/PurchaseInstallmentIn"
                  }
                }
              }
            },
            "taxesConfig": {
              "$ref": "#/definitions/PurchaseTaxesConfig"
            },
            "defaultLocations": {
              "$ref": "#/definitions/PurchaseDefaultLocations"
            }
          }
        }
      ]
    },
    "PurchaseEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "Legal Name of Service buyer."
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "cnpjcpf": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer. If CPF, pattern is '[0-9]{11}' if CNPJ, pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "pattern": "[0-9]{2,14}|ISENTO",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "taxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "hasCpom": {
          "type": "boolean",
          "description": "Some cities require PURCHASE.Buyers to withhold ISS (City Tax) from PURCHASE.Sellers stablished in different cities. In case the PURCHASE.Seller has acquired a Tax Registration in this destination city, by providing this information in the service invoice, this withholding obligation is lifted."
        },
        "subjectWithholdingIrrf": {
          "type": "boolean",
          "description": "These are the federal taxes attributes that determine whether withholding of taxes should take place. In special cases where the PURCHASE.Seller is exempt of one or more of these taxes the withholding follows the same rules. The Business type may also dictate these rules as well."
        },
        "inssPreviousContrib": {
          "type": "number",
          "format": "double",
          "description": "The INSS contribution is capped at a maximum limit (amount of actual retired payment available in the country).  Individuals sellers subject to INSS withholding can provide the amount already tax by other transactions (with the same buyer or different ones) to deduct to the tax basis. This amount is to be provided to the Seller in a form of a signed document."
        },
        "inssBasisDiscount": {
          "type": "number",
          "format": "double",
          "description": "The INSS contribution is applicable only to the labor amount in a service contract.  There are several items that may be deducted from the service invoice total to arrive at the INSS taxable amount. This amount is to be provided to the Seller in the body of the Invoice or calculated during the transaction input."
        },
        "issRfRate": {
          "type": "number",
          "format": "double",
          "description": "When Seller is Simples regime, the seller needs send RF rate."
        }
      }
    },
    "PurchaseInstallmentIn": {
      "type": "object",
      "required": [
        "documentNumber",
        "date",
        "grossValue"
      ],
      "properties": {
        "documentNumber": {
          "type": "string",
          "description": "DOCNUMBER, ID OF THIS DOCUMENT FOR THIS transaction"
        },
        "date": {
          "type": "string",
          "description": "installment, Due Date"
        },
        "grossValue": {
          "type": "number",
          "format": "double",
          "description": "Intallment value, fraction of  ∑(lineAmount - lineTaxedDiscount)"
        }
      }
    },
    "PurchaseTaxesConfig": {
      "type": "object",
      "properties": {
        "entityAccruableCOFINSTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "ATTENTION SELLER POINT OF VIEW. There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. T TAXABLE, N NOT TAXABLE, Z TAXABLE WITH RATE=0.00, E EXEMPT, H SUSPENDED, S SPECIFIC RATE\n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n",
          "default": "T"
        },
        "entityAccruableCSLLTaxation": {
          "type": "string",
          "enum": [
            "T",
            "E"
          ],
          "description": "ATTENTION SELLER POINT OF VIEW. There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be CSLL exempt.  \nThis attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. \n- T TAXABLE\n- E EXEMPT\n",
          "default": "T"
        },
        "entityAccruablePISTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "ATTENTION SELLER POINT OF VIEW. There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. T TAXABLE, N NOT TAXABLE, Z TAXABLE WITH RATE=0.00, E EXEMPT, H SUSPENDED, S SPECIFIC RATE\n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n",
          "default": "T"
        },
        "accruableCOFINSExempCodeTaxation": {
          "type": "string",
          "pattern": "([0-9]{3})?",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption. When not Taxable of Seller point of view this field has the reason code."
        },
        "accruablePISExempCodeTaxation": {
          "type": "string",
          "pattern": "([0-9]{3})?",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption. When not Taxable of Seller point of view this field has the reason code."
        },
        "accruablePISExemptReasonTaxation": {
          "type": "string",
          "description": "When Code is 999 the user system need send the custom reason to Exemption"
        },
        "accruableCOFINSExemptReasonTaxation": {
          "type": "string",
          "description": "When Code is 999 the user system need send the custom reason to Exemption"
        },
        "accruableCSLLExemptReasonTaxation": {
          "type": "string",
          "description": "CSLL no withholding Custom Reason"
        },
        "withholdingPIS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdingCOFINS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdingCSLL": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdingIRRF": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdCOFINSExemptReasonTaxation": {
          "type": "string",
          "description": "COFINS no withholding Custom Reason"
        },
        "withholdCSLLExemptReasonTaxation": {
          "type": "string",
          "description": "CSLL no withholding Custom Reason"
        },
        "withholdPISExemptReasonTaxation": {
          "type": "string",
          "description": "PIS no withholding Custom Reason"
        }
      }
    },
    "PurchaseDefaultLocations": {
      "type": "object",
      "description": "This element contains a dictionary of locations such as the origin and destination addresses to be associated with this transaction. There can only be one location of a given purpose in the dictionary.",
      "properties": {
        "PointOfOrderOrigin": {
          "$ref": "#/definitions/PointOfOrderOrigin"
        }
      }
    },
    "PointOfOrderOrigin": {
      "type": "object",
      "description": "Address where the service is rendered.",
      "properties": {
        "address": {
          "$ref": "#/definitions/SimpleAddress"
        }
      }
    },
    "PurchaseCalculatedTax": {
      "type": "object",
      "properties": {
        "taxByType": {
          "$ref": "#/definitions/PurchaseTaxByType"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Sum of tax type not VAT (Value Added Tax)"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchaseTaxByTypeDetail"
          }
        }
      }
    },
    "PurchaseLinesIn": {
      "type": "object",
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This string is a unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU."
        },
        "taxForItem": {
          "type": "object",
          "description": "This structure is mandatory when doesn't have itemCode (SKU), usually the companies doesn't have the services to buy mapped.\nOptionally teh service can be consumed sending serviceAgast and the service code on the company city\n",
          "required": [
            "agastCode"
          ],
          "properties": {
            "agastCode": {
              "type": "string",
              "description": "Service Agast code for this ite, the Service AGAST code has Federal Jurisdiction"
            },
            "serviceCode": {
              "type": "string",
              "description": "Company city code service      \nWhen this information isn't available the rates for ISS are zero.\n"
            }
          }
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Conditional discount"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Unconditional discount"
        },
        "withLaborAssignment": {
          "type": "boolean",
          "description": "Service w/labor assignment\nServiço com cessão de mão de obra\n"
        },
        "useType": {
          "type": "string",
          "enum": [
            "resale",
            "production",
            "use or consumption",
            "fixed assets"
          ],
          "description": "Type of entity use associated with this line\n- 'resale'\n- 'production'\n- 'use or consumption'\n- 'fixed assets'\n"
        },
        "taxDeductions": {
          "type": "object",
          "properties": {
            "iss": {
              "type": "number",
              "format": "double",
              "description": "Deduction amount not ISS taxable. Example Building material"
            }
          }
        }
      }
    },
    "PurchaseTaxByType": {
      "type": "object",
      "description": "Object with summary of all taxes returned by engine",
      "properties": {
        "issRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "irrf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssAr": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pis": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofins": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "PurchaseTaxByTypeDetail": {
      "type": "object",
      "properties": {
        "locationType": {
          "type": "string",
          "description": "This string captures the applicable location type. Location used for calc. Buyer or Seller"
        },
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "taxType": {
          "type": "string",
          "enum": [
            "pis",
            "pisRf",
            "cofins",
            "cofinsRf",
            "csll",
            "csllRf",
            "irrf",
            "inssAr",
            "inssRf",
            "issRf"
          ],
          "description": "Tax identificator\n- 'pis'\n- 'pisRf'\n- 'cofins'\n- 'cofinsRf'\n- 'csll'\n- 'csllRf'\n- 'irrf'\n- 'inssAr'\n- 'inssRf'\n- 'issRf'\n"
        },
        "rateType": {
          "type": "string",
          "description": "Name of configuration rate"
        },
        "scenario": {
          "type": "string",
          "description": "This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in."
        },
        "subtotalTaxable": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "exemptionCode": {
          "type": "string",
          "description": "This string is required if is exempt"
        },
        "significantLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This element captures the list of locations that contributed to the tax determination. for BR16 Service is Buyer and Seller Address"
        },
        "taxRuleType": {
          "type": "string",
          "enum": [
            "SELLER",
            "BUYER",
            "TRANSACTION",
            "ITEM",
            "TAX"
          ],
          "description": "This string with type of rule\n- 'SELLER'\n- 'BUYER'\n- 'TRANSACTION'\n- 'ITEM'\n- 'TAX'\n"
        }
      }
    },
    "PayRecHeader": {
      "type": "object",
      "required": [
        "transactionType",
        "transactionDate",
        "paymentMode"
      ],
      "properties": {
        "transactionType": {
          "type": "string",
          "enum": [
            "Sale",
            "Purchase",
            "Payment",
            "Receipt"
          ],
          "description": "This string indicates the type of transaction for which tax should be calculated.\n- 'Sale'\n- 'Purchase'\n- 'Payment'\n- 'Receipt'\n"
        },
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "currency": {
          "type": "string",
          "description": "currency code. 'BRL' for Brazilian Reais."
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format (which may be different from the date the tax calculation is performed)"
        },
        "taxCalculationDate": {
          "type": "string",
          "description": "accrual date, This string is the date, in ISO 8601 format, on which tax is to be calculated for this transaction (normally tax is calculated on the date the transaction is performed as captured in the transactionDate field). This is useful for layaways and other deferred transactions."
        },
        "paymentMode": {
          "type": "string",
          "enum": [
            "CALCULATE",
            "ASIS"
          ],
          "description": "- 'CALCULATE'\n- 'ASIS'\nWhen ASIS, the transaction is stored without executing tax determination (no Calculation).\n"
        }
      }
    },
    "PayRecLinesOut": {
      "allOf": [
        {
          "$ref": "#/definitions/PayRecLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "lineAmount": {
              "type": "number",
              "format": "double",
              "description": "GrossAmount of this installment line"
            },
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "Net value, the net Value is Gross value plus penalty minus sum of discount and withhold taxes"
            },
            "withholdingMode": {
              "$ref": "#/definitions/WithholdingMode",
              "description": "x is because not subject of this tax independent of Threshold"
            },
            "calculatedTax": {
              "$ref": "#/definitions/PaymentCalculatedTax"
            }
          }
        }
      ]
    },
    "PayRecCalculatedTaxSummaryForService": {
      "type": "object",
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "Sum of grossvalues"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "Sum of all withholding values"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "Sum all NetValues"
        },
        "pccWithholdingModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PccWithholdingMode"
          }
        },
        "taxByType": {
          "type": "object",
          "description": "Object with summary of all taxes returned by engine",
          "properties": {
            "issRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pisRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofinsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csllRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irrf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            }
          }
        }
      }
    },
    "PaymentCalculatedTax": {
      "type": "object",
      "description": "Structure with value for each tax withhold value of this line",
      "properties": {
        "taxByType": {
          "$ref": "#/definitions/PaymentTaxByType"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Sum of tax type not VAT (Value Added Tax)"
        }
      }
    },
    "PayRecLinesIn": {
      "type": "object",
      "required": [
        "itemCode"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "Installment number in this document"
        },
        "lineType": {
          "type": "string",
          "enum": [
            "installment"
          ]
        },
        "itemCode": {
          "type": "string",
          "description": "Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc."
        },
        "itemDescription": {
          "type": "string",
          "description": "Free description about this payment"
        },
        "itemDocNumber": {
          "type": "string",
          "description": "Installment number, when paid AS IS"
        },
        "lineUntaxedPenality": {
          "type": "number",
          "format": "double",
          "description": "Penalty, usually because paid after due date"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "unconditional discounts"
        }
      }
    },
    "PaymentTaxByType": {
      "type": "object",
      "description": "Object with summary of all taxes returned by engine",
      "properties": {
        "irrf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "issRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "PccWithholdingMode": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CSRF",
            "individual"
          ],
          "description": "Inform if this group of tax are calculated considering the threashold by PCC or Individualy (each tax separately)"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "this attribute occurs only for CSRF type, When CRSF mode, this is sum of pisRf, CofinsRf and CsllRf"
        },
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "PaymentLinesIn": {
      "allOf": [
        {
          "$ref": "#/definitions/PayRecLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "Net value, the net Value is Gross value plus penalty minus sum of discount and withhold taxes"
            }
          }
        }
      ]
    },
    "CompanyAgastGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/AgastGoods"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyAgastService": {
      "allOf": [
        {
          "$ref": "#/definitions/AgastService"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyIcmsConfByState": {
      "allOf": [
        {
          "$ref": "#/definitions/IcmsConfByState"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyProcessScenario": {
      "allOf": [
        {
          "$ref": "#/definitions/ProcessScenario"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyTaxTypeRate": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxTypeRate"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "ItemGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/ItemSimple"
        },
        {
          "type": "object",
          "properties": {
            "sealCode": {
              "type": "string",
              "maxLength": 60,
              "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
            },
            "nFCI": {
              "type": "string",
              "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
              "description": "Importation content form number (Número de controle da FCI - Ficha de Conteúdo de Importação)"
            },
            "isIcmsStSubstitute": {
              "type": "boolean",
              "description": "this field inform that this merchandise or product is ICMS Substitute\nMust be used when the item is for resale and the company will assume the role of ICMS Substitute (wholesaler, retailer, distributor). Example: when Importing some product the company does not pay IcmsSt at the time of customs clearance but when selling sale the item.\nDeverá ser utilizado quando a empresa que irá vender a mercadoria sujeita ao ICMS ST for o SUBSTITUTO TRIBUTÁRIO (Distribuidor, atacadista e varejista), como por exemplo das mercadorias IMPORTADAS, neste sentido, a empresa não irá pagar o ICMS ST no desembaraço aduaneiro e irá recolher quando for vender as mesmas.\n"
            },
            "source": {
              "description": "- '0' # National goods - except those treated in codes 3,4, 5 and 8\n- '1' # Foreign goods - Imported directly by seller, except those in code 6\n- '2' # Foreign goods - Acquired in the internal market (inside Brazil), except those in code 7\n- '3' # National goods - Merchandise or goods with imported content above 40% and with less than or equal to 70%\n- '4' # National goods from production following 'standard basic processes' as stablished by legislation (standard basic processes are devised to separate simple assembly from manufaturing processes)\n- '5' # National goods - Merchandise or goods with imported content equal or below 40%\n- '6' # Foreign goods - Directly imported by Seller, without a National Equivalent as listed by Comex and natural gas\n- '7' # Foreign goods - Acquired inside Brazil, without a National Equivalent  as listed by Comex and natural gas\n- '8' # National goods - Merchandise or goods with imported content above 70%\n",
              "type": "string",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8"
              ]
            },
            "productType": {
              "type": "string",
              "description": "Tipo fiscal do produto segundo tabela SPED\nFiscal product type by SPED list table\n- 'FOR PRODUCT' # 04  Produto Acabado\n- 'FOR MERCHANDISE' # 00  Mercadoria para Revenda\n- 'NO RESTRICTION' # 99 Outras\n- 'SERVICE' # 09  Serviços\n- 'FEEDSTOCK' # 01  Matéria-Prima\n- 'FIXED ASSETS' # 08 Ativo Imobilizado\n- 'PACKAGING' # 02 Embalagem\n- 'PRODUCT IN PROCESS' # 03  Produto em Processo\n- 'SUBPRODUCT' # 05  Subproduto\n- 'INTERMEDIATE PRODUCT' # 06  Produto Intermediário\n- 'MATERIAL FOR USAGE AND CONSUMPTION' # 07  Material de Uso e Consumo\n- 'OTHER INPUTS' # 10  Outros insumos\n",
              "enum": [
                "FOR PRODUCT",
                "FOR MERCHANDISE",
                "NO RESTRICTION",
                "SERVICE",
                "FEEDSTOCK",
                "FIXED ASSETS",
                "PACKAGING",
                "PRODUCT IN PROCESS",
                "SUBPRODUCT",
                "INTERMEDIATE PRODUCT",
                "MATERIAL FOR USAGE AND CONSUMPTION",
                "OTHER INPUTS"
              ]
            },
            "manufacturerEquivalent": {
              "type": "boolean",
              "description": "Item is merchandise but will be considered product"
            },
            "appropriateIPIcreditWhenInGoing": {
              "type": "boolean",
              "description": "Inform that this item will have rights to aprropriate IPI credit"
            },
            "appropriateICMScreditWhenInGoing": {
              "type": "boolean",
              "description": "Inform that this item will have rights to aprropriate IPI credit"
            },
            "usuallyAppropriatePISCOFINSCredit": {
              "type": "boolean",
              "description": "Subject to appropriate PIS/COFINS credit, when NO CUMULATIVE"
            },
            "isPisCofinsEstimatedCredit": {
              "type": "boolean",
              "description": "The credit PIS/COFINS is subject to purchase form companies, but exist some exceptions, when the credit will be a estimated amount"
            },
            "piscofinsRevenueType": {
              "description": "- '01' # Vinculada Exclusivamente a Receita Tributada no Mercado Interno\n- '02' # Exclusivamente a Receita Não Tributada no Mercado Interno\n- '03' # Exclusivamente a Receita de Exportação\n- '04' # Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno\n- '05' # Vinculada a Receitas Tributadas no Mercado Interno e de Exportação\n- '06' # Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação\n- '07' # Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação\n",
              "type": "string",
              "enum": [
                "01",
                "02",
                "03",
                "04",
                "05",
                "06",
                "07"
              ]
            },
            "icmsBaseDiscountForMonoPhaseSocialContr": {
              "type": "number",
              "format": "double",
              "description": "Discount allowed on icms base when PIS/COFINS are Monophase"
            },
            "cean": {
              "type": "string",
              "pattern": "[0-9]{0}|[0-9]{8}|[0-9]{12,14}",
              "description": "GTIN NUMBER"
            },
            "nve": {
              "type": "string",
              "pattern": "[A-Z]{2}[0-9]{4}",
              "description": "Nomenclatura de Valor aduaneio e Estatístico - NCM extension code"
            },
            "salesUnit": {
              "type": "string",
              "maxLength": 6
            },
            "salesUnitIPIfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to IPI taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "salesUnitIcmsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to ICMS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "salesUnitIcmsStfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to ICMS-ST taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "salesUnitPisCofinsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to PIS/COFINS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnit": {
              "type": "string",
              "maxLength": 6
            },
            "purchaseUnitIPIfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to IPI taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnitIcmsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to ICMS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnitIcmsStfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to ICMS-ST taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnitPisCofinsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to PIS/COFINS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "firstUse": {
              "type": "boolean",
              "description": "When the product is new, and will be retail, firt time that it exit it is subject to IPI"
            }
          }
        }
      ]
    },
    "ItemService": {
      "allOf": [
        {
          "$ref": "#/definitions/ItemSimple"
        },
        {
          "type": "object",
          "required": [
            "cityTaxConf"
          ],
          "properties": {
            "withLaborAssignment": {
              "type": "boolean",
              "description": "Applies the \"is Labor Assignment\" tax scenario. (Cessão de mão de obra).\n"
            },
            "cityTaxConf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemService_CityTaxConf"
              }
            }
          }
        }
      ]
    },
    "Location": {
      "allOf": [
        {
          "$ref": "#/definitions/Address"
        },
        {
          "title": "Location",
          "type": "object",
          "required": [
            "companyId",
            "code",
            "type"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            },
            "code": {
              "type": "string",
              "maxLength": 60,
              "description": "this property identify the location, it is unique for this company"
            },
            "type": {
              "type": "string",
              "enum": [
                "ShipFrom",
                "ShipTo",
                "ServiceRendered"
              ],
              "description": "this property identify the location, it is unique for this company"
            },
            "email": {
              "type": "string",
              "maxLength": 60,
              "description": "Email"
            },
            "federalTaxId": {
              "type": "string",
              "description": "Federal tax id, CNPJ or CPF"
            },
            "stateTaxId": {
              "type": "string",
              "pattern": "^(\\d{9,14}|ISENTO)$",
              "description": "state tax id for this location"
            },
            "secondaryStateTaxId": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stateTaxId": {
                    "type": "string",
                    "pattern": "^(\\d{9,14}|ISENTO)$"
                  },
                  "state": {
                    "$ref": "#/definitions/StateEnum"
                  }
                }
              }
            },
            "cityTaxId": {
              "type": "string",
              "maxLength": 15,
              "description": "City Tax ID"
            },
            "suframa": {
              "type": "string",
              "pattern": "([0-9]{8,9})?"
            },
            "mainActivity": {
              "description": "Main location activity",
              "type": "string",
              "enum": [
                "commerce",
                "industry",
                "service"
              ]
            },
            "nfseProcessModel": {
              "description": "- 'edi' # City hall has web service and the integration is automatic\n- 'xml' # Create RPS specific to City, bat does not have webservice integration\n- 'rps' # Create a generic RPS, NF is by hands\n",
              "type": "string",
              "enum": [
                "edi",
                "xml",
                "rps"
              ]
            }
          }
        }
      ]
    },
    "IcmsConfByState": {
      "type": "object",
      "required": [
        "code",
        "state"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60,
          "description": "Identify the IcmsConfState in namespace"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "name for this configuration"
        },
        "startDate": {
          "type": "string",
          "description": "date when this configuration values starts"
        },
        "expirationDate": {
          "type": "string",
          "description": "date when this configuration values expire"
        },
        "inactive": {
          "type": "boolean",
          "description": "set this configuration to Inactive"
        },
        "subjectToST": {
          "type": "boolean",
          "description": "inform that the item linked to this configuration is subject to ICMS ST on this state"
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "On sales process inform the CST hat the item linked to this configuration is subject to for the own ICMS\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "calcMode": {
          "type": "string",
          "enum": [
            "BYMVARATE",
            "SRP",
            "MMSRP",
            "OPERATIONAMOUNT"
          ],
          "description": "how this ICMS will be calculed for itens linked to this configuration"
        },
        "discountRateForMonoPhase": {
          "type": "number",
          "format": "double",
          "description": "discount if the item is subject to monophase PIS/COFINS for transactions inside state"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "icmsBaseDiscount": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "msrp": {
          "type": "number",
          "format": "double",
          "description": "SRP or MMSRP amount base for this icms configuration"
        },
        "mvaRate": {
          "type": "number",
          "format": "double",
          "description": "ICMS mva rate to define calc base"
        },
        "msrpUnit": {
          "type": "string",
          "maxLength": 6,
          "description": "unit used to SRP amount value"
        },
        "icmsLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "Code for the ICM legal reason, this message will be placed on invoice."
        },
        "fcpRate": {
          "type": "number",
          "format": "double",
          "description": "Fundo de Combate à pobreza / Fund Against Poverty"
        },
        "icmsSTConf": {
          "type": "object",
          "properties": {
            "icmsStLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the ICM-ST legal reason, this message will be placed on invoice."
            },
            "hasReductionOfMVAForSimples": {
              "type": "boolean",
              "description": "inform that substituted is tax regime Simplified the operation MVA will be reduced"
            },
            "reductionOfMVAForSimples": {
              "type": "number",
              "format": "double",
              "description": "mva reduction when substituted is tax regime Simplified."
            },
            "reductionOfMVAForSimplesLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for MVA Reduction legal reason, this message will be placed on invoice, when destionation entity is Simplified."
            },
            "calcMode": {
              "type": "string",
              "enum": [
                "BYMVARATE",
                "SRP",
                "MSRP"
              ],
              "description": "how this ICMS-ST will be calculed for itens linked to this configuration"
            },
            "mvaRate": {
              "type": "number",
              "format": "double",
              "description": "ICMS-ST mva rate to define calc base"
            },
            "icmsStBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS rate - Redução da BC ICMS ST (%)"
            },
            "srp": {
              "type": "number",
              "format": "double",
              "description": "SRP or MSRP amount base for this ICMS-ST configuration"
            },
            "srpUnit": {
              "type": "string",
              "maxLength": 6,
              "description": "unit used to srv amount value"
            }
          }
        },
        "icmsInterStateConf": {
          "type": "array",
          "description": "the map key is state code",
          "items": {
            "$ref": "#/definitions/IcmsConfInterState"
          }
        }
      }
    },
    "IcmsConfInterState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "icmsCSTInterstate": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "The CST inform if the interstate operation is taxable or not taxable and  when not taxable inform type\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "The CST inform f this item is taxable or not taxable no target state and when not taxable inform type\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "calcMode": {
          "type": "string",
          "enum": [
            "BYMVARATE",
            "SRP",
            "MMSRP",
            "OPERATIONAMOUNT"
          ],
          "description": "how this ICMS will be calculed for itens linked to this configuration"
        },
        "discountRateForMonoPhase": {
          "type": "number",
          "format": "double",
          "description": "discount if the item is subject to monophase PIS/COFINS when operation interstate"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "fcpRate": {
          "type": "number",
          "format": "double",
          "description": "FCP rate (Fundo de Combate à Probreza / Fund Against Poverty"
        },
        "icmsBaseDiscount": {
          "type": "number",
          "format": "double",
          "description": "ICMS discount rate"
        },
        "icmsBaseDiscountInterState": {
          "type": "number",
          "format": "double",
          "description": "ICMS interstate discount rate"
        },
        "icmsBaseDiscountInterStateForImported": {
          "type": "number",
          "format": "double",
          "description": "ICMS interstate discount rate"
        },
        "msrp": {
          "type": "number",
          "format": "double",
          "description": "SRP or MMSRP amount base for this icms configuration"
        },
        "mvaRate": {
          "type": "number",
          "format": "double",
          "description": "ICMS MVA rate to define calc base"
        },
        "msrpUnit": {
          "type": "string",
          "maxLength": 6,
          "description": "unit used to SRP amount value"
        },
        "icmsLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "Code for the ICM legal reason, this message will be placed on invoice."
        },
        "icmsSTConf": {
          "type": "object",
          "properties": {
            "protocolType": {
              "type": "string",
              "enum": [
                "COVENANT",
                "PROTOCOL",
                "NOTHING"
              ]
            },
            "icmsStLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the ICM-ST legal reason, this message will be placed on invoice."
            },
            "hasReductionOfMVAForSimples": {
              "type": "boolean",
              "description": "inform that substituted is tax regime Simplified the operation MVA will be reduced"
            },
            "reductionOfMVAForSimples": {
              "type": "number",
              "format": "double",
              "description": "MVA reduction when substituted is tax regime Simplified."
            },
            "reductionOfMVAForSimplesLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for MVA Reduction legal reason, this message will be placed on invoice, when destionation entity is Simplified."
            },
            "calcMode": {
              "type": "string",
              "enum": [
                "BYMVARATE",
                "SRP",
                "MSRP"
              ],
              "description": "how this ICMS-ST will be calculed for itens linked to this configuration"
            },
            "icmsStBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS rate - Redução da BC ICMS ST (%)"
            },
            "mvaRate": {
              "type": "number",
              "format": "double",
              "description": "ICMS-ST MVA rate to define calc base"
            },
            "srp": {
              "type": "number",
              "format": "double",
              "description": "SRP or MSRP amount base for this ICMS-ST configuration"
            },
            "srpUnit": {
              "type": "string",
              "maxLength": 6,
              "description": "unit used to SRP amount value"
            }
          }
        }
      }
    },
    "ProcessScenario": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxConf"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 60,
              "description": "Process name to Identify this configuration"
            },
            "description": {
              "type": "string",
              "description": "description detail about process"
            },
            "class": {
              "type": "string",
              "maxLength": 60,
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "type": {
              "type": "string",
              "enum": [
                "SALES",
                "PURCHASE",
                "SALES_RETURN",
                "PURCHASE_RETURN",
                "TRANSFER_RETURN",
                "SHIPPING",
                "SHIPPING_RETURN",
                "TRANSFER",
                "RECEIPT_AJUSTE",
                "TRANSFER_AJUSTE"
              ]
            },
            "wayType": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ],
              "description": "inform if the transaction is an operation to internalizing (receive) item or value"
            },
            "goal": {
              "type": "string",
              "enum": [
                "Normal",
                "Complementary",
                "Voided",
                "Replacement",
                "Return",
                "Adjustment"
              ],
              "description": "- 'Normal' # Normal\n- 'Complementary' # Complemento de Valores\n- 'Voided' # Anulação\n- 'Replacement' # Substituto\n- 'Return' # Devolução ou retorno\n- 'Adjustment' # Ajuste\n"
            },
            "overWriteCFOP": {
              "type": "boolean",
              "description": "inform that the configuration process overwrites the cfop configuration."
            },
            "cfops": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CfopConf"
              }
            }
          }
        }
      ]
    },
    "CfopConf": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxConf"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 60
            },
            "class": {
              "type": "string",
              "maxLength": 60,
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "description": {
              "type": "string",
              "maxLength": 512
            },
            "wayType": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ],
              "description": "inform if the transaction is an operation to internalizing item or value"
            },
            "codInState": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are within the same state."
            },
            "codOtherState": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are to another state."
            },
            "codOtherCountry": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are to another country."
            },
            "productType": {
              "type": "string",
              "enum": [
                "FOR PRODUCT",
                "FOR MERCHANDISE",
                "NO RESTRICTION"
              ],
              "description": "this field is used to define right CFOP, one operation type can be specialized to item product, item merchandise or generic"
            },
            "operationToTaxPayerOtherState": {
              "type": "boolean",
              "description": "field used to indicate an operation to ICMS tax payer"
            },
            "operationWithST": {
              "type": "boolean",
              "description": "field used to indicate an operation to items sibject to ICMS-ST"
            },
            "operationToFreeZone": {
              "type": "boolean",
              "description": "field used to indicate an operation to free zone"
            },
            "specificForProductClass": {
              "type": "string",
              "enum": [
                "OTHERS",
                "COMMUNICATION",
                "ENERGY",
                "TRANSPORT",
                "FUEL AND LUBRICANT",
                "VEHICLE",
                "ALCOHOLIC BEVERAGES",
                "WEAPONS",
                "AMMO",
                "PERFUME",
                "TOBACCO"
              ],
              "description": "field used to indicate an operation to some product class specifically"
            }
          }
        }
      ]
    },
    "TaxConf": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 40,
          "description": "main unique identificator"
        },
        "class": {
          "type": "string",
          "maxLength": 60,
          "description": "Natureza da Operação\nOperation Class\n"
        },
        "stockImpact": {
          "type": "boolean",
          "description": "Inform that the process has inventory impact."
        },
        "financialImpact": {
          "type": "boolean",
          "description": "Inform that the process has financial impact."
        },
        "cstIPI": {
          "type": "string",
          "description": "Inform if this process is subject to IPI taxation on output process\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE    \n- 'I'  # IMMUNE\n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n- 'R'  # RETURN OF IPI\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "I",
            "O",
            "OZ",
            "R"
          ]
        },
        "ipiLegalTaxClass": {
          "type": "string",
          "description": "Legal tax classificação for IPI (enquadramento)\nWhen the processo has CST IPI 52 or 54, is mandatory inform Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU=\n"
        },
        "lookupIPIFromReferredTransaction": {
          "type": "boolean",
          "description": "Busca IPI para adicionar na base de calculo de ICMS do item de uma nota referenciada, Exemplo, processo de venda para entrega futura e simples remessa de uma venda de entrega futura.\nLookup IPI tax to add to ICMS Tax base from same item of Referred Transaction\n"
        },
        "accruablePISTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to PIS taxation or exempt\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE\n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "O",
            "OZ"
          ]
        },
        "pisExemptLegalReasonCode": {
          "type": "string",
          "description": "Reference to a tax reason record ID."
        },
        "pisExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specifi reason, this field has the description"
        },
        "accruableCOFINSTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to COFINS taxation or exempt\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE    \n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "O",
            "OZ"
          ]
        },
        "cofinsExemptLegalReasonCode": {
          "type": "string",
          "maxLength": 3,
          "description": "When exempt, taxable with zero, suspended, not taxable, this field holds the official code number"
        },
        "cofinsExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specifi reason, this field has the description"
        },
        "allowIPIcreditWhenInGoing": {
          "type": "boolean",
          "description": "Inform that the process allow IPI credit to Input process"
        },
        "icmsConf": {
          "type": "array",
          "description": "the map key is state code",
          "items": {
            "$ref": "#/definitions/IcmsTaxConf"
          }
        }
      }
    },
    "IcmsTaxConf": {
      "allOf": [
        {
          "$ref": "#/definitions/IcmsTaxConfBase"
        },
        {
          "type": "object",
          "properties": {
            "sameforAllDestination": {
              "type": "boolean",
              "description": "when this attribute is true, the relationShip dont need be analysed"
            },
            "relationShip": {
              "type": "array",
              "description": "the mapping key is state code / A chave do mapeamento é o código do Estado.",
              "items": {
                "$ref": "#/definitions/IcmsTaxConfBase"
              }
            }
          }
        }
      ]
    },
    "IcmsTaxConfBase": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "icmsCSOSN": {
          "type": "string",
          "description": "when the company is tax regime Simples uses CSOSN and for the same type of transaction, CST and CSOSN cant match",
          "enum": [
            "T",
            "E",
            "N",
            "O",
            "OZ"
          ]
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "On sales process inform the CST hat the item linked to this configuration is subject to\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "deferralrate": {
          "type": "number",
          "format": "double",
          "description": "Percentual deferral rate, applied over ICMS tax when CST is D DEFEREMENT"
        },
        "messageCode": {
          "type": "string",
          "maxLength": 60,
          "description": "Message to add to NF when this configuration is used"
        }
      }
    },
    "ItemSimple": {
      "required": [
        "code",
        "agast"
      ],
      "properties": {
        "companyId": {
          "description": "Company ID",
          "type": "string",
          "format": "uuid",
          "maxLength": 36
        },
        "code": {
          "type": "string",
          "description": "ERP Code",
          "maxLength": 60
        },
        "agast": {
          "type": "string",
          "description": "Agast Code",
          "maxLength": 60
        },
        "description": {
          "type": "string",
          "description": "Item Description",
          "maxLength": 60
        }
      }
    },
    "ItemService_CityTaxConf": {
      "type": "object",
      "required": [
        "cityCode",
        "serviceCode"
      ],
      "properties": {
        "hasCPOM": {
          "type": "boolean",
          "description": "inform if seller has CPOM registry on destionation city, for this service."
        },
        "cityCode": {
          "type": "string",
          "description": "The IBGE code of the related city. The city's ISS properties may be checked and set through\nthe `taxconf/iss/{cityCode}` service; (ISSConfByCity)\n"
        },
        "serviceCode": {
          "type": "string",
          "description": "The service code which this item is registered at the target city.\nThe \"tax behavior\" of this item at the target city may be checked and set through\nthe `taxconf/iss/{cityCode}/{serviceCode}` service. (ISSConfService)\n"
        }
      }
    },
    "eInvoiceReturn_Status": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "eInvoiceReturn_Obj": {
      "type": "object",
      "properties": {
        "base64": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "eInvoiceReturn_PDF": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/eInvoiceReturn_Status"
        },
        "pdf": {
          "$ref": "#/definitions/eInvoiceReturn_Obj"
        }
      }
    },
    "eInvoiceReturn": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/eInvoiceReturn_Status"
        },
        "pdf": {
          "$ref": "#/definitions/eInvoiceReturn_Obj"
        },
        "xml": {
          "$ref": "#/definitions/eInvoiceReturn_Obj"
        }
      }
    },
    "SefazDisablementIn": {
      "type": "object",
      "required": [
        "serie",
        "init"
      ],
      "properties": {
        "model": {
          "type": "string",
          "enum": [
            "NFe",
            "NFCe"
          ]
        },
        "serie": {
          "type": "integer",
          "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)\n"
        },
        "message": {
          "type": "string",
          "maxLength": 255,
          "minLength": 15
        },
        "init": {
          "type": "number",
          "description": "First number of disable range.",
          "maxLength": 9
        },
        "end": {
          "type": "number",
          "description": "Last number of disable range.",
          "maxLength": 9
        }
      }
    },
    "SefazItPutIn": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "maxLength": 1000
        }
      }
    },
    "SefazItDeleteIn": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "maxLength": 255,
          "minLength": 15
        }
      }
    },
    "SefazItManifestIn": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "- '210200' # 'Confirmacao da Operacao',\n- '210210' # 'Ciencia da Operacao',\n- '210220' # 'Desconhecimento da Operacao',\n- '210240' # 'Operacao nao Realizada'\n",
          "enum": [
            "210200",
            "210210",
            "210220",
            "210240"
          ]
        },
        "message": {
          "type": "string",
          "maxLength": 255,
          "minLength": 15
        }
      }
    },
    "TransactionForSefazGoods": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForSefazGoods"
        },
        "lines": {
          "type": "array",
          "maxItems": 990,
          "items": {
            "$ref": "#/definitions/LineForSefazGoods"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/CalculatedTaxSummaryForSefazGoods"
        }
      }
    },
    "TransactionForNfse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForNfse"
        },
        "line": {
          "$ref": "#/definitions/LineForNfse"
        }
      }
    },
    "HeaderForSefazGoods": {
      "type": "object",
      "required": [
        "participants",
        "companyLocation"
      ],
      "properties": {
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "participants": {
          "description": "List of transaction participants, Seller, Buyer, Carrier",
          "type": "object",
          "properties": {
            "entity": {
              "$ref": "#/definitions/EntityForGoods"
            },
            "transporter": {
              "$ref": "#/definitions/EntityForGoods"
            }
          }
        },
        "nfAccessKey": {
          "type": "string",
          "description": "This is the public NF id. With this number is possible get invoice information directly from government."
        },
        "nfceQrCode": {
          "type": "string",
          "maxLength": 600,
          "minLength": 100,
          "description": "qr code printed on DANFE;"
        },
        "transactionModel": {
          "type": "string",
          "enum": [
            "01",
            "1B",
            "02",
            "2D",
            "2E",
            "04",
            "06",
            "07",
            "08",
            "8B",
            "09",
            "10",
            "11",
            "13",
            "14",
            "15",
            "16",
            "18",
            "21",
            "22",
            "26",
            "27",
            "28",
            "29",
            "55",
            "57",
            "59",
            "60",
            "65"
          ],
          "description": "- '01' # Nota Fiscal 1/1A\n- '1B' # Nota Fiscal Avulsa\n- '02' # Nota Fiscal de Venda a-Consumidor\n- '2D' # Cupom Fiscal\n- '2E' # Cupom Fiscal-Bilhete de Passagem\n- '04' # Nota Fiscal de Produtor\n- '06' # Nota Fiscal/Conta de Energia Elétrica\n- '07' # Nota Fiscal de Serviço de Transporte\n- '08' # Conhecimento de Transporte Rodoviário de-Cargas\n- '8B' # Conhecimento de Transporte de-Cargas Avulso\n- '09' # Conhecimento de Transporte Aquaviário de-Cargas\n- '10' # Conhecimento Aéreo\n- '11' # Conhecimento de Transporte Ferroviário de-Cargas\n- '13' # Bilhete de Passagem Rodoviário\n- '14' # Bilhete de Passagem Aquaviário\n- '15' # Bilhete de Passagem e-Nota de-Bagagem\n- '16' # Bilhete de Passagem Ferroviário\n- '18' # Resumo de Movimento Diário\n- '21' # Nota Fiscal de Serviço de-Comunicação\n- '22' # Nota Fiscal de Serviço de Telecomunicação\n- '26' # Conhecimento de Transporte Multimodal de-Cargas\n- '27' # Nota Fiscal De Transporte Ferroviário De-Carga\n- '28' # Nota Fiscal/Conta de Fornecimento de Gás-Canalizado\n- '29' # Nota Fiscal/Conta de Fornecimento de Água-Canalizada\n- '55' # Nota Fiscal Eletrônica (NF-e)\n- '57' # Conhecimento de Transporte Eletrônico (CT-e)\n- '59' # Cupom Fiscal Eletrônico (CF-e-SAT)\n- '60' # Cupom Fiscal Eletrônico (CF-e-ECF)\n- '65' # Nota Fiscal Eletrônica ao-Consumidor Final (NFC-e)\n"
        },
        "transactionClass": {
          "type": "string",
          "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
        },
        "currency": {
          "type": "string",
          "default": "BRL",
          "description": "currency code"
        },
        "companyLocation": {
          "type": "string",
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format, create transaction date"
        },
        "shippingDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format, when products were shipped, can be empty or absent"
        },
        "additionalInfo": {
          "$ref": "#/definitions/AdditionalInformation"
        },
        "tpImp": {
          "type": "string",
          "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n- '3' # DANFe Simplified;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5"
          ]
        },
        "idDest": {
          "description": "This indicator inform transaction target place, when is AUTOMATIC the company address and entity address are analyzed to identify type of transaction target place\n1- same state; 2 - interstate; 3-with exterior. Exist some cases where is necessary force this situation like when buyer from another state buy something in loco, the address are from different states, but transaction no. \nIdentificador de Local de destino da operação, na opção AUTOMATIC endereços da Companhia e da entidade destino são analisados para\nsaber se é uma operação dentro do mesmo estado, interestadual ou com o exterior. Há situações onde é necessário forçar este indicador como por exemplo \nQuando uma pessoa com endereço em outro estado, compra uma mercadoria de forma presencial, é uma operação interna apesar dos endereços dos envolvidos estarem em estados distintos.\n- 0 # AUTOMATIC - DEFAULT\n- 1 # Interna;\n- 2 # Interestadual;\n- 3 # Exterior)\n",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "default": 0
        },
        "indPres": {
          "type": "string",
          "description": "Presence indicator\n- '0' # Not applicable\n- '1' # Presential;\n- '2' # Remote, internet;\n- '3' # Remote, phone;\n- '4' # NFC-e home delivery;\n- '9' # Remote, others\n",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "9"
          ]
        },
        "invoiceNumber": {
          "type": "integer",
          "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)"
        },
        "invoiceSerial": {
          "type": "integer",
          "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)\n"
        },
        "defaultLocations": {
          "$ref": "#/definitions/DefaultLocations"
        },
        "transport": {
          "description": "Shipment",
          "$ref": "#/definitions/Transport"
        },
        "nfRef": {
          "description": "Transactions or other invoices referenced",
          "type": "array",
          "maxItems": 500,
          "items": {
            "$ref": "#/definitions/NRef"
          }
        },
        "payment": {
          "$ref": "#/definitions/Payment"
        },
        "purchaseInfo": {
          "$ref": "#/definitions/PurchaseInfo"
        },
        "export": {
          "$ref": "#/definitions/ExportInfo"
        }
      }
    },
    "LineForSefazGoods": {
      "type": "object",
      "required": [
        "lineCode",
        "itemCode",
        "numberOfItems",
        "lineAmount",
        "itemDescription",
        "taxDetails"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This is unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "maxLength": 60,
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states."
        },
        "avalaraGoodsAndServicesType": {
          "type": "string",
          "description": "AGAST CODE for itemCode"
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal 11 integers and 1 to 4 decimals captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "returnedPercentageAmount": {
          "type": "number",
          "format": "double",
          "description": "when is return operation this field inform the percentage of returned itens. This decimal max 3 integers and 2 decimals, v >=0.00 and v <= 100.00"
        },
        "lineUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "This decimal 11 integers and 1 to 10 decimals captures the unit price of this line."
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "In its simplest form lineAmount = (item price * numberOfItems). If taxIncluded is 'true', lineAmount = (item price * numberOfItems + tax)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Discount conditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "discount unconditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "operationTypeReceiptMap": {
          "type": "string",
          "maxLength": 60,
          "description": "Mapping table used to discover the CFOP when execute the Tax receipt in funciotn of CFOP Received and Item Type\nthis property is used only if eDocCreator=others and eDocCreatorPerspective=false\n"
        },
        "legalReason": {
          "type": "object",
          "description": "Legal Reason for this tax scenario",
          "properties": {
            "id": {
              "type": "string",
              "description": "Internal ID"
            },
            "name": {
              "type": "string",
              "description": "Short name to this message"
            }
          }
        },
        "cfop": {
          "type": "integer",
          "description": "Fiscal Operation Code of transport service"
        },
        "hasStockImpact": {
          "type": "boolean",
          "description": "return if this transaction has stock impact for this process or CFOP"
        },
        "hasFinantialImpact": {
          "type": "boolean",
          "description": "return if this transaction has finantial impact for this process or CFOP"
        },
        "freightAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "insuranceAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "otherCostAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "indTotType": {
          "type": "boolean",
          "default": true,
          "description": "The item value will compose the invoice total value."
        },
        "referencedItem": {
          "type": "object",
          "description": "order number, information used for B2B control process",
          "properties": {
            "refNFe": {
              "type": "string",
              "maxLength": 44,
              "pattern": "[0-9]{44}"
            },
            "lineCode": {
              "type": "integer",
              "description": "This identifier for this line in the transaction"
            }
          }
        },
        "orderNumber": {
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "description": "order number, information used for B2B control process"
        },
        "orderItemNumber": {
          "type": "string",
          "pattern": "[0-9]{1,6}",
          "description": "number of the item from order number, information used for B2B control process"
        },
        "fciNumber": {
          "type": "string",
          "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
          "description": "Gloal Unique identifier (Importation form)"
        },
        "recopiNumber": {
          "type": "string",
          "maxLength": 20,
          "pattern": "[0-9]{20}",
          "description": "RECOPI number"
        },
        "infAdProd": {
          "type": "string",
          "maxLength": 500,
          "description": "additional information about product (referenced standard, complementary info, etc)"
        },
        "vehicle": {
          "$ref": "#/definitions/Vehicle"
        },
        "medicine": {
          "$ref": "#/definitions/Medicine"
        },
        "weapon": {
          "$ref": "#/definitions/Weapon"
        },
        "fuel": {
          "$ref": "#/definitions/Fuel"
        },
        "entityIsIcmsSubstitute": {
          "type": "boolean",
          "description": "Inform that for this item the Entity referenced is ICMS Substitute"
        },
        "isTransportIcmsWithheld": {
          "type": "boolean",
          "description": "Inform that this item has ICMS withheld for transport value service."
        },
        "icmsTaxRelief": {
          "type": "object",
          "required": [
            "reasonCode"
          ],
          "properties": {
            "reasonCode": {
              "type": "string",
              "enum": [
                "1",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "16"
              ],
              "description": "When item transaction subject to desoneration, this is the reason code\n- '1' # Táxi;\n- '3' # Produtor Agropecuário;\n- '4' # Frotista/Locadora;\n- '5' # Diplomático/Consular;\n- '6' # Utilitários e Motocicletas da Amazônia Ocidental e Áreas de Livre Comércio (Resolução 714/88 e 790/94 – CONTRAN e suas alterações);\n- '7' # SUFRAMA;\n- '8' # Venda a órgão Público;\n- '9' # Outros\n- '10' # Deficiente Condutor\n- '11' # Deficiente não condutor\n- '12' # Fomento agropecuário\n- '16' # Olimpíadas Rio 2016\n"
            },
            "taxBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS Tax base rate discount  (desconto na base do ICMS referetne a desoneração)"
            },
            "taxAmount": {
              "type": "number",
              "format": "double",
              "description": "Amount for Icms Relief (desoneração)"
            }
          }
        },
        "export": {
          "description": "Exportation detail",
          "type": "array",
          "maxItems": 500,
          "items": {
            "type": "object",
            "properties": {
              "drawbackNumber": {
                "type": "string",
                "maxLength": 11,
                "pattern": "[0-9]{0,11}"
              },
              "indExport": {
                "type": "object",
                "description": "indirect exportation",
                "required": [
                  "registerNumber",
                  "accessKey",
                  "quantity"
                ],
                "properties": {
                  "registerNumber": {
                    "type": "string",
                    "maxLength": 12,
                    "pattern": "[0-9]{0,12}",
                    "description": "Exportation register number"
                  },
                  "accessKey": {
                    "type": "string",
                    "maxLength": 44,
                    "pattern": "[0-9]{44}",
                    "description": "invoice access key received to export"
                  },
                  "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "This decimal 11 integers and 0 to 4 decimals, quantity exported in real"
                  }
                }
              }
            }
          }
        },
        "di": {
          "description": "Import declaration",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "required": [
              "diNumber",
              "registerDateDI",
              "clearanceSite",
              "clearanceState",
              "transportDIType",
              "intermediateType",
              "adi"
            ],
            "properties": {
              "customsValue": {
                "type": "number",
                "format": "double",
                "description": "customs value, valor aduaneiro (II Block of NFe)"
              },
              "diNumber": {
                "type": "string",
                "maxLength": 12,
                "minLength": 1,
                "description": "Import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
              },
              "registerDateDI": {
                "type": "string",
                "description": "Register date of import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
              },
              "clearanceSite": {
                "type": "string",
                "maxLength": 60,
                "minLength": 1,
                "description": "Clerance Site\nLocal do desembaraço aduaneiro\n"
              },
              "clearanceState": {
                "$ref": "#/definitions/StateEnum",
                "description": "Clerance Site State\nEstado onde ocorrreu o desembaraço aduaneiro\n"
              },
              "clearanceDate": {
                "type": "string",
                "description": "Clerance date"
              },
              "transportDIType": {
                "description": "- '1' # Maritima\n- '2' # Fluvial\n- '3' # Lacustre\n- '4' # Aerea\n- '5' # Postal\n- '6' # Ferroviaria\n- '7' # Rodoviaria\n- '8' # Conduto\n- '9' # Meios Proprios\n- '10' # Entrada/Saida Ficta\n",
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "10"
                ]
              },
              "afrmmValue": {
                "type": "number",
                "format": "double",
                "description": "Aditional amount to freight to renew merchant marine, This decimal 13 integers and 2 decimals\n[Valor Adicional ao frete para renovação de marinha mercante]\n"
              },
              "intermediateType": {
                "description": "- '1' # On One's Own [1-por conta propria]\n- '2' # On Behalf And Order [2-por conta e ordem]\n- '3' # Order [3-encomenda]\n",
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3"
                ]
              },
              "buyerFederalTaxID": {
                "type": "string",
                "pattern": "[0-9]{14}",
                "description": "Buyer federal tax id\nCNPJ do comprador ou encomendante\n"
              },
              "buyerState": {
                "$ref": "#/definitions/StateEnum",
                "description": "Buyer sate\nEstado do comprador ou encomendante\n"
              },
              "exporterCode": {
                "type": "string",
                "maxLength": 60,
                "minLength": 1,
                "description": "Exporter code"
              },
              "adi": {
                "type": "array",
                "maxItems": 100,
                "description": "aditional import declaration",
                "items": {
                  "type": "object",
                  "required": [
                    "addNumber",
                    "sequentialNumber",
                    "manufacturerCode"
                  ],
                  "properties": {
                    "addNumber": {
                      "type": "integer",
                      "description": "aditional sequence number (1 to 100)"
                    },
                    "sequentialNumber": {
                      "type": "integer",
                      "description": "sequential item number for this adi, sequence number (1 to 999)"
                    },
                    "manufacturerCode": {
                      "type": "string",
                      "maxLength": 60,
                      "minLength": 1,
                      "description": "Manufatorer erp internal code"
                    },
                    "adiDiscount": {
                      "type": "number",
                      "format": "double",
                      "description": "This decimal 13 integers and 2 decimals, aditional adi discount"
                    },
                    "drawbackNumber": {
                      "type": "string",
                      "pattern": "[0-9]{0,11}",
                      "minLength": 1,
                      "description": "Drawback number"
                    }
                  }
                }
              }
            }
          }
        },
        "taxDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxDetailForSefaz"
          }
        },
        "extend": {
          "$ref": "#/definitions/AgastExtendForSefaz"
        }
      }
    },
    "CalculatedTaxSummaryForSefazGoods": {
      "type": "object",
      "required": [
        "subtotal",
        "taxByType"
      ],
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "taxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line taxed discounts"
        },
        "untaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line untaxed discounts"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute + sum of all line tax attribute not VAT - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "properties": {
            "icms": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsStSd": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsPartOwn": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsPartDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDifaFCP": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDifaDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDifaRemet": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDeson": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsCredsn": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "pisSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "cofinsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "ipi": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "ipiReturned": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "ii": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "iof": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "aproxtribState": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "aproxtribFed": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            }
          }
        }
      }
    },
    "TaxDetailForSefaz": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "string",
          "enum": [
            "icms",
            "icmsSt",
            "icmsStSd",
            "icmsPartOwn",
            "icmsPartDest",
            "icmsDifaFCP",
            "icmsDifaDest",
            "icmsDifaRemet",
            "icmsRf",
            "icmsDeson",
            "icmsCredsn",
            "pis",
            "pisSt",
            "cofins",
            "cofinsSt",
            "ipi",
            "ipiReturned",
            "ii",
            "iof",
            "aproxtribCity",
            "aproxtribState",
            "aproxtribFed",
            "aproxtrib"
          ],
          "description": "Tax identificator"
        },
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "legalReason": {
          "type": "string",
          "description": "Legal Reason for this tax scenario"
        },
        "source": {
          "$ref": "#/definitions/CSTTableAEnum"
        },
        "cstB": {
          "$ref": "#/definitions/CSTTableBEnum"
        },
        "cst": {
          "type": "string"
        },
        "modBC": {
          "type": "string"
        },
        "pMVA": {
          "type": "number",
          "format": "double",
          "description": "Percent of Value-added margin (%)"
        },
        "pRedBC": {
          "type": "number",
          "format": "double",
          "description": "calc base percent of discount"
        },
        "pBCOp": {
          "type": "number",
          "format": "double",
          "description": "percent of calc base of own icms"
        },
        "ufst": {
          "$ref": "#/definitions/StateEnum"
        },
        "calcMode": {
          "$ref": "#/definitions/CalcModelEnum"
        },
        "legalTaxClass": {
          "type": "integer",
          "description": "Legal tax classificação for IPI (enquadramento tributário)"
        },
        "legalTaxClassDC": {
          "type": "integer",
          "description": "Legal tax classificação for IPI (enquadramento) for Drinks and Cigarettes"
        },
        "cnpjProd": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'\nFederal tax ID of real manufacturer, nly for exportation\n"
        },
        "sealCode": {
          "type": "string",
          "maxLength": 60,
          "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
        },
        "sealQuantity": {
          "type": "string",
          "pattern": "[0-9]{1,12}",
          "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
        },
        "icmsInterPartRate": {
          "type": "number",
          "format": "double",
          "description": "percent of icms apportionment between two states"
        },
        "icmsSesonReason": {
          "$ref": "#/definitions/ICMSSesonReason"
        },
        "perQuantityReturned": {
          "type": "number",
          "format": "double",
          "description": "percent of merchandise returned"
        }
      }
    },
    "AgastExtendForSefaz": {
      "type": "object",
      "properties": {
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "ex": {
          "type": "integer",
          "description": "hsCode Exception for IPI tax"
        },
        "cest": {
          "type": "string",
          "pattern": "[0-9]{7}",
          "description": "tax substitution code - Codigo especificador da Substuicao Tributaria"
        },
        "cean": {
          "type": "string",
          "pattern": "[0-9]{0}|[0-9]{8}|[0-9]{12,14}",
          "description": "GTIN NUMBER"
        },
        "nve": {
          "type": "string",
          "pattern": "[A-Z]{2}[0-9]{4}",
          "description": "Nomenclatura de Valor aduaneio e Estatístico - NCM extension code"
        },
        "unit": {
          "type": "string",
          "maxLength": 6,
          "description": "Sales Unit"
        },
        "unitTaxable": {
          "type": "string",
          "maxLength": 6,
          "description": "Sales Taxable Unit"
        },
        "nFCI": {
          "type": "string",
          "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
          "description": "Importation content form number (Número de controle da FCI - Ficha de Conteúdo de Importação)"
        },
        "goal": {
          "type": "string",
          "enum": [
            "Normal",
            "Complementary",
            "Voided",
            "Replacement",
            "Return",
            "Adjustment"
          ],
          "description": "- 'Normal' # Normal\n- 'Complementary' # Complemento de Valores\n- 'Voided' # Anulação\n- 'Replacement' # Substituto\n- 'Return' # Devolução ou retorno\n- 'Adjustment' # Ajuste\n"
        },
        "icmsSt": {
          "type": "number",
          "format": "double"
        },
        "ipi": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TaxByTypeSummaryForSefazGoods": {
      "type": "object",
      "required": [
        "tax"
      ],
      "description": "summary of all taxes",
      "properties": {
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "sum of all lines calcBase"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value"
        }
      }
    },
    "HeaderForNfse": {
      "type": "object",
      "properties": {
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "companyLocation": {
          "type": "string",
          "maxLength": 64,
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        },
        "rpsNumber": {
          "type": "integer",
          "description": "Provisional receipt services, sequencial number maintained by the client application, unique by serie"
        },
        "rpsSerie": {
          "type": "string",
          "description": "set name identifier for rps number sequency.",
          "default": "0"
        },
        "discriminationIn": {
          "type": "string",
          "maxLength": 1000,
          "minLength": 1,
          "description": "Service discrimination, free description about service"
        },
        "entity": {
          "$ref": "#/definitions/EntityForNfse"
        },
        "defaultLocations": {
          "$ref": "#/definitions/EntityLocationForNfse"
        },
        "payment": {
          "type": "object",
          "properties": {
            "terms": {
              "$ref": "#/definitions/PaymentTerms"
            },
            "installments": {
              "type": "array",
              "description": "installments",
              "items": {
                "$ref": "#/definitions/InstallmentCompleteForNfse"
              }
            }
          }
        }
      }
    },
    "LineForNfse": {
      "type": "object",
      "required": [
        "itemCode"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This string is a unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU."
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Conditional discount"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Unconditional discount"
        },
        "withLaborAssignment": {
          "type": "boolean",
          "description": "Service w/labor assignment\nServiço com cessão de mão de obra\n"
        },
        "taxDeductions": {
          "type": "object",
          "properties": {
            "iss": {
              "type": "number",
              "format": "double",
              "description": "Deduction amount not taxable by ISS . Example constructions materials included in a service invoice"
            }
          }
        },
        "lineNetValue": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineNetValue = (lineAmount - discountTaxable - sum of whithholdings)."
        },
        "cst": {
          "type": "string",
          "maxLength": 2,
          "enum": [
            "01",
            "02",
            "03",
            "04",
            "05",
            "21",
            "22",
            "23",
            "24",
            "25",
            "40"
          ],
          "description": "- '01' # ORIGIN MODE\n- '02' # ORIGIN MODE BUT EXEMPT\n- '03' # ORIGIN MODE BUT IMMUNE\n- '04' # ORIGIN MODE BUT SUSPENDED FOR LEGAL REASON\n- '05' # ORIGIN MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '21' # DESTINATION MODE\n- '22' # DESTINATION MODE BUT EXEMPT\n- '23' # DESTINATION MODE BUT IMMUNE\n- '24' # DESTINATION MODE BUT SUSPENDED\n- '25' # DESTINATION MODE BUT SUSPENDED\n- '40' # FOREIGN IMMUNE MODE\n"
        },
        "cstRf": {
          "type": "string",
          "maxLength": 2,
          "enum": [
            "61",
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72"
          ],
          "description": "- '61' # WITHHOLD NORMAL MODE\n- '62' # WITHHOLD NORMAL MODE BUT EXEMPT\n- '63' # WITHHOLD NORMAL MODE BUT IMMUNE\n- '64' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR LEGAL REASON\n- '65' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '66' # WITHHOLD FORCED MODE\n- '67' # WITHHOLD FORCED MODE BUT EXEMPT\n- '68' # WITHHOLD FORCED MODE BUT IMMUNE\n- '69' # WITHHOLD FORCED MODE BUT SUSPENDED FOR LEGAL REASON\n- '70' # WITHHOLD FORCED MODE BUT SUSPENDED FOR ADMINISTRATIVE PROCESS\n- '71' # NO WITHHOLD MODE\n- '72' # NO WITHHOLD FOREIGN MODE\n"
        },
        "taxDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxDetailForNfse"
          }
        },
        "extend": {
          "$ref": "#/definitions/AgastExtendForNfse"
        }
      }
    },
    "EntityForNfse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "SERVICE BUYER NAME OFFICIAL"
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "cnpjcpf": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "pattern": "[0-9]{2,14}|ISENTO",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "adminProcess": {
          "type": "string",
          "maxLength": 30,
          "description": "PROCESS NUMBER TO ISS SUSPENDED FOR ADMINISTRATIVE PROCESS"
        },
        "build": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 15,
              "description": "Business code. Código da obra OBRA"
            },
            "art": {
              "type": "string",
              "maxLength": 15,
              "description": "technical note. Anota\\u00e7\\u00e3o de Responsabilidade T\\u00e9cnica-ART, estabelece que todos os contratos referentes à  execu\\u00e7\\u00e3o de servi\\u00e7os ou obras de Engenharia, Agronomia, Geologia, Geografia ou Meteorologia dever\\u00e3o ser objeto de anota\\u00e7\\u00e3o no Conselho Regional de Engenharia e Agronomia"
            },
            "cei": {
              "type": "string",
              "maxLength": 15,
              "description": "Número CEI da Obra"
            },
            "number": {
              "type": "string",
              "maxLength": 15,
              "description": "Número de Matrícula da Obra"
            }
          }
        }
      }
    },
    "EntityLocationForNfse": {
      "type": "object",
      "required": [
        "zipcode"
      ],
      "properties": {
        "street": {
          "type": "string",
          "maxLength": 60,
          "description": "Street Name"
        },
        "neighborhood": {
          "type": "string",
          "maxLength": 60,
          "description": "Neighborhood Name"
        },
        "zipcode": {
          "type": "string",
          "description": "Zip Code"
        },
        "cityCode": {
          "type": "string",
          "pattern": "[0-9]{7}|0",
          "description": "City Code",
          "default": "0"
        },
        "cityName": {
          "type": "string",
          "maxLength": 60,
          "description": "City Name"
        },
        "state": {
          "type": "string",
          "description": "State Code",
          "pattern": "^([A-Z]{2,3})$"
        },
        "countryCode": {
          "type": "string",
          "pattern": "[0-9]{1,4}",
          "description": "Country Code",
          "default": "0"
        },
        "country": {
          "type": "string",
          "maxLength": 3,
          "description": "Use ISO 3166-1 alpha-3 codes",
          "pattern": "^([A-Z]{3})$"
        },
        "number": {
          "type": "string",
          "maxLength": 60,
          "description": "House number"
        },
        "complement": {
          "type": "string",
          "maxLength": 60,
          "description": "Any other information about the address (Room, Suite, Floor, etc))."
        }
      }
    },
    "InstallmentCompleteForNfse": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "installment Due Date"
        },
        "netAmount": {
          "type": "number",
          "format": "double",
          "description": "Net amount due for this installment, grossValue - ∑ (withhold amounts)"
        }
      }
    },
    "TaxDetailForNfse": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "string",
          "enum": [
            "aproxtribCity",
            "aproxtribFed",
            "pis",
            "pisRf",
            "cofins",
            "cofinsRf",
            "csll",
            "csllRf",
            "irrf",
            "inss",
            "inssRf",
            "iss",
            "issRf",
            "irpj"
          ],
          "description": "Tax identificator\n- 'aproxtribCity'\n- 'aproxtribFed'\n- 'pis'\n- 'pisRf'\n- 'cofins'\n- 'cofinsRf'\n- 'csll'\n- 'csllRf'\n- 'irrf'\n- 'inss'\n- 'inssRf'\n- 'iss'\n- 'issRf'\n- 'irpj'\n"
        },
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        }
      }
    },
    "AgastExtendForNfse": {
      "type": "object",
      "properties": {
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, LC 116"
        },
        "issDueatDestination": {
          "type": "boolean",
          "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
        }
      }
    },
    "XMLDocument": {
      "description": "Document XML Information",
      "type": "object",
      "required": [
        "documentType",
        "xmlData"
      ],
      "properties": {
        "documentType": {
          "description": "Document Type",
          "type": "string",
          "enum": [
            "ESTABELECIMENTO_FISCAL",
            "EF_INSCRICAO_ESTADUAL",
            "CONTABILISTA",
            "PARCEIROS",
            "PARCEIROS_ALTERACOES",
            "UNIDADE_MEDIDA",
            "CONVERSAO_UNIDADE_MEDIDA",
            "ITEM",
            "ITEM_ALTERACAO",
            "ITEM_ESTABELECIMENTO_FISCAL",
            "INFORMACAO_COMPLEMENTAR",
            "OBS_LANCAMENTO_FISCAL",
            "DOCUMENTO_FISCAL_CABECALHO",
            "DF_INFORMACAO_COMPLEMENTAR",
            "DOCUMENTO_FISCAL_REFEREN",
            "PROCESSO_REFERENCIADO",
            "DOC_ARRECADACAO_REFEREN",
            "CUPOM_FISCAL_REFERENCIADO",
            "LOCAL_COLETA_ENTREGA",
            "DF_OBS_LANCAMENTO_FISCAL",
            "DF_OBS_LANC_FISCAL_DETALHE",
            "DOCUMENTO_FISCAL_ITENS",
            "ITENS_DF_OPER_MEDICAMENTOS",
            "ITENS_DF_OPER_ARMAS_FOGO",
            "ITENS_DF_OPER_VEICULOS_NOV",
            "FATURA_DOCUMENTO_FISCAL",
            "PARCELAS_FATURA_DF",
            "EQUIPAMENTO_ECF",
            "REDUCAO_Z",
            "REDUCAO_Z_TOTALIZA_PARCIAIS",
            "DOC_FISCAL_EMITIDO_ECF",
            "ITENS_DF_EMITIDO_ECF",
            "EXPORTACAO",
            "EXPORTACAO_DOC_FISCAL",
            "EXPORTACAO_INDIRETA",
            "APURACAO_IMPOSTO",
            "APU_AJUSTE",
            "APU_AJUSTE_PROC",
            "APU_AJUSTE_DOC",
            "APU_INF_ADICIONAL",
            "APU_OBR_RECOLHER",
            "APU_AJUSTE_IPI",
            "INVENTARIO",
            "FORNECEDORCLIENTE",
            "CONTROLE_ESTOQUE",
            "INSUMO_RELACIONADO",
            "BENS",
            "FOLHA_PAGAMENTO",
            "PROVENTOS",
            "RESPARQDIGITAL",
            "LOTACAO",
            "CONTABILFOLHAPAGAM",
            "FORMULARIO_UTILIZADO",
            "FORMULARIO_CANCELADO",
            "DACON_CATEGORIA",
            "DACON_CATPPRODALIQUOTAS",
            "ESTAB_FISCAL_DACON",
            "DACON_CONTAS_CONTABEIS",
            "ESTAB_FISCAIS_DIPJ",
            "CIAP_Bens",
            "CIAP_Movimentacao",
            "CIAP_Mov_Doc_Fiscal",
            "CIAP_Mov_Doc_Fiscal_Item",
            "CIAP_Outros_Creditos",
            "DF_Impostos_retidos",
            "OUTROS_DOC_PISCOFINS",
            "ATIVO_IMOBILIZADO_PISCOFINS",
            "AT_IMOB_PISCOF_PROCREF",
            "CRED_PRESUMIDO_EST_ABERTURA",
            "CONTR_RETIDA_FONTE",
            "DEDUCOES_DIVERSAS",
            "CREDITOS_DECOR_EVENTOS",
            "INFO_ADICIONAIS_DIFERIMENTO",
            "CONTRIB_DIFERIDA_PERIO_ANT",
            "APURACA_CRED_EXTEMP",
            "CONTRIB_SOC_EXTEMP",
            "DESC_CONTRIB_EXTEMP",
            "NAT_OP",
            "PROC_REF_ACAO_JUD",
            "PROC_REF_PROC_ADMIN",
            "CTRL_CRED_FISCAIS",
            "CONTR_SOCIAL_EXT",
            "VLR_RETIDO_FONTE",
            "DEM_CRED_DESCONTAR",
            "DET_CONTR_SOCIAL_EXT",
            "PROCESSO_REF",
            "TIPO_MOV_INVENTARIO",
            "SALDO_FECHAMENTO",
            "MOVIMENTO_INVENTARIO",
            "TIPO_PEDIDO_EXTERNO",
            "ATRIB_CST_ENTRADA",
            "ATRIB_CFOP_ENTRADA",
            "PEDIDO_EXTERNO_ITENS",
            "DEBITO_IMPOSTO_DCTF",
            "PAGAMENTO_DARF",
            "COMPENSA_PGTO_INDEVIDO",
            "OUTRAS_COMPENSACOES",
            "SUSPENSAO_IMPOSTO_XSD",
            "PARCELAMENTO_IMPOSTO",
            "DEDUCAO_DARF",
            "APU_CONTR_PREV",
            "DET_APU_CONTR_PREV",
            "PROC_REF_CONTR_PREV",
            "CONS_CONTR_PREV",
            "CONS_OPERACAO_PERIODO",
            "CONS_OPER_PER_PROCREF",
            "COMP_OPERACAO_PERIODO",
            "FCI_ITEM"
          ]
        },
        "xmlData": {
          "description": "the document in xml format (parsed to string)",
          "type": "string",
          "maxLength": 500000
        }
      }
    },
    "XMLDocumentAccounting": {
      "description": "Accounting Document XML Information",
      "type": "object",
      "required": [
        "documentType",
        "xmlData"
      ],
      "properties": {
        "documentType": {
          "description": "Document Type",
          "type": "string",
          "enum": [
            "PLANO_CONTAS_SC",
            "HISTORICO_PADRAO",
            "CENTRO_CUSTO_SC",
            "LRAP_CAMPOS",
            "LRAP_VALORES",
            "LANC_CONTABIL_SC",
            "CROSS_REF_CTA",
            "COD_AGLUT",
            "IND_AGLUT_CONTA",
            "CAMPOS_ADICIONAIS",
            "SALDO_CONTABIL_SC",
            "ENTIDADE_REFERENCIAL",
            "PARTICIPANTE"
          ]
        },
        "xmlData": {
          "description": "the document in xml format (parsed to string)",
          "type": "string",
          "maxLength": 500000
        }
      }
    },
    "IssConfByCity": {
      "type": "object",
      "required": [
        "cityCode"
      ],
      "properties": {
        "cityCode": {
          "description": "City Code (IBGE)",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        }
      }
    },
    "IssConfService": {
      "type": "object",
      "required": [
        "cityCode",
        "serviceCode"
      ],
      "properties": {
        "companyId": {
          "type": "string",
          "description": "Company code for custom AGAST, standard AGAST does't use this code."
        },
        "inheritedFrom": {
          "type": "string",
          "description": "Reference to agastServiceCode, do keep traceability."
        },
        "cityCode": {
          "description": "City Code (IBGE)",
          "type": "integer",
          "format": "int64"
        },
        "serviceCode": {
          "description": "Service Code in City",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "serviceAgasts": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "relationship to ServiceAgast, where we have the federal confguration"
          }
        },
        "issTaxation": {
          "description": "- 'T' # TAXABLE - TRIBUTÁVEL INCLUSIVE PARA EXPORTAÇÃO'\n- 'E' # TAXABLE WITH EXEMPTION FOR EXPORTS - ISENTO PARA SERVIÇOS PRESTADOS AO EXTERIOR (DEFAULT)\n- 'F' # EXEMPT\n- 'A' # SUSPENDED FOR ADMINISTRATIVE REASON\n- 'L' # SUSPENDED FOR LEGAL DECISION\n- 'I' # IMMUNE\n",
          "type": "string",
          "enum": [
            "T",
            "E",
            "F",
            "A",
            "L",
            "I"
          ]
        },
        "issWhDestOtherCities": {
          "type": "boolean"
        },
        "issWhDestSameCity": {
          "type": "boolean"
        },
        "issWhOriginUnregSeller": {
          "type": "boolean"
        },
        "taxRate": {
          "$ref": "#/definitions/IssConfService_TaxRate"
        }
      }
    },
    "IbptConf": {
      "type": "object",
      "properties": {
        "code": {
          "description": "IBPT Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpbtConfItem"
          }
        }
      }
    },
    "CsvIbptList": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "IssConfService_TaxRate": {
      "type": "object",
      "properties": {
        "ISS": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        },
        "ISS_RF": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        },
        "ISS_CPOM": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        }
      }
    },
    "IssConfService_TaxRateItem": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "string"
        },
        "rateType": {
          "type": "string"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "isExempt": {
          "type": "boolean"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "zone1": {
          "type": "integer",
          "format": "int32"
        },
        "zone2": {
          "type": "integer",
          "format": "int32"
        },
        "period": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            }
          }
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "IpbtConfItem": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "federalTax": {
          "type": "number",
          "format": "double"
        },
        "importTax": {
          "type": "number",
          "format": "double"
        },
        "stateTax": {
          "type": "number",
          "format": "double"
        },
        "cityTax": {
          "type": "number",
          "format": "double"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "Document": {
      "description": "Document XML Information",
      "type": "object",
      "required": [
        "documentType",
        "xmlData"
      ],
      "properties": {
        "documentType": {
          "description": "Document Type",
          "type": "string",
          "enum": [
            "SERVICO",
            "MERCADORIA",
            "TRANSPORTE"
          ]
        },
        "xmlData": {
          "description": "the document in xml format (parsed to string)",
          "type": "string",
          "maxLength": 500000
        },
        "additionalParameters": {
          "description": "Additional informations that should be attached to the document",
          "type": "string",
          "maxLength": 500000
        }
      }
    }
  },
  "x-swagger-namespace": "BR",
  "x-swagger-erouter-validation-rules": {
    "/agasts/*": {
      "in": "header",
      "field": "Avalara-Product-Type",
      "rules": {
        "goods": "/agasts/*?goods",
        "_default": "/agasts/*?service"
      }
    },
    "/calculations/*": {
      "in": "body",
      "field": "header.messageType",
      "rules": {
        "goods": {
          "field": "header.transactionType",
          "rules": {
            "_default": "/calculations/*?goods"
          }
        },
        "_default": {
          "field": "header.transactionType",
          "rules": {
            "Purchase": "/calculations/*?service-purchase",
            "Payment": "/calculations/*?service-payment",
            "Receipt": "/calculations/*?service-receipt",
            "_default": "/calculations/*?service-sales"
          }
        }
      }
    },
    "/companies/agasts/*": {
      "in": "header",
      "field": "Avalara-Product-Type",
      "rules": {
        "goods": "/companies/agasts/*?goods",
        "_default": "/companies/agasts/*?service"
      }
    },
    "/companies/items/*": {
      "in": "header",
      "field": "Avalara-Product-Type",
      "rules": {
        "goods": "/companies/items/*?goods",
        "_default": "/companies/items/*?service"
      }
    },
    "/transactions/*": {
      "in": "body",
      "field": "header.messageType",
      "rules": {
        "goods": {
          "field": "header.transactionType",
          "rules": {
            "_default": "/transactions/*?goods"
          }
        },
        "_default": {
          "field": "header.transactionType",
          "rules": {
            "Purchase": "/transactions/*?service-purchase",
            "Payment": "/transactions/*?service-payment",
            "Receipt": "/transactions/*?service-receipt",
            "_default": "/transactions/*?service-sales"
          }
        }
      }
    }
  }
}