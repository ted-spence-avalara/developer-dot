{
  "swagger": "2.0",
  "info": {
    "title": "AvaTax Brazil",
    "description": "The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.",
    "version": "1.0"
  },
  "host": "avataxbr-sandbox.avalarabrasil.com.br",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/v2",
  "paths": {
    "/accounts/companies": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompaniesList",
        "summary": "Retrieve Companies by account",
        "description": "Retrieve list companies of one account",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "List of Companies by Account",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountCompany"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createAccountCompany",
        "summary": "Create company and your data configuration",
        "description": "This method operation create a company for a account\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Company Code",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/accounts/companies/{companyId}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_companyId"
        }
      ],
      "delete": {
        "operationId": "deleteAccountCompany",
        "description": "Delete relation Account x company",
        "tags": [
          "Company"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "Delete relation Account x company",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/addresses/{zipcode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getZipCode",
        "description": "This operation return address",
        "parameters": [
          {
            "$ref": "#/parameters/path_zipCode"
          }
        ],
        "tags": [
          "Address"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return address",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/agasts?service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastListService",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Text query",
            "type": "string"
          },
          {
            "name": "hscode",
            "in": "query",
            "description": "Fiscal Classification query.",
            "type": "string"
          },
          {
            "name": "wh.PIS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) PIS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.COFINS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) COFINS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.CSLL",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) CSLL.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.IRRF",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) IRRF.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.INSS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) INSS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "title": "List of AGASTS",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Item description"
                  },
                  "id": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "code": {
                    "type": "string",
                    "description": "Custom item code"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return agast configurations that match with p ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createAgastService",
        "summary": "Create agast",
        "description": "This method operation create a AGAST\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastService"
            }
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/agasts/{code}?service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_agastCode"
        }
      ],
      "get": {
        "operationId": "getAgastService",
        "summary": "Get agast",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastService"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateAgastService",
        "summary": "Update agast",
        "description": "This method operation create a agast\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastService"
            }
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAgastService",
        "summary": "Delete Agast",
        "description": "Delete Agast",
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/agasts?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastListGoods",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Text query",
            "type": "string",
            "maxLength": 40
          },
          {
            "name": "hscode",
            "in": "query",
            "description": "Fiscal Classification query.",
            "type": "string"
          },
          {
            "name": "cest",
            "in": "query",
            "description": "Filter CEST (text query).",
            "type": "string"
          },
          {
            "name": "cestexact",
            "in": "query",
            "description": "Filter CEST (exact).",
            "type": "string"
          },
          {
            "name": "initialvalidity",
            "in": "query",
            "description": "Initial validity as ISO Date.",
            "type": "string"
          },
          {
            "name": "finalvalidity",
            "in": "query",
            "description": "Final validity as ISO Date.",
            "type": "string"
          }
        ],
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "title": "List of AGASTS",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Item description"
                  },
                  "id": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "code": {
                    "type": "string",
                    "description": "Custom item code"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return agast configurations that match with p ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createAgastGoods",
        "summary": "Create agast",
        "description": "This method operation create a AGAST\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastGoods"
            }
          }
        ],
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/agasts/{code}?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_agastCode"
        }
      ],
      "get": {
        "operationId": "getAgastGoods",
        "summary": "Get agast",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastGoods"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateAgastGoods",
        "summary": "Update agast",
        "description": "This method operation create a agast\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastGoods"
            }
          }
        ],
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAgastGoods",
        "summary": "Delete Agast",
        "description": "Delete Agast",
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/agasts-service/equivalent": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastServiceEquivalent",
        "summary": "Find Equivalent AGAST",
        "description": "This operation returns List of IssConfService from City To that have same Service Agast of serviceCodeFrom if cityFrom and serviceCodeFrom.\nIf not Mapped return List with zero elements.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "City IBGE Code - From",
            "required": true,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "City IBGE Code - To",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "description": "Service Code in City From",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastServiceOperations"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/agasts-service/lc116": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastServiceLC116",
        "summary": "Find AGAST by LC116",
        "description": "This operation returns List of IssConfService from city to that have Service Agast with LC116 informed code.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "description": "City IBGE Code",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "LC116 Code",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastServiceOperations"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/iss": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrive list of ISS",
        "operationId": "getIssList",
        "description": "This operation return ISS configurations that match with parameters queries.\n",
        "parameters": [
          {
            "name": "cityCode",
            "in": "query",
            "description": "Optionally filter by city IBGE code.\n",
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Optionally filter by state (two letters).\n",
            "type": "string"
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of ISS",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssConfByCity"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new ISS Configuration",
        "operationId": "createIssConfByCity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfByCity",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfByCity"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/iss-list": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "list ISS information",
        "description": "list ISS information",
        "operationId": "listIssService",
        "parameters": [
          {
            "name": "cityCode",
            "type": "string",
            "in": "query",
            "description": "Filter by city code"
          },
          {
            "name": "isCustom",
            "type": "string",
            "in": "query",
            "description": "Show only custom agasts"
          },
          {
            "name": "agast",
            "type": "string",
            "in": "query",
            "description": "Filter by agast"
          },
          {
            "name": "serviceCode",
            "type": "string",
            "in": "query",
            "description": "Filter by service code"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listLimit"
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "ISS Code List",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssConfService"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/iss/{cityCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_cityCode"
        }
      ],
      "get": {
        "summary": "get ISS information by City Code.",
        "operationId": "getIssConfByCity",
        "description": "This operation return configurations of ISS that match with parameters queries\n",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "City Configurations",
              "$ref": "#/definitions/IssConfByCity"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a ISS Service Code in City.",
        "operationId": "createIssConfByCityServiceId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfService",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfService"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "put": {
        "summary": "update a ISS by City Code.",
        "operationId": "updateIssConfByCity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfByCity",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfByCity"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a ISS by City Code.",
        "operationId": "deleteIssConf",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/iss/{cityCode}/{serviceCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_cityCode"
        },
        {
          "$ref": "#/parameters/path_serviceCode"
        }
      ],
      "get": {
        "summary": "get ISS information by Service Code in City.",
        "operationId": "getIssConfByCityServiceId",
        "parameters": [
          {
            "name": "isCustom",
            "type": "string",
            "in": "query",
            "description": "Look up for a company-scoped custom config."
          }
        ],
        "description": "This operation return configurations of ISS that match with parameters queries\n",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Service Configurations",
              "$ref": "#/definitions/IssConfService"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a ISS by Service Code in City.",
        "operationId": "updateIssConfByCityServiceId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfService",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfService"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a ISS by Service Code in City.",
        "operationId": "deleteIssConfServiceId",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/icms/{state}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_stateAbbr"
        }
      ],
      "get": {
        "summary": "retrive list of ICMS.",
        "operationId": "getIcmsList",
        "description": "This operation return ICMS configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "suffixcode",
            "in": "query",
            "description": "Identify this ICMS",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "date",
            "in": "query",
            "description": "When informed return valid version configuration for this date",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "return the inactive versions too",
            "type": "boolean"
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of ICMS",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IcmsConfByState"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new ICMS Configuration",
        "operationId": "createIcmsconfstate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IcmsConfState",
            "in": "body",
            "description": "IcmsConfState",
            "schema": {
              "$ref": "#/definitions/IcmsConfByState"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/icms/{state}/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_stateAbbr"
        },
        {
          "$ref": "#/parameters/path_icmsCode"
        }
      ],
      "get": {
        "summary": "get ICMS information by State.",
        "operationId": "getIcmsConfByState",
        "description": "This operation return configurations of icms that match with parameters queries\n",
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IcmsConfByState"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a IcmsConf State,",
        "operationId": "updateIcmsconfstate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IcmsConfState",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IcmsConfByState"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a ICMS by State.",
        "operationId": "deleteIcmsConf",
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/icms-search/": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrieve list of ICMS.",
        "operationId": "getIcmsListSearch",
        "description": "This operation return ICMS configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Search for codes",
            "type": "string",
            "maxLength": 60,
            "required": true
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter for states",
            "type": "string",
            "maxLength": 2,
            "required": false
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "ICMS configurations list",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IcmsConfByState"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/cfop": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrive list of CFOP.",
        "operationId": "getCfopList",
        "description": "This operation return CFOP configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "suffixcode",
            "in": "query",
            "description": "Identify this CFOP, the CFOP Code has two parts N.XXX where N the prefix is the operation scope type if IN or OUT and if is in state, other state, other country and suffix XXX is the operation type\n",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "date",
            "in": "query",
            "description": "When informed return valid version configuration for this date\n",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "return the inactive versions too\n",
            "type": "boolean"
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CfopConf"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new CFOP configuration",
        "operationId": "createCfop",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/CfopConf"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/cfop/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "get CFOP information.",
        "operationId": "getCfop",
        "description": "This operation return CFOP configuration\n",
        "parameters": [
          {
            "$ref": "#/parameters/path_cfopCode"
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CfopConf"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a CFOP configuration",
        "operationId": "updateCfop",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/path_cfopCode"
          },
          {
            "name": "taxconfcfop",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/CfopConf"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a CFOP.",
        "operationId": "deleteCfop",
        "parameters": [
          {
            "$ref": "#/parameters/path_cfopCode"
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/process": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrieve list of Processes.",
        "operationId": "getProcessList",
        "description": "This operation return Process Type configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "filter the configuration by accountID, if not informed, only the standard configuration will be returned\n",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "date",
            "in": "query",
            "description": "When informed return valid version configuration for this date\n",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "return the inactive versions too\n",
            "type": "boolean"
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessScenario"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new Process Type configuration",
        "operationId": "createProcess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taxconfprocess",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/process/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "get Process information.",
        "operationId": "getProcess",
        "description": "This operation return Process Type configuration\n",
        "parameters": [
          {
            "$ref": "#/parameters/path_processCode"
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a Process Type configuration",
        "operationId": "updateProcess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/path_processCode"
          },
          {
            "name": "taxconfprocess",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a Process.",
        "operationId": "deleteProcess",
        "parameters": [
          {
            "$ref": "#/parameters/path_processCode"
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/default-process": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "Lists all of the engine's default processes.",
        "description": "Lists all of the engine's default processes.",
        "operationId": "listDefaultProcess",
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Default processes list.",
              "type": "array",
              "items": {
                "description": "Default process.",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "class": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/default-process/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "name": "code",
          "in": "path",
          "type": "string",
          "description": "Process code.",
          "required": true
        }
      ],
      "get": {
        "summary": "Gets details of a Default Process.",
        "description": "Gets details of a Default Process.",
        "operationId": "getDefaultProcess",
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "The Process.",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/ibpt/{state}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_stateAbbr"
        }
      ],
      "post": {
        "summary": "create a new Process Type configuration",
        "operationId": "createIbptFromCSV",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "csvIBPT",
            "in": "body",
            "description": "CSV file",
            "schema": {
              "$ref": "#/definitions/CsvIbptList"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf IBPT"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a IBPT.",
        "operationId": "deleteIbptFromState",
        "tags": [
          "Tax Conf IBPT"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/legal-reason": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "List Legal Reasons.",
        "operationId": "listReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Filters by company domain entries.\nProvide \"global\" to retrive only \"global\" entries.\nCompanyId searches also match global entries.\n",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "text",
            "in": "query",
            "type": "string",
            "description": "Performs text search.\n"
          },
          {
            "name": "referenceCode",
            "in": "query",
            "type": "string",
            "description": "Filters by reference code."
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "List.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/LegalReason"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "Update Legal Reason.",
        "operationId": "updateReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalReason"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "Create Legal Reason.",
        "operationId": "createReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalReason"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/legal-reason/{uuid}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "Get single Legal Reason.",
        "operationId": "getReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LegalReason"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "Delete a Legal Reason entry.",
        "operationId": "deleteReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "responses": {
    "200_SuccessList": {
      "description": "Success response",
      "headers": {
        "X-Pagination-Current-Page": {
          "description": "The current page. Defaults to 1.",
          "type": "number"
        },
        "X-Pagination-Limit": {
          "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
          "type": "number"
        },
        "X-Pagination-Total-Pages": {
          "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
          "type": "number"
        },
        "X-Pagination-Total-Count": {
          "description": "The total number of records across all pages.",
          "type": "number"
        }
      }
    },
    "201_Created": {
      "description": "Success.",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid"
          }
        }
      }
    },
    "204_NoContent": {
      "description": "Success."
    },
    "400_BadRequest": {
      "description": "The request was invalid or cannot be otherwise served.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    },
    "401_Unauthorized": {
      "description": "Authentication credentials were missing or incorrect.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "403_Forbidden": {
      "description": "The request is understood, but it has been refused or access is not allowed.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "404_NotFound": {
      "description": "The URI requested is invalid or the resource requested does not exists.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "429_TooManyRequests": {
      "description": "The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "500_InternalServerError": {
      "description": "Something is broken.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "503_ServiceUnavailable": {
      "description": "The server is up, but overloaded with requests. Try again later.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    }
  },
  "parameters": {
    "header_jwt": {
      "name": "Authorization",
      "in": "header",
      "description": "Bearer {auth}",
      "required": true,
      "type": "string"
    },
    "path_companyId": {
      "name": "companyId",
      "in": "path",
      "description": "Company ID",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "path_zipCode": {
      "name": "zipcode",
      "in": "path",
      "description": "ZIP Code",
      "required": true,
      "type": "string",
      "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
      "maxLength": 60
    },
    "path_agastCode": {
      "name": "code",
      "in": "path",
      "description": "Agast Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "query_agastCode": {
      "name": "agast",
      "in": "query",
      "description": "Custom Agast Code",
      "type": "string",
      "maxLength": 60
    },
    "header_listLimit": {
      "name": "X-Pagination-Limit",
      "in": "header",
      "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
      "type": "integer",
      "format": "int32",
      "default": 10,
      "minimum": 5
    },
    "header_listPage": {
      "name": "X-Pagination-Current-Page",
      "in": "header",
      "type": "integer",
      "format": "int32",
      "description": "The current page. Defaults to 1.",
      "default": 1,
      "minimum": 1
    },
    "path_cityCode": {
      "name": "cityCode",
      "in": "path",
      "description": "City Code",
      "required": true,
      "type": "number"
    },
    "path_serviceCode": {
      "name": "serviceCode",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "path_processCode": {
      "name": "code",
      "in": "path",
      "description": "Process Code",
      "required": true,
      "type": "string"
    },
    "path_icmsCode": {
      "name": "code",
      "in": "path",
      "description": "ICMS Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_ipbtCode": {
      "name": "code",
      "in": "path",
      "description": "IBPT Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_cfopCode": {
      "name": "code",
      "in": "path",
      "description": "CFOP Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_stateAbbr": {
      "name": "state",
      "in": "path",
      "description": "Brazilian State",
      "required": true,
      "type": "string",
      "enum": [
        "ac",
        "al",
        "am",
        "ap",
        "ba",
        "ce",
        "df",
        "es",
        "go",
        "ma",
        "mg",
        "ms",
        "mt",
        "pa",
        "pb",
        "pe",
        "pi",
        "pr",
        "rj",
        "rn",
        "ro",
        "rr",
        "rs",
        "sc",
        "se",
        "sp",
        "to"
      ],
      "maxLength": 2
    },
    "query_stateAbbr": {
      "name": "state",
      "in": "query",
      "description": "Brazilian State",
      "required": false,
      "type": "string",
      "enum": [
        "ac",
        "al",
        "am",
        "ap",
        "ba",
        "ce",
        "df",
        "es",
        "go",
        "ma",
        "mg",
        "ms",
        "mt",
        "pa",
        "pb",
        "pe",
        "pi",
        "pr",
        "rj",
        "rn",
        "ro",
        "rr",
        "rs",
        "sc",
        "se",
        "sp",
        "to"
      ],
      "maxLength": 2
    }
  },
  "definitions": {
    "AccountCompany": {
      "type": "object",
      "required": [
        "companyId",
        "companyCode"
      ],
      "properties": {
        "companyId": {
          "type": "string",
          "format": "uuid"
        },
        "companyCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        }
      }
    },
    "Company": {
      "type": "object",
      "required": [
        "code",
        "officialName",
        "name",
        "entityType",
        "federalTaxRegime"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60,
          "description": "string is a code maintained by the client application to uniquely identify the company for which this transaction is being recorded. It is unique within the context of an Account. It will be limited to 60 characters when creating a Company"
        },
        "officialName": {
          "type": "string",
          "maxLength": 150,
          "description": "Official Company name (Razão Social)"
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "description": "Company name (DBA - Nome de Fantasia),  Used to identify branches/subsidiaries with same name"
        },
        "entityType": {
          "$ref": "#/definitions/EntityType"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Company has participation of state-owned capital (it will be considerated like a government entity)"
        },
        "federalTaxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "pisSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "cofinsSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "csllSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "receiptsAreFullNoCumulativePisCofins": {
          "type": "boolean",
          "description": "When th company is REAL PROFIT usually it operates under a Non-Cumulative PIS/COFINS regime\nBut exist some services that are always Cumulative regime.\nIf the company has all receipts from Non-Cumulative services this flag will be set to True.\nThis flag informs special conditions to credit of PIS/COFINS when this company is out of Free zone and  purchases from Free Zone Company\nQuando uma empresa fora da Zona Franca adquire uma produto ou serviço de uma empresa situada na Zona Franca de Manaus, o crédito de PIS E COFINS segue estas aliquotas diferenciadas.\nFundamentação, art. 5º da Instrução Normativa SRF nº 546/2005; art. 3º, § 12 da Lei nº 10.637/2002; art. 3º, § 17 da Lei nº 10.833/2003; art. 4º da Lei nº 11.307/2006.\nDESTINATÁRIO ALÍQUOTAS.\nPIS COFINS\na) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure a Contribuição para o PIS/PASEP no regime de não-cumulatividade débito 0,65% 3% crédito 1% 4,6%\nc) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure o imposto de renda com base no lucro real e que tenha sua receita, total ou parcialmente, excluída do regime de incidência não-cumulativa da Contribuição para o PIS/PASEP débito 1,3% 6% crédito 1,65% 7,6%\n"
        },
        "inssWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withholding INSS this Flag can be set to True"
        },
        "issWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withhold ISS this Flag can be set to True"
        },
        "irrfWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, if this flag is FALSE, the system will not withhold IRRF.\nif this flag is TRUE the system will analise other rules to define if will have witholding\n"
        },
        "icmsRateForSimplestaxregime": {
          "type": "number",
          "format": "double",
          "description": "Actual ICMS Rate for this company (if the company is Tax Regime Simplified).\nAliquota de ICMS da companhia caso Optante do Simples\n"
        },
        "isExemptByGrossRevenueForSimplestaxregime": {
          "type": "boolean",
          "description": "ICMS Exempt when Tax Regime is Simplified because total gross revenue is bellow amount defined by state (see PARANÁ State)\nIsenção do ICMS no Simples Nacional para faixa de receita bruta\n"
        },
        "subjectToPayrollTaxRelief": {
          "type": "boolean",
          "description": "Sujeito à desoneração de folha de pagamento."
        },
        "configuration": {
          "type": "object",
          "properties": {
            "certificate": {
              "type": "string",
              "description": "digital certificate A1 model, p12, encoded by base64"
            },
            "certificatepwd": {
              "type": "string",
              "description": "certificate password"
            },
            "certificateexpiration": {
              "type": "string",
              "description": "expiration date of this certificate"
            },
            "logo": {
              "type": "string",
              "description": "company logo image encoded by base64"
            },
            "tpImpNFe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "tpImpNFCe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
              "enum": [
                "0",
                "4",
                "5"
              ]
            }
          }
        },
        "mailServer": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string",
              "description": "User for login on email server"
            },
            "password": {
              "type": "string",
              "description": "Password to login on email server"
            },
            "smtpAddress": {
              "type": "string",
              "description": "smtp address to email server"
            },
            "port": {
              "type": "integer",
              "description": "port"
            },
            "emailFrom": {
              "type": "string",
              "description": "email address to identify the sender e-mail, to send a XML and DANFE"
            },
            "protocol": {
              "type": "string",
              "enum": [
                "ssl",
                "tls"
              ],
              "description": "protocol SSL or TLS"
            },
            "templatemessageToEmail": {
              "type": "string",
              "description": "Message to add to email body"
            }
          }
        },
        "authorizedToDownloadNFe": {
          "description": "Person or company authorized to downloadNFe",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "federalTaxId": {
                "type": "string",
                "pattern": "[0-9]{11,14}",
                "description": "Federal tax id, CNPJ or CPF"
              }
            }
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "params",
            "body",
            "query"
          ]
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "EntityType": {
      "type": "string",
      "enum": [
        "business",
        "individual",
        "federalGovernment",
        "stateGovernment",
        "cityGovernment",
        "foreign"
      ],
      "description": "Entity Type (business, individual, federal government, state government, city government, foreign)"
    },
    "FederalTaxRegime": {
      "type": "string",
      "enum": [
        "realProfit",
        "estimatedProfit",
        "simplified",
        "simplifiedOverGrossthreshold",
        "simplifiedEntrepreneur",
        "notApplicable",
        "individual"
      ],
      "description": "- Federal tax regime\n- realProfit - REAL PROFIT LUCRO REAL\n- estimatedProfit - ESTIMATED PROFIT / LUCRO PRESUMIDO\n- simplified - SIMPLIFIED - OPTANTE TO SIMPLES\n- simplifiedOverGrossthreshold - OPTANTE DO SIMPLES COM LIMITE DE GROSS REVENUE\n- simplifiedEntrepreneur - SIMPLIFIED ENTREPRENEUR / MEI MICRO EMPREENDEDOR INDIVIDUAL \n- notApplicable - Not Applicable 1 \n- individual - INDIVIDUAL / INDIVIDUO\n"
    },
    "Address": {
      "title": "Address",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "zipcode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "description": "Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "[0-9]{7}|0",
              "description": "City Code",
              "default": "0"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "type": "string",
              "description": "State Code",
              "pattern": "^([A-Z]{2,3})$"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$"
            },
            "number": {
              "type": "string",
              "maxLength": 60,
              "description": "House number"
            },
            "complement": {
              "type": "string",
              "maxLength": 60,
              "description": "Any other information about the address (Room, Suite, Floor, etc))."
            },
            "phone": {
              "type": "string",
              "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
              "description": "Phone number"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "zipcode",
            "cityCode",
            "state"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
              "description": "Brazilian Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "^(\\d{7})$",
              "description": "City Code (IBGE)"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "$ref": "#/definitions/StateEnum"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$",
              "default": "BRA"
            }
          }
        },
        {
          "title": "Address",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "zipcode"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "description": "Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "[0-9]{7}|0",
                  "description": "City Code",
                  "default": "0"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "type": "string",
                  "description": "State Code",
                  "pattern": "^([A-Z]{2,3})$"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$"
                },
                "number": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "House number"
                },
                "complement": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Any other information about the address (Room, Suite, Floor, etc))."
                },
                "phone": {
                  "type": "string",
                  "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
                  "description": "Phone number"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "zipcode",
                "cityCode",
                "state"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
                  "description": "Brazilian Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "^(\\d{7})$",
                  "description": "City Code (IBGE)"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "$ref": "#/definitions/StateEnum"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$",
                  "default": "BRA"
                }
              }
            }
          ]
        }
      ]
    },
    "StateEnum": {
      "type": "string",
      "maxLength": 2,
      "enum": [
        "AC",
        "AL",
        "AP",
        "AM",
        "BA",
        "CE",
        "DF",
        "ES",
        "GO",
        "MA",
        "MT",
        "MS",
        "MG",
        "PA",
        "PB",
        "PR",
        "PE",
        "PI",
        "RJ",
        "RN",
        "RS",
        "RO",
        "RR",
        "SC",
        "SP",
        "SE",
        "TO"
      ],
      "description": "State Abreviation:\n- 'AC'\n- 'AL'\n- 'AP'\n- 'AM'\n- 'BA'\n- 'CE'\n- 'DF'\n- 'ES'\n- 'GO'\n- 'MA'\n- 'MT'\n- 'MS'\n- 'MG'\n- 'PA'\n- 'PB'\n- 'PR'\n- 'PE'\n- 'PI'\n- 'RJ'\n- 'RN'\n- 'RS'\n- 'RO'\n- 'RR'\n- 'SC'\n- 'SP'\n- 'SE'\n- 'TO'\n"
    },
    "AgastGoods": {
      "title": "Service Agast Specialization",
      "allOf": [
        {
          "$ref": "#/definitions/Agast"
        },
        {
          "type": "object",
          "properties": {
            "ex": {
              "type": "integer",
              "description": "hsCode Exception for IPI tax"
            },
            "cest": {
              "type": "string",
              "pattern": "[0-9]{7}",
              "description": "tax substitution code - Codigo especificador da Substuicao Tributaria"
            },
            "cean": {
              "type": "string",
              "pattern": "[0-9]{0}|[0-9]{8}|[0-9]{12,14}",
              "description": "GTIN NUMBER"
            },
            "cstIPI": {
              "type": "string",
              "description": "Inform if this process is subject to IPI taxation on output process\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'N'  # NO TAXABLE\n- 'I'  # IMMUNE\n",
              "enum": [
                "T",
                "Z",
                "E",
                "N",
                "I"
              ]
            },
            "ipiLegalTaxClass": {
              "type": "string",
              "description": "Legal tax classificação for IPI (enquadramento tributário)\nWhen the process has CST IPI 52 or 54, it is mandatory to inform a Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU=\n"
            },
            "ipiLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the IPI legal reason, this message will be placed on invoice."
            },
            "specialProductClass": {
              "type": "string",
              "enum": [
                "OTHERS",
                "COMMUNICATION",
                "ENERGY",
                "TRANSPORT",
                "FUEL AND LUBRICANT",
                "VEHICLE",
                "ALCOHOLIC BEVERAGES",
                "WEAPONS",
                "AMMO",
                "PERFUME",
                "TOBACCO"
              ]
            },
            "icmsConf": {
              "type": "array",
              "description": "One per State",
              "items": {
                "$ref": "#/definitions/AgastGoods_IcmsConf"
              }
            }
          }
        },
        {
          "title": "Service Agast Specialization"
        }
      ]
    },
    "AgastService": {
      "title": "Service Agast Specialization",
      "allOf": [
        {
          "$ref": "#/definitions/Agast"
        },
        {
          "type": "object",
          "title": "Service Agast Specialization",
          "properties": {
            "pisCofinsTaxReporting": {
              "type": "string",
              "enum": [
                "cumulative",
                "noCumulative"
              ],
              "description": "when the company is Real Profit inform if this item is cumulative or no cumulative by default"
            },
            "accruableCSLLTaxation": {
              "type": "string",
              "description": "Inform if this item by nature is subject to CSLL taxation or exempt\n- 'T' # TAXABLE\n- 'E' # EXEMPT\n",
              "enum": [
                "T",
                "E"
              ]
            },
            "csllExemptLegalReason": {
              "type": "string",
              "maxLength": 1024
            },
            "csllExemptLegalReasonCode": {
              "type": "string"
            },
            "withholding": {
              "$ref": "#/definitions/AgastService_Withhold"
            },
            "issDueatDestination": {
              "type": "boolean",
              "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
            }
          }
        },
        {
          "title": "Service Agast Specialization"
        }
      ]
    },
    "AgastServiceOperations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgastServiceOperations_Item"
      }
    },
    "AgastServiceOperations_Item": {
      "type": "object",
      "properties": {
        "serviceCode": {
          "type": "string",
          "description": "Service Code in City"
        },
        "cityCode": {
          "type": "integer",
          "format": "int64",
          "description": "City Code (IBGE)"
        },
        "agastCode": {
          "type": "string",
          "description": "AGAST Code"
        },
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "description": {
          "type": "string",
          "description": "Service description"
        },
        "issWhOriginUnregSeller": {
          "type": "boolean"
        },
        "issDueatDestination": {
          "type": "boolean",
          "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
        },
        "subjectPayrollTaxRelief": {
          "type": "boolean",
          "description": "Item subjecto to Payroll Tax Relief\nItem sujeto à desoneraçãode folha de pagamento\n"
        },
        "subjectToINSS": {
          "type": "boolean",
          "description": "Item subjecto to INSS\nItem sujeto à INSS\n"
        },
        "customCompany": {
          "type": "boolean",
          "description": "Custom AGAST"
        }
      }
    },
    "Agast": {
      "type": "object",
      "required": [
        "code",
        "codeType"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Agast Code. AGAST (Avalara Goods and Services Types) are preset products with default tax definitions available to be used as provided or copied to create an specific comapany item."
        },
        "description": {
          "type": "string",
          "maxLength": 200,
          "description": "Agast Description"
        },
        "lifeTimeStart": {
          "type": "string",
          "description": "date when this configuration values starts"
        },
        "lifeTimeEnd": {
          "type": "string",
          "description": "date when this configuration values expire"
        },
        "inactive": {
          "type": "boolean",
          "description": "set this configuration to Inactive"
        },
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "codeType": {
          "type": "string",
          "enum": [
            "NCM",
            "NBS",
            "LC116",
            "SERVICE UNREGULATED"
          ]
        },
        "accruablePISTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to PIS taxation or exempt\n- 'T' # TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'N' # NO TAXABLE\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N"
          ]
        },
        "pisExemptLegalReasonCode": {
          "type": "string",
          "description": "When exempt, taxable with zero rate, suspended, not taxable, this field informs the official code number for the exemption"
        },
        "pisExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specified a reason, this field holds the reason's description"
        },
        "accruableCOFINSTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to COFINS taxation or exempt\n- 'T' # TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'N' # NO TAXABLE\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N"
          ]
        },
        "cofinsExemptLegalReasonCode": {
          "type": "string",
          "description": "When exempt, taxable with zero rate, suspended, not taxable, this field informs the official code number for the exemption"
        },
        "cofinsExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specified a reason, this field holds the reason's description"
        },
        "pisCofinsCreditNotAllowed": {
          "type": "boolean",
          "description": "on Real Profit Purchase transaction, inform if this item allows tax credits when it is non-cumulative"
        },
        "federalTaxRate": {
          "type": "array",
          "description": "This is an array of tax object related to an agast.",
          "items": {
            "$ref": "#/definitions/TaxTypeRate"
          }
        },
        "notes": {
          "type": "string",
          "description": "Free-form text for optionally adding any comment on this."
        },
        "taxAdviserCode": {
          "type": "string",
          "description": "This adds a purely informational information about the source of TaxAdviser imported data."
        }
      }
    },
    "AgastGoods_IcmsConf": {
      "type": "object",
      "description": "See definitions IcmsConfByState",
      "properties": {
        "code": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        }
      }
    },
    "TaxTypeRate": {
      "type": "object",
      "required": [
        "taxType",
        "taxModel"
      ],
      "properties": {
        "taxType": {
          "$ref": "#/definitions/TaxType"
        },
        "taxModel": {
          "type": "string",
          "enum": [
            "rate",
            "srf"
          ],
          "description": "Tax can be calculated by rate or by quantity"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "Specific tax rate ex 3.5 (3.5%)"
        },
        "srvAmount": {
          "type": "number",
          "format": "double",
          "description": "Specific tax rate ex 3.5 (3.5%)"
        },
        "quantityUnidBase": {
          "type": "string",
          "maxLength": 6
        },
        "specializationType": {
          "type": "string",
          "enum": [
            "basic",
            "monophase",
            "taxSubstitution"
          ]
        }
      }
    },
    "TaxType": {
      "type": "string",
      "description": "Tax Rate\nObs: AR - \"a recolher\" (serviço).\nRP e PP - filtrado para alvos de lucro real ou lucro presumido (serviço)\n",
      "enum": [
        "INSS",
        "INSS_RF",
        "INSS_AR",
        "IRRF",
        "IRRF_GOVERNMENT",
        "PIS",
        "PIS_RF",
        "PIS_RP",
        "PIS_PP",
        "COFINS",
        "COFINS_RF",
        "COFINS_RP",
        "COFINS_PP",
        "CSLL",
        "CSLL_RF",
        "CSLL_PP",
        "CSLL_RP",
        "IRPJ",
        "ISS",
        "ISS_RF",
        "IPI"
      ]
    },
    "LegalReason": {
      "type": "object",
      "required": [
        "name",
        "description",
        "scope"
      ],
      "description": "Legal Reason (Fundamentação Legal):\n- 'name'\n- 'description'\n- 'scope'\n",
      "properties": {
        "id": {
          "type": "string",
          "description": "Internal ID"
        },
        "referenceCode": {
          "type": "string",
          "description": "A custom, non-unique, non-mandatory reference code that might be used to reference\na company Reason record to a global Reason record.\n"
        },
        "companyId": {
          "type": "string",
          "description": "If present, this record is scoped to the company."
        },
        "scope": {
          "type": "string",
          "description": "Message scope. May be one of these.\ngeneral - This message is not linked to any entity (agast/process/cfop) and will be applied to any item in a transacition. (Esta mensagem tem escopo geral, nao está relacionadas diretamente qualquer objeto.);\nlinkedTo - This message is linked to an entity, and its processing will only occur when the context involves it. (Esta mensagens estão relacionadas diretamente a algum objeto como um AGAST por exemplo, um Processo ou uma CFOP.);\n",
          "enum": [
            "general",
            "linkedTo"
          ]
        },
        "disable": {
          "type": "boolean",
          "description": "Set this message as no longer valid"
        },
        "description": {
          "type": "string",
          "maxLength": 5000,
          "description": "Legal reason textual description;"
        },
        "name": {
          "type": "string",
          "description": "Short name to this message"
        },
        "showInInvoice": {
          "type": "string",
          "description": "Optional. Show this message when used in Invoice (NFe, NFCe, others...). Where to show this.",
          "enum": [
            "complementaryInfoMessage",
            "fiscalInfoMessage",
            "itemInfoMessage",
            "no show"
          ]
        },
        "referencedProcesses": {
          "description": "Referenced Process",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "properties": {
              "nProc": {
                "type": "string",
                "maxLength": 60,
                "description": "Process Identifier (NFe <nProc> tag)"
              },
              "indProc": {
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "9"
                ],
                "description": "Process Origin (NFe <indProc> tag)\n- '0' # SEFAZ;\n- '1' # Justiça Federal;\n- '2' # Justiça Estadual;\n- '3' # Secex/RFB;\n- '9' # Outros\n"
              }
            }
          }
        },
        "taxConstraint": {
          "description": "Filter this message application to specified tax cases.\n",
          "properties": {
            "taxType": {
              "type": "string",
              "enum": [
                "NONE",
                "INSS",
                "IRRF",
                "IRPJ",
                "PIS",
                "COFINS",
                "CSLL",
                "IPI",
                "ICMS",
                "II",
                "IOF",
                "ISS",
                "APROXTOTALTAX"
              ],
              "description": "This is the Tax Type to apply legal messages.\n- 'NONE'\n- 'INSS'\n- 'IRRF'\n- 'IRPJ'\n- 'PIS'\n- 'COFINS'\n- 'CSLL'\n- 'IPI'\n- 'ICMS'\n- 'II'\n- 'IOF'\n- 'ISS'\n- 'APROXTOTALTAX'\n"
            },
            "specializedTaxType": {
              "type": "string",
              "enum": [
                "icms",
                "icmsSt",
                "icmsStSd",
                "icmsPartOwn",
                "icmsPartDest",
                "icmsDifaFCP",
                "icmsDifaDest",
                "icmsDifaRemet",
                "icmsRf",
                "icmsDeson",
                "icmsCredsn",
                "pis",
                "pisSt",
                "cofins",
                "cofinsSt",
                "ipi",
                "ipiReturned",
                "ii",
                "iof"
              ],
              "description": "These are the specific tax types to which a message may be applied\n- 'icms'\n- 'icmsSt'\n- 'icmsStSd'\n- 'icmsPartOwn'\n- 'icmsPartDest'\n- 'icmsDifaFCP'\n- 'icmsDifaDest'\n- 'icmsDifaRemet'\n- 'icmsRf'\n- 'icmsDeson'\n- 'icmsCredsn'\n- 'pis'\n- 'pisSt'\n- 'cofins'\n- 'cofinsSt'\n- 'ipi'\n- 'ipiReturned'\n- 'ii'\n- 'iof'\n"
            },
            "jurisdictionType": {
              "type": "string",
              "enum": [
                "NONE",
                "City",
                "State",
                "Country"
              ],
              "description": "Types of jurisdiction\n- 'NONE'\n- 'City'\n- 'State'\n- 'Country'\n"
            },
            "jurisdictionCode": {
              "type": "string",
              "description": "Code to identify the Jurisdiction"
            },
            "precondition": {
              "type": "string",
              "description": "script rule that will evaluated to decide if this message is applicable.\nif doesn't have rule is samething that return true value.\n"
            }
          }
        }
      }
    },
    "AgastService_Withhold": {
      "description": "inform if this item is subject to withholding tax on service Transactions, default true",
      "type": "object",
      "properties": {
        "IRRF": {
          "$ref": "#/definitions/AgastService_WithholdIRRF"
        },
        "INSSSubjectPayrollTaxRelief": {
          "type": "boolean",
          "description": "Item subjecto to Payroll Tax Relief\nItem sujeto à desoneraçãode folha de pagamento\n"
        },
        "INSS": {
          "type": "boolean"
        },
        "INSSLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "INSSForSimples": {
          "type": "boolean"
        },
        "INSSForSimplesLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "PIS": {
          "description": "inform if this item is subject to withholding PIS on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        },
        "COFINS": {
          "description": "inform if this item is subject to withholding COFINS on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        },
        "CSLL": {
          "description": "inform if this item is subject to withholding CSLL on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        }
      }
    },
    "AgastService_WithholdPCC": {
      "type": "object",
      "properties": {
        "business": {
          "type": "boolean"
        },
        "businessLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "federalGovernment": {
          "type": "boolean"
        },
        "federalGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "stateGovernment": {
          "type": "boolean"
        },
        "stateGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "cityGovernment": {
          "type": "boolean"
        },
        "cityGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        }
      }
    },
    "AgastService_WithholdIRRF": {
      "type": "object",
      "properties": {
        "business": {
          "type": "boolean"
        },
        "businessLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "government": {
          "type": "boolean"
        },
        "governmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        }
      }
    },
    "CfopConf": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxConf"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 60
            },
            "class": {
              "type": "string",
              "maxLength": 60,
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "description": {
              "type": "string",
              "maxLength": 512
            },
            "wayType": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ],
              "description": "inform if the transaction is an operation to internalizing item or value"
            },
            "codInState": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are within the same state."
            },
            "codOtherState": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are to another state."
            },
            "codOtherCountry": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are to another country."
            },
            "productType": {
              "type": "string",
              "enum": [
                "FOR PRODUCT",
                "FOR MERCHANDISE",
                "NO RESTRICTION"
              ],
              "description": "this field is used to define right CFOP, one operation type can be specialized to item product, item merchandise or generic"
            },
            "operationToTaxPayerOtherState": {
              "type": "boolean",
              "description": "field used to indicate an operation to ICMS tax payer"
            },
            "operationWithST": {
              "type": "boolean",
              "description": "field used to indicate an operation to items sibject to ICMS-ST"
            },
            "operationToFreeZone": {
              "type": "boolean",
              "description": "field used to indicate an operation to free zone"
            },
            "specificForProductClass": {
              "type": "string",
              "enum": [
                "OTHERS",
                "COMMUNICATION",
                "ENERGY",
                "TRANSPORT",
                "FUEL AND LUBRICANT",
                "VEHICLE",
                "ALCOHOLIC BEVERAGES",
                "WEAPONS",
                "AMMO",
                "PERFUME",
                "TOBACCO"
              ],
              "description": "field used to indicate an operation to some product class specifically"
            }
          }
        }
      ]
    },
    "IssConfByCity": {
      "type": "object",
      "required": [
        "cityCode"
      ],
      "properties": {
        "cityCode": {
          "description": "City Code (IBGE)",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        }
      }
    },
    "IssConfService": {
      "type": "object",
      "required": [
        "cityCode",
        "serviceCode"
      ],
      "properties": {
        "companyId": {
          "type": "string",
          "description": "Company code for custom AGAST, standard AGAST does't use this code."
        },
        "inheritedFrom": {
          "type": "string",
          "description": "Reference to agastServiceCode, do keep traceability."
        },
        "cityCode": {
          "description": "City Code (IBGE)",
          "type": "integer",
          "format": "int64"
        },
        "serviceCode": {
          "description": "Service Code in City",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "serviceAgasts": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "relationship to ServiceAgast, where we have the federal confguration"
          }
        },
        "issTaxation": {
          "description": "- 'T' # TAXABLE - TRIBUTÁVEL INCLUSIVE PARA EXPORTAÇÃO'\n- 'E' # TAXABLE WITH EXEMPTION FOR EXPORTS - ISENTO PARA SERVIÇOS PRESTADOS AO EXTERIOR (DEFAULT)\n- 'F' # EXEMPT\n- 'A' # SUSPENDED FOR ADMINISTRATIVE REASON\n- 'L' # SUSPENDED FOR LEGAL DECISION\n- 'I' # IMMUNE\n",
          "type": "string",
          "enum": [
            "T",
            "E",
            "F",
            "A",
            "L",
            "I"
          ]
        },
        "issWhDestOtherCities": {
          "type": "boolean"
        },
        "issWhDestSameCity": {
          "type": "boolean"
        },
        "issWhOriginUnregSeller": {
          "type": "boolean"
        },
        "taxRate": {
          "$ref": "#/definitions/IssConfService_TaxRate"
        }
      }
    },
    "IcmsConfByState": {
      "type": "object",
      "required": [
        "code",
        "state"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60,
          "description": "Identify the IcmsConfState in namespace"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "name for this configuration"
        },
        "startDate": {
          "type": "string",
          "description": "date when this configuration values starts"
        },
        "expirationDate": {
          "type": "string",
          "description": "date when this configuration values expire"
        },
        "subjectToST": {
          "type": "boolean",
          "description": "inform that the item linked to this configuration is subject to ICMS ST on this state"
        },
        "inactive": {
          "type": "boolean",
          "description": "set this configuration to Inactive"
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "On sales process inform the CST hat the item linked to this configuration is subject to for the own ICMS\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "calcMode": {
          "type": "string",
          "enum": [
            "BYMVARATE",
            "SRP",
            "MMSRP",
            "OPERATIONAMOUNT"
          ],
          "description": "how this ICMS will be calculed for itens linked to this configuration"
        },
        "discountRateForMonoPhase": {
          "type": "number",
          "format": "double",
          "description": "discount if the item is subject to monophase PIS/COFINS for transactions inside state"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "icmsBaseDiscount": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "msrp": {
          "type": "number",
          "format": "double",
          "description": "SRP or MMSRP amount base for this icms configuration"
        },
        "mvaRate": {
          "type": "number",
          "format": "double",
          "description": "ICMS mva rate to define calc base"
        },
        "msrpUnit": {
          "type": "string",
          "maxLength": 6,
          "description": "unit used to SRP amount value"
        },
        "icmsLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "Code for the ICM legal reason, this message will be placed on invoice."
        },
        "fcpRate": {
          "type": "number",
          "format": "double",
          "description": "Fundo de Combate à pobreza / Fund Against Poverty"
        },
        "icmsSTConf": {
          "type": "object",
          "properties": {
            "icmsStLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the ICM-ST legal reason, this message will be placed on invoice."
            },
            "hasReductionOfMVAForSimples": {
              "type": "boolean",
              "description": "inform that substituted is tax regime Simplified the operation MVA will be reduced"
            },
            "reductionOfMVAForSimples": {
              "type": "number",
              "format": "double",
              "description": "mva reduction when substituted is tax regime Simplified."
            },
            "reductionOfMVAForSimplesLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for MVA Reduction legal reason, this message will be placed on invoice, when destionation entity is Simplified."
            },
            "calcMode": {
              "type": "string",
              "enum": [
                "BYMVARATE",
                "SRP",
                "MSRP"
              ],
              "description": "how this ICMS-ST will be calculed for itens linked to this configuration"
            },
            "mvaRate": {
              "type": "number",
              "format": "double",
              "description": "ICMS-ST mva rate to define calc base"
            },
            "icmsStBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS rate - Redução da BC ICMS ST (%)"
            },
            "srp": {
              "type": "number",
              "format": "double",
              "description": "SRP or MSRP amount base for this ICMS-ST configuration"
            },
            "srpUnit": {
              "type": "string",
              "maxLength": 6,
              "description": "unit used to srv amount value"
            }
          }
        },
        "icmsInterStateConf": {
          "type": "array",
          "description": "the map key is state code",
          "items": {
            "$ref": "#/definitions/IcmsConfInterState"
          }
        }
      }
    },
    "IbptConf": {
      "type": "object",
      "properties": {
        "code": {
          "description": "IBPT Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpbtConfItem"
          }
        }
      }
    },
    "CsvIbptList": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "ProcessScenario": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxConf"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 60,
              "description": "Process name to Identify this configuration"
            },
            "description": {
              "type": "string",
              "description": "description detail about process"
            },
            "class": {
              "type": "string",
              "maxLength": 60,
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "type": {
              "type": "string",
              "enum": [
                "SALES",
                "PURCHASE",
                "SALES_RETURN",
                "PURCHASE_RETURN",
                "TRANSFER_RETURN",
                "SHIPPING",
                "SHIPPING_RETURN",
                "TRANSFER",
                "RECEIPT_AJUSTE",
                "TRANSFER_AJUSTE"
              ]
            },
            "wayType": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ],
              "description": "inform if the transaction is an operation to internalizing (receive) item or value"
            },
            "goal": {
              "type": "string",
              "enum": [
                "Normal",
                "Complementary",
                "Voided",
                "Replacement",
                "Return",
                "Adjustment"
              ],
              "description": "- 'Normal' # Normal\n- 'Complementary' # Complemento de Valores\n- 'Voided' # Anulação\n- 'Replacement' # Substituto\n- 'Return' # Devolução ou retorno\n- 'Adjustment' # Ajuste\n"
            },
            "overWriteCFOP": {
              "type": "boolean",
              "description": "inform that the configuration process overwrites the cfop configuration."
            },
            "eDocCreatorReference": {
              "type": "boolean",
              "description": "Identify  the reference place to calc.\nIdentificar o local de referencia de cálculo.\n"
            },
            "cfops": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CfopConf"
              }
            }
          }
        }
      ]
    },
    "TaxConf": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 40,
          "description": "main unique identificator"
        },
        "class": {
          "type": "string",
          "maxLength": 60,
          "description": "Natureza da Operação\nOperation Class\n"
        },
        "stockImpact": {
          "type": "boolean",
          "description": "Inform that the process has inventory impact."
        },
        "financialImpact": {
          "type": "boolean",
          "description": "Inform that the process has financial impact."
        },
        "cstIPI": {
          "type": "string",
          "description": "Inform if this process is subject to IPI taxation on output process\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE    \n- 'I'  # IMMUNE\n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n- 'R'  # RETURN OF IPI\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "I",
            "O",
            "OZ",
            "R"
          ]
        },
        "ipiLegalTaxClass": {
          "type": "string",
          "description": "Legal tax classificação for IPI (enquadramento)\nWhen the processo has CST IPI 52 or 54, is mandatory inform Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU=\n"
        },
        "lookupIPIFromReferredTransaction": {
          "type": "boolean",
          "description": "Busca IPI para adicionar na base de calculo de ICMS do item de uma nota referenciada, Exemplo, processo de venda para entrega futura e simples remessa de uma venda de entrega futura.\nLookup IPI tax to add to ICMS Tax base from same item of Referred Transaction\n"
        },
        "accruablePISTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to PIS taxation or exempt\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE\n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "O",
            "OZ"
          ]
        },
        "pisExemptLegalReasonCode": {
          "type": "string",
          "description": "Reference to a tax reason record ID."
        },
        "pisExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specifi reason, this field has the description"
        },
        "accruableCOFINSTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to COFINS taxation or exempt\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE    \n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "O",
            "OZ"
          ]
        },
        "cofinsExemptLegalReasonCode": {
          "type": "string",
          "maxLength": 3,
          "description": "When exempt, taxable with zero, suspended, not taxable, this field holds the official code number"
        },
        "cofinsExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specifi reason, this field has the description"
        },
        "allowIPIcreditWhenInGoing": {
          "type": "boolean",
          "description": "Inform that the process allow IPI credit to Input process"
        },
        "icmsConf": {
          "type": "array",
          "description": "the map key is state code",
          "items": {
            "$ref": "#/definitions/IcmsTaxConf"
          }
        }
      }
    },
    "IcmsTaxConf": {
      "allOf": [
        {
          "$ref": "#/definitions/IcmsTaxConfBase"
        },
        {
          "type": "object",
          "properties": {
            "sameforAllDestination": {
              "type": "boolean",
              "description": "when this attribute is true, the relationShip dont need be analysed"
            },
            "relationShip": {
              "type": "array",
              "description": "the mapping key is state code / A chave do mapeamento é o código do Estado.",
              "items": {
                "$ref": "#/definitions/IcmsTaxConfBase"
              }
            }
          }
        }
      ]
    },
    "IcmsTaxConfBase": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "icmsCSOSN": {
          "type": "string",
          "description": "when the company is tax regime Simples uses CSOSN and for the same type of transaction, CST and CSOSN cant match",
          "enum": [
            "T",
            "E",
            "N",
            "O",
            "OZ"
          ]
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "On sales process inform the CST hat the item linked to this configuration is subject to\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "deferralrate": {
          "type": "number",
          "format": "double",
          "description": "Percentual deferral rate, applied over ICMS tax when CST is D DEFEREMENT"
        },
        "messageCode": {
          "type": "string",
          "maxLength": 60,
          "description": "Message to add to NF when this configuration is used"
        }
      }
    },
    "IssConfService_TaxRate": {
      "type": "object",
      "properties": {
        "ISS": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        },
        "ISS_RF": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        },
        "ISS_CPOM": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        }
      }
    },
    "IssConfService_TaxRateItem": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "string"
        },
        "rateType": {
          "type": "string"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "isExempt": {
          "type": "boolean"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "zone1": {
          "type": "integer",
          "format": "int32"
        },
        "zone2": {
          "type": "integer",
          "format": "int32"
        },
        "period": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            }
          }
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "IcmsConfInterState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "icmsCSTInterstate": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "The CST inform if the interstate operation is taxable or not taxable and  when not taxable inform type\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "The CST inform f this item is taxable or not taxable no target state and when not taxable inform type\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "calcMode": {
          "type": "string",
          "enum": [
            "BYMVARATE",
            "SRP",
            "MMSRP",
            "OPERATIONAMOUNT"
          ],
          "description": "how this ICMS will be calculed for itens linked to this configuration"
        },
        "discountRateForMonoPhase": {
          "type": "number",
          "format": "double",
          "description": "discount if the item is subject to monophase PIS/COFINS when operation interstate"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "fcpRate": {
          "type": "number",
          "format": "double",
          "description": "FCP rate (Fundo de Combate à Probreza / Fund Against Poverty"
        },
        "icmsBaseDiscount": {
          "type": "number",
          "format": "double",
          "description": "ICMS discount rate"
        },
        "icmsBaseDiscountInterState": {
          "type": "number",
          "format": "double",
          "description": "ICMS interstate discount rate"
        },
        "icmsBaseDiscountInterStateForImported": {
          "type": "number",
          "format": "double",
          "description": "ICMS interstate discount rate"
        },
        "msrp": {
          "type": "number",
          "format": "double",
          "description": "SRP or MMSRP amount base for this icms configuration"
        },
        "mvaRate": {
          "type": "number",
          "format": "double",
          "description": "ICMS MVA rate to define calc base"
        },
        "msrpUnit": {
          "type": "string",
          "maxLength": 6,
          "description": "unit used to SRP amount value"
        },
        "icmsLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "Code for the ICM legal reason, this message will be placed on invoice."
        },
        "icmsSTConf": {
          "type": "object",
          "properties": {
            "protocolType": {
              "type": "string",
              "enum": [
                "COVENANT",
                "PROTOCOL",
                "NOTHING"
              ]
            },
            "icmsStLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the ICM-ST legal reason, this message will be placed on invoice."
            },
            "hasReductionOfMVAForSimples": {
              "type": "boolean",
              "description": "inform that substituted is tax regime Simplified the operation MVA will be reduced"
            },
            "reductionOfMVAForSimples": {
              "type": "number",
              "format": "double",
              "description": "MVA reduction when substituted is tax regime Simplified."
            },
            "reductionOfMVAForSimplesLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for MVA Reduction legal reason, this message will be placed on invoice, when destionation entity is Simplified."
            },
            "calcMode": {
              "type": "string",
              "enum": [
                "BYMVARATE",
                "SRP",
                "MSRP"
              ],
              "description": "how this ICMS-ST will be calculed for itens linked to this configuration"
            },
            "icmsStBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS rate - Redução da BC ICMS ST (%)"
            },
            "mvaRate": {
              "type": "number",
              "format": "double",
              "description": "ICMS-ST MVA rate to define calc base"
            },
            "srp": {
              "type": "number",
              "format": "double",
              "description": "SRP or MSRP amount base for this ICMS-ST configuration"
            },
            "srpUnit": {
              "type": "string",
              "maxLength": 6,
              "description": "unit used to SRP amount value"
            }
          }
        }
      }
    },
    "IpbtConfItem": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "federalTax": {
          "type": "number",
          "format": "double"
        },
        "importTax": {
          "type": "number",
          "format": "double"
        },
        "stateTax": {
          "type": "number",
          "format": "double"
        },
        "cityTax": {
          "type": "number",
          "format": "double"
        },
        "source": {
          "type": "string"
        }
      }
    }
  },
  "x-swagger-namespace": "BR",
  "x-swagger-erouter-validation-rules": {
    "/agasts/*": {
      "in": "header",
      "field": "Avalara-Product-Type",
      "rules": {
        "goods": "/agasts/*?goods",
        "_default": "/agasts/*?service"
      }
    }
  }
}