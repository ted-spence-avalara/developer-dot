{
  "swagger": "2.0",
  "info": {
    "title": "AvaTax Brazil",
    "description": "The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.",
    "version": "1.0"
  },
  "host": "avataxbr-sandbox.avalarabrasil.com.br",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/v2",
  "paths": {
    "/auth": {
      "post": {
        "operationId": "getAuthorization2",
        "summary": "authorization",
        "description": "Generates the auth JSON web token, which use is required in every other methods of this API.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Accepts \"Basic + hash\", where hash is {user}:{password} base64 encoded.\n",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "expired": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/accounts/companies": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompaniesList",
        "summary": "Retrieve Companies by account",
        "description": "Retrieve list companies of one account",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "List of Companies by Account",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountCompany"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createAccountCompany",
        "summary": "Create company and your data configuration",
        "description": "This method operation create a company for a account\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Company Code",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "tags": [
          "Account"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/accounts/companies/{companyId}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_companyId"
        }
      ],
      "delete": {
        "operationId": "deleteAccountCompany",
        "description": "Delete relation Account x company",
        "tags": [
          "Company"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "Delete relation Account x company",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/addresses/{zipcode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getZipCode",
        "description": "This operation return address",
        "parameters": [
          {
            "$ref": "#/parameters/path_zipCode"
          }
        ],
        "tags": [
          "Address"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return address",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/agasts?service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastListService",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Text query",
            "type": "string"
          },
          {
            "name": "hscode",
            "in": "query",
            "description": "Fiscal Classification query.",
            "type": "string"
          },
          {
            "name": "wh.PIS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) PIS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.COFINS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) COFINS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.CSLL",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) CSLL.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.IRRF",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) IRRF.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.INSS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) INSS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "title": "List of AGASTS",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Item description"
                  },
                  "id": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "code": {
                    "type": "string",
                    "description": "Custom item code"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return agast configurations that match with p ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createAgastService",
        "summary": "Create agast",
        "description": "This method operation create a AGAST\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastService"
            }
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/agasts/{code}?service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_agastCode"
        }
      ],
      "get": {
        "operationId": "getAgastService",
        "summary": "Get agast",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastService"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateAgastService",
        "summary": "Update agast",
        "description": "This method operation create a agast\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastService"
            }
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAgastService",
        "summary": "Delete Agast",
        "description": "Delete Agast",
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/agasts?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastListGoods",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Text query",
            "type": "string",
            "maxLength": 40
          },
          {
            "name": "hscode",
            "in": "query",
            "description": "Fiscal Classification query.",
            "type": "string"
          },
          {
            "name": "cest",
            "in": "query",
            "description": "Filter CEST (text query).",
            "type": "string"
          },
          {
            "name": "cestexact",
            "in": "query",
            "description": "Filter CEST (exact).",
            "type": "string"
          },
          {
            "name": "initialvalidity",
            "in": "query",
            "description": "Initial validity as ISO Date.",
            "type": "string"
          },
          {
            "name": "finalvalidity",
            "in": "query",
            "description": "Final validity as ISO Date.",
            "type": "string"
          }
        ],
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "title": "List of AGASTS",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Item description"
                  },
                  "id": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "code": {
                    "type": "string",
                    "description": "Custom item code"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return agast configurations that match with p ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createAgastGoods",
        "summary": "Create agast",
        "description": "This method operation create a AGAST\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastGoods"
            }
          }
        ],
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/agasts/{code}?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_agastCode"
        }
      ],
      "get": {
        "operationId": "getAgastGoods",
        "summary": "Get agast",
        "description": "This operation return agast configurations that match with parameters queries\n",
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastGoods"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateAgastGoods",
        "summary": "Update agast",
        "description": "This method operation create a agast\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgastGoods"
            }
          }
        ],
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAgastGoods",
        "summary": "Delete Agast",
        "description": "Delete Agast",
        "tags": [
          "AGAST Goods"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/agasts-service/equivalent": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastServiceEquivalent",
        "summary": "Find Equivalent AGAST",
        "description": "This operation returns List of IssConfService from City To that have same Service Agast of serviceCodeFrom if cityFrom and serviceCodeFrom.\nIf not Mapped return List with zero elements.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "City IBGE Code - From",
            "required": true,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "City IBGE Code - To",
            "required": true,
            "type": "string"
          },
          {
            "name": "service",
            "in": "query",
            "description": "Service Code in City From",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastServiceOperations"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/agasts-service/lc116": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getAgastServiceLC116",
        "summary": "Find AGAST by LC116",
        "description": "This operation returns List of IssConfService from city to that have Service Agast with LC116 informed code.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "description": "City IBGE Code",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "LC116 Code",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgastServiceOperations"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "simulateGoods",
        "summary": "Simulate Method",
        "description": "This operation uses minimum set of attributes for calculate the taxes. This operation do not store the messages.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionSimulationForGoodsIn"
            }
          }
        ],
        "tags": [
          "Goods Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "createCalculationGood",
        "summary": "Calculation Method",
        "description": "This method has more the one operation model,\n(a) simple calculation, this mode has a minimal validation and mandatory field, only enough for calc;\n(b) full calculation, simulation, this mode the system will check all atributes and calc all taxes for that transaction;\n(c) full calculation, starting process to transform this this request into transaction (for NFe, NFCe, CT-e need government authorization);\n(d) ASIS, the sistem receive the message, store and try get authorization, model valid only form NFe, NFCe and CT-e.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsIn"
            }
          }
        ],
        "tags": [
          "Goods Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store/transaction?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "createATaxTransactionGood",
        "summary": "Calculation Method",
        "description": "This method has more the one operation model,\n(a) simple calculation, this mode has a minimal validation and mandatory field, only enough for calc;\n(b) full calculation, simulation, this mode the system will check all atributes and calc all taxes for that transaction;\n(c) full calculation, starting process to transform this this request into transaction (for NFe, NFCe, CT-e need government authorization);\n(d) ASIS, the sistem receive the message, store and try get authorization, model valid only form NFe, NFCe and CT-e.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsIn"
            }
          }
        ],
        "tags": [
          "Goods Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations?service-sales": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "simulateServiceSales",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned. Accept all transactions type (Sale, Purchase, Payment and Receipt), the format and message type are desbribed above in each 'calculations-<type>'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/SalesTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations?service-purchase": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "simulateServicePurchase",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations?service-payment": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "simulateServicePayment",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations?service-receipt": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "simulateServiceReceipt",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store?service-sales": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "calculationServiceSales",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned. Accept all transactions type (Sale, Purchase, Payment and Receipt), the format and message type are desbribed above in each 'calculations-<type>'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/SalesTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store?service-purchase": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "calculationServicePurchase",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store?service-payment": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "calculationServicePayment",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store?service-receipt": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "calculationServiceReceipt",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store/transaction?service-sales": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "createATaxTransactionServiceSales",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned. Accept all transactions type (Sale, Purchase, Payment and Receipt), the format and message type are desbribed above in each 'calculations-<type>'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/SalesTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store/transaction?service-purchase": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "createATaxTransactionServicePurchase",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store/transaction?service-payment": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "createATaxTransactionServicePayment",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/store/transaction?service-receipt": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "createATaxTransactionServiceReceipt",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "retrieveGoodsTransactions",
        "summary": "Retrieve goods transactions",
        "description": "Retrieve a list of transactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/query_transactionType_goods"
          },
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          }
        ],
        "tags": [
          "Goods Calculations"
        ],
        "responses": {
          "200": {
            "description": "Calculations list.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransactionForGoodsIn"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/goods/{documentCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "get": {
        "operationId": "retrieveGoodsTransactionDocument",
        "summary": "Retrieve goods transactions",
        "description": "Retrieve a single transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goods Calculations"
        ],
        "responses": {
          "200": {
            "description": "Calculations item",
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsIn"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "removeGoodsTransactionDocument",
        "summary": "Remove goods transactions",
        "description": "Remove a single transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goods Calculations"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/goods/{documentCode}/transactions": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "put": {
        "operationId": "convertGoodsCalculationToTransaction",
        "summary": "Promote a calculation to transaction",
        "description": "Promote a calculation to transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goods Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "retrieveServiceCalculationTransactions",
        "summary": "Retrieve service transactions",
        "description": "Retrieve a list of transactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/query_transactionType_service"
          },
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          }
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "List of transaction"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/service/{documentCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "get": {
        "operationId": "retrieveServiceTransactionDocument",
        "summary": "Retrieve service transactions",
        "description": "Retrieve a single transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "List of transaction"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "removeServiceTransactionDocument",
        "summary": "Remove service transactions",
        "description": "Remove a single transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/calculations/service/{documentCode}/transactions": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "put": {
        "operationId": "convertServiceCalculationToTransaction",
        "summary": "Promote a calculation to transaction",
        "description": "Promote a calculation to transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Services Calculations"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "infoCompany",
        "summary": "Get company information and your data configuration",
        "description": "This method operation get a company for a account\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Company"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "put": {
        "operationId": "updateCompany",
        "summary": "Update company information and your data configuration",
        "description": "This method operation create a company for a account\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "tags": [
          "Company"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompany",
        "description": "Delete Company",
        "tags": [
          "Company"
        ],
        "summary": "Delete Company",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/locations": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompanyLocationsList",
        "description": "This operation return all locations\n",
        "tags": [
          "Company Location"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Locations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return all locations\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createLocation",
        "summary": "Create new location for company",
        "description": "This method operation create a new location for company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "tags": [
          "Company Location"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/locations/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_locationCode"
        }
      ],
      "get": {
        "operationId": "getCompanyLocation",
        "description": "This operation return location\n",
        "tags": [
          "Company Location"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return location\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateLocation",
        "summary": "Update location for company",
        "description": "This method operation update a location for company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "tags": [
          "Company Location"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteLocation",
        "description": "Delete location",
        "tags": [
          "Company Location"
        ],
        "summary": "Delete location",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/agasts?service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompanyAgastListService",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          },
          {
            "$ref": "#/parameters/query_agastCode"
          },
          {
            "$ref": "#/parameters/query_agastParent"
          },
          {
            "$ref": "#/parameters/query_textQuery"
          },
          {
            "name": "wh.PIS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) CSLL.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "hscode",
            "in": "query",
            "description": "Fiscal Classification query.",
            "type": "string"
          },
          {
            "name": "wh.COFINS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) COFINS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.CSLL",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) CSLL.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.IRRF",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) IRRF.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          {
            "name": "wh.INSS",
            "in": "query",
            "description": "Filters Agasts which withhold (or not) INSS.",
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          }
        ],
        "tags": [
          "Company AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "title": "List of AGASTS",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Item description"
                  },
                  "id": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "code": {
                    "type": "string",
                    "description": "Company item code"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createCompanyAgastService",
        "summary": "Create custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAgastService"
            }
          }
        ],
        "tags": [
          "Company AGAST Service"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/agasts/{code}?Service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_agastCode"
        }
      ],
      "get": {
        "operationId": "getCompanyAgastService",
        "description": "This operation return custom agast configurations that match with parameters queries - Alannes.\n",
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "Agast parent code, means that this agast is a specialization of parent agast\n",
            "type": "string",
            "maxLength": 60
          }
        ],
        "tags": [
          "Company AGAST Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CompanyAgastService"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateCompanyAgastService",
        "summary": "Update custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAgastService"
            }
          }
        ],
        "tags": [
          "Company AGAST Service"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompanyAgastService",
        "description": "Delete Company Agast",
        "tags": [
          "Company AGAST Service"
        ],
        "summary": "Delete Company Agast",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/agasts?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "name": "text",
          "in": "query",
          "description": "Text query",
          "type": "string",
          "maxLength": 40
        }
      ],
      "get": {
        "operationId": "getCompanyAgastListGoods",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          },
          {
            "$ref": "#/parameters/query_agastCode"
          },
          {
            "$ref": "#/parameters/query_agastParent"
          },
          {
            "name": "hscode",
            "in": "query",
            "description": "Fiscal Classification query.",
            "type": "string"
          },
          {
            "name": "text",
            "in": "query",
            "description": "Text query",
            "type": "string",
            "maxLength": 40
          },
          {
            "name": "cest",
            "in": "query",
            "description": "Filter CEST (text query).",
            "type": "string"
          },
          {
            "name": "cestexact",
            "in": "query",
            "description": "Filter CEST (exact).",
            "type": "string"
          },
          {
            "name": "initialvalidity",
            "in": "query",
            "description": "Initial validity as ISO Date.",
            "type": "string"
          },
          {
            "name": "finalvalidity",
            "in": "query",
            "description": "Final validity as ISO Date.",
            "type": "string"
          }
        ],
        "tags": [
          "Company AGAST Goods"
        ],
        "responses": {
          "200": {
            "description": "Sucessful response",
            "schema": {
              "title": "List of AGASTS",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Item description"
                  },
                  "id": {
                    "type": "string",
                    "description": "uuid"
                  },
                  "code": {
                    "type": "string",
                    "description": "Company item code"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createCompanyAgastGoods",
        "summary": "Create custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAgastGoods"
            }
          }
        ],
        "tags": [
          "Company AGAST Goods"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/agasts/{code}?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_agastCode"
        }
      ],
      "get": {
        "operationId": "getCompanyAgastGoods",
        "description": "This operation return custom agast configurations that match with parameters queries - Alannes.\n",
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "Agast parent code, means that this agast is a specialization of parent agast\n",
            "type": "string",
            "maxLength": 60
          }
        ],
        "tags": [
          "Company AGAST Goods"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CompanyAgastGoods"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateCompanyAgastGoods",
        "summary": "Update custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAgastGoods"
            }
          }
        ],
        "tags": [
          "Company AGAST Goods"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompanyAgastGoods",
        "description": "Delete Company Agast",
        "tags": [
          "Company AGAST Goods"
        ],
        "summary": "Delete Company Agast",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/taxrates": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompanyTaxRatesList",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "tags": [
          "Company Tax Rates"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Company Tax Type Rates",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyTaxTypeRate"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createCompanyTaxes",
        "summary": "Create custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyTaxTypeRate"
            }
          }
        ],
        "tags": [
          "Company Tax Rates"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/taxrates/{taxType}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_taxType"
        }
      ],
      "get": {
        "operationId": "getCompanyCompanyTax",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "tags": [
          "Company Tax Rates"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CompanyTaxTypeRate"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateCompanyTaxes",
        "summary": "Update custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyTaxTypeRate"
            }
          }
        ],
        "tags": [
          "Company Tax Rates"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompanyTaxes",
        "description": "Delete Company Tax",
        "tags": [
          "Company Tax Rates"
        ],
        "summary": "Delete Company Tax",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/items?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/header_AvaTypeGoods"
        }
      ],
      "get": {
        "operationId": "getCompanyItemsGoodsList",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          },
          {
            "$ref": "#/parameters/query_itemCode"
          },
          {
            "$ref": "#/parameters/query_agastCode"
          },
          {
            "$ref": "#/parameters/query_textQuery"
          }
        ],
        "tags": [
          "Company Item (Goods)"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Company Item",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemGoods"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createItem",
        "summary": "Create custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemGoods"
            }
          }
        ],
        "tags": [
          "Company Item (Goods)"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/items/{code}/change-code": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_itemCode"
        },
        {
          "name": "goods",
          "in": "query",
          "description": "Provide to apply to goods items.",
          "type": "string"
        },
        {
          "name": "service",
          "in": "query",
          "description": "Provide to apply to service items.",
          "type": "string"
        }
      ],
      "put": {
        "operationId": "companyItemsChangeCode",
        "description": "Change the code of a given item.\n",
        "tags": [
          "Company Item (Goods)",
          "Company Item (Service)"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Requisition",
            "required": true,
            "schema": {
              "required": [
                "newCode"
              ],
              "properties": {
                "newCode": {
                  "description": "Destination code.",
                  "type": "string",
                  "maxLength": 60
                }
              }
            }
          }
        ],
        "summary": "Change the code of a given item.\n",
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/items/{code}?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_itemCode"
        },
        {
          "$ref": "#/parameters/header_AvaTypeGoods"
        }
      ],
      "get": {
        "operationId": "getCompanyItemsGoods",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "$ref": "#/parameters/query_agastCode"
          }
        ],
        "tags": [
          "Company Item (Goods)"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ItemGoods"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateItem",
        "summary": "Update custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemGoods"
            }
          }
        ],
        "tags": [
          "Company Item (Goods)"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteItem",
        "description": "Delete Item",
        "tags": [
          "Company Item (Goods)"
        ],
        "summary": "Delete Item",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/items?service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/header_AvaTypeService"
        }
      ],
      "get": {
        "operationId": "getCompanyItemsServiceList",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          },
          {
            "$ref": "#/parameters/query_itemCode"
          },
          {
            "$ref": "#/parameters/query_agastCode"
          },
          {
            "$ref": "#/parameters/query_textQuery"
          }
        ],
        "tags": [
          "Company Item (Service)"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Company Item",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemService"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createItemService",
        "summary": "Create custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemService"
            }
          }
        ],
        "tags": [
          "Company Item (Service)"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/items/{code}?service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_itemCode"
        },
        {
          "$ref": "#/parameters/header_AvaTypeService"
        }
      ],
      "get": {
        "operationId": "getCompanyItemsService",
        "description": "This operation return custom agast configurations that match with parameters queries\n",
        "parameters": [
          {
            "$ref": "#/parameters/query_agastCode"
          }
        ],
        "tags": [
          "Company Item (Service)"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ItemService"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom agast configurations that match ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateItemService",
        "summary": "Update custom agast for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemService"
            }
          }
        ],
        "tags": [
          "Company Item (Service)"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemService",
        "description": "Delete Item - Service",
        "tags": [
          "Company Item (Service)"
        ],
        "summary": "Delete Item - Service",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/icms": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompanyICMSList",
        "description": "This operation return custom ICMS configurations that match with parameters queries\n",
        "tags": [
          "Company ICMS"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Company Item",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyIcmsConfByState"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom ICMS configurations that match  ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createICMS",
        "summary": "Create custom ICMS tax for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyIcmsConfByState"
            }
          }
        ],
        "tags": [
          "Company ICMS"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/icms/{state}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_stateAbbr"
        }
      ],
      "get": {
        "operationId": "getCompanyICMS",
        "description": "This operation return custom ICMS configurations that match with parameters queries\n",
        "tags": [
          "Company ICMS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CompanyIcmsConfByState"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom ICMS configurations that match  ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateCompanyIcmsConfByState",
        "summary": "Update custom agast for one company",
        "description": "This method operation update a custom ICMS tax for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyIcmsConfByState"
            }
          }
        ],
        "tags": [
          "Company ICMS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompanyIcmsConfByState",
        "description": "Delete ICMS Config",
        "tags": [
          "Company ICMS"
        ],
        "summary": "Delete ICMS Config",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/process": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "name": "text",
          "in": "query",
          "description": "Text query",
          "type": "string",
          "maxLength": 40
        }
      ],
      "get": {
        "operationId": "getCompanyProcessList",
        "description": "This operation return custom process configurations that match with parameters queries\n",
        "tags": [
          "Company Process"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listSort"
          },
          {
            "$ref": "#/parameters/query_textQuery"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Company Process",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyProcessScenario"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom process configurations that mat ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createCompanyProcessScenario",
        "summary": "Create custom process tax for one company",
        "description": "This method operation create a custom agast for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyProcessScenario"
            }
          }
        ],
        "tags": [
          "Company Process"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/entities": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getCompanyEntities",
        "description": "Returns List of Vendors and Customers for this Company.",
        "tags": [
          "Company Entity"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/EntityEntryList"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "Returns List of Vendors and Customers for this Company.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "createCompanyEntity",
        "description": "Update Entity (Vendor or Customer)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyEntity"
            }
          }
        ],
        "tags": [
          "Company Entity"
        ],
        "summary": "Update Entity (Vendor or Customer)",
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/entities/{federalTaxId}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_federalTaxId"
        }
      ],
      "get": {
        "operationId": "getCompanyEntity",
        "description": "Entity Info (Vendor or Customer)",
        "tags": [
          "Company Entity"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CompanyEntity"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "Entity Info (Vendor or Customer)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateCompanyEntity",
        "description": "Update Entity (Vendor or Customer)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyEntity"
            }
          }
        ],
        "tags": [
          "Company Entity"
        ],
        "summary": "Update Entity (Vendor or Customer)",
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompanyEntity",
        "description": "Delete Entity  (Vendor or Customer)",
        "tags": [
          "Company Entity"
        ],
        "summary": "Delete Entity  (Vendor or Customer)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/process/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_processCode"
        }
      ],
      "get": {
        "operationId": "getCompanyProcess",
        "description": "This operation return custom process configurations that match with parameters queries\n",
        "tags": [
          "Company Process"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CompanyProcessScenario"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "This operation return custom process configurations that mat ...",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "operationId": "updateCompanyProcessScenario",
        "summary": "Update custom agast for one company",
        "description": "This method operation update a custom process for one company\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyProcessScenario"
            }
          }
        ],
        "tags": [
          "Company Process"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompanyProcessScenario",
        "description": "Delete Company Process",
        "tags": [
          "Company Process"
        ],
        "summary": "Delete Company Process",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/companies/certificate": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "postCompanyServiceCertificate",
        "description": "If it still not exists, uploads a new Certificate file for this company.\nSend the file as a base64 string.\n",
        "tags": [
          "Company Files"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Content",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "companyId": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "If it still not exists, uploads a new Certificate file for t ..."
      },
      "put": {
        "operationId": "updateCompanyServiceCertificate",
        "description": "Updates an existing certificate file for this company.\nSend the file as a base64 string.\n",
        "tags": [
          "Company Files"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Content",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "companyId": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "summary": "Updates an existing certificate file for this company.\nSend  ..."
      },
      "get": {
        "operationId": "getCompanyServiceCertificate",
        "description": "Gets an existing certificate file for this company.\n",
        "tags": [
          "Company Files"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "peek",
            "type": "number",
            "in": "query",
            "description": "Use this parameter to check the existence of the file without downloading it."
          }
        ],
        "summary": "Gets an existing certificate file for this company.\n",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful responseget"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompanyServiceCertificate",
        "description": "Deletes a company file store.\n",
        "tags": [
          "Company Files"
        ],
        "summary": "Deletes a company file store.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/sefaz": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "sendInvoice",
        "summary": "Send an e-Invoice",
        "description": "Send a invoice to SEFAZ\n",
        "consumes": [
          "application/json",
          "application/xml",
          "text/xml"
        ],
        "produces": [
          "application/json",
          "application/xml",
          "text/xml"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionForSefazGoods"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sefaz Out",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "disableRange",
        "summary": "Disable Range e-Invoice",
        "description": "Send disable range of NFes to SEFAZ\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Disable Range e-Invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SefazDisablementIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return Sefaz",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn_Status"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/sefaz/{key}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_invoiceKey"
        }
      ],
      "get": {
        "operationId": "retrieveInvoice",
        "summary": "Retrieve invoice",
        "description": "Retrieve the invoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "responses": {
          "200": {
            "description": "Invoice Data",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "put": {
        "operationId": "fixLetter",
        "summary": "Fix Letter",
        "description": "Fix Letter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Fix Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SefazItPutIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fix Letter Status",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn_PDF"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "cancelInvoice",
        "summary": "Cancel invoice",
        "description": "Cancel the invoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cancel Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SefazItDeleteIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice Status",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn_Status"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/sefaz/{key}/manifest": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_invoiceKey"
        }
      ],
      "post": {
        "operationId": "manifestInvoice",
        "summary": "Manifest invoice",
        "description": "Manifest the invoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Manifest Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SefazItManifestIn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice Status",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn_Status"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/sefaz/{key}/pdf": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_invoiceKey"
        }
      ],
      "get": {
        "operationId": "retrieveSefazPDF",
        "summary": "Retrieve DANFe",
        "description": "Retrieve DANFe",
        "produces": [
          "application/pdf"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "responses": {
          "200": {
            "description": "DANFe",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ]
      }
    },
    "/invoices/sefaz/status": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "retrieveStatus",
        "summary": "Retrieve Status of SEFAZ Server",
        "description": "Retrieve Status of SEFAZ Server",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice SEFAZ"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "sendInvoiceService",
        "summary": "Send an e-Invoice Service",
        "description": "Send a invoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice Service"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Invoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionForNfse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NFSe Return",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/service/{serie}/{number}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_rpsSerie"
        },
        {
          "$ref": "#/parameters/path_rpsNumber"
        }
      ],
      "get": {
        "operationId": "retrieveInvoiceService",
        "summary": "Retrieve e-Invoice Service",
        "description": "Retrieve the invoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice Service"
        ],
        "responses": {
          "200": {
            "description": "NFSe Return",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "cancelInvoiceService",
        "summary": "Cancel e-Invoice Service",
        "description": "Cancel the invoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice Service"
        ],
        "responses": {
          "200": {
            "description": "NFSe Return",
            "schema": {
              "$ref": "#/definitions/eInvoiceReturn"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/service/{serie}/{number}/pdf": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_rpsSerie"
        },
        {
          "$ref": "#/parameters/path_rpsNumber"
        }
      ],
      "get": {
        "operationId": "retrieveInvoicePDF",
        "summary": "Retrieve PDF",
        "description": "Retrieve PDF",
        "produces": [
          "application/pdf"
        ],
        "tags": [
          "Invoice Service"
        ],
        "responses": {
          "200": {
            "description": "NFSe PDF",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ]
      }
    },
    "/invoices/contingency/{state}": {
      "parameters": [
        {
          "$ref": "#/parameters/path_stateAbbr"
        }
      ],
      "get": {
        "operationId": "invoiceVerifyContingency",
        "summary": "Invoice Verify Contingency per State",
        "description": "Check if State was in Contingency",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice Contingency"
        ],
        "responses": {
          "200": {
            "description": "Contingency Out",
            "schema": {
              "type": "object",
              "properties": {
                "contingency": {
                  "type": "boolean"
                },
                "startDate": {
                  "type": "string"
                },
                "finishDate": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "put": {
        "operationId": "invoiceSetContingency",
        "summary": "Invoice Set Contingency per State",
        "description": "Set State in Contingency",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice Contingency"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Set Contingency",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "startDate": {
                  "type": "string"
                },
                "finishDate": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "invoiceDropContingency",
        "summary": "Invoice Drop Contingency per State",
        "description": "Drop State in Contingency",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice Contingency"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/invoices/settings": {
      "get": {
        "operationId": "invoiceSettings",
        "summary": "Invoice Settigns",
        "description": "Get Enviroment Settigns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Invoice Settings"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "type": "object",
              "properties": {
                "environment": {
                  "description": "- '1' # Ambiente de Produção\n- '2' # Ambiente de Homologação                \n",
                  "type": "string",
                  "enum": [
                    "1",
                    "2"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/iss": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrive list of ISS",
        "operationId": "getIssList",
        "description": "This operation return ISS configurations that match with parameters queries.\n",
        "parameters": [
          {
            "name": "cityCode",
            "in": "query",
            "description": "Optionally filter by city IBGE code.\n",
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Optionally filter by state (two letters).\n",
            "type": "string"
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of ISS",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssConfByCity"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new ISS Configuration",
        "operationId": "createIssConfByCity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfByCity",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfByCity"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/iss-list": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "list ISS information",
        "description": "list ISS information",
        "operationId": "listIssService",
        "parameters": [
          {
            "name": "cityCode",
            "type": "string",
            "in": "query",
            "description": "Filter by city code"
          },
          {
            "name": "isCustom",
            "type": "string",
            "in": "query",
            "description": "Show only custom agasts"
          },
          {
            "name": "agast",
            "type": "string",
            "in": "query",
            "description": "Filter by agast"
          },
          {
            "name": "serviceCode",
            "type": "string",
            "in": "query",
            "description": "Filter by service code"
          },
          {
            "$ref": "#/parameters/header_listPage"
          },
          {
            "$ref": "#/parameters/header_listLimit"
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "ISS Code List",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IssConfService"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/iss/{cityCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_cityCode"
        }
      ],
      "get": {
        "summary": "get ISS information by City Code.",
        "operationId": "getIssConfByCity",
        "description": "This operation return configurations of ISS that match with parameters queries\n",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "City Configurations",
              "$ref": "#/definitions/IssConfByCity"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a ISS Service Code in City.",
        "operationId": "createIssConfByCityServiceId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfService",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfService"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "put": {
        "summary": "update a ISS by City Code.",
        "operationId": "updateIssConfByCity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfByCity",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfByCity"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a ISS by City Code.",
        "operationId": "deleteIssConf",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/iss/{cityCode}/{serviceCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_cityCode"
        },
        {
          "$ref": "#/parameters/path_serviceCode"
        }
      ],
      "get": {
        "summary": "get ISS information by Service Code in City.",
        "operationId": "getIssConfByCityServiceId",
        "parameters": [
          {
            "name": "isCustom",
            "type": "string",
            "in": "query",
            "description": "Look up for a company-scoped custom config."
          }
        ],
        "description": "This operation return configurations of ISS that match with parameters queries\n",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Service Configurations",
              "$ref": "#/definitions/IssConfService"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a ISS by Service Code in City.",
        "operationId": "updateIssConfByCityServiceId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IssConfService",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IssConfService"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a ISS by Service Code in City.",
        "operationId": "deleteIssConfServiceId",
        "tags": [
          "Tax Conf ISS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/icms/{state}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_stateAbbr"
        }
      ],
      "get": {
        "summary": "retrive list of ICMS.",
        "operationId": "getIcmsList",
        "description": "This operation return ICMS configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "suffixcode",
            "in": "query",
            "description": "Identify this ICMS",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "date",
            "in": "query",
            "description": "When informed return valid version configuration for this date",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "return the inactive versions too",
            "type": "boolean"
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of ICMS",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IcmsConfByState"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new ICMS Configuration",
        "operationId": "createIcmsconfstate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IcmsConfState",
            "in": "body",
            "description": "IcmsConfState",
            "schema": {
              "$ref": "#/definitions/IcmsConfByState"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/icms/{state}/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_stateAbbr"
        },
        {
          "$ref": "#/parameters/path_icmsCode"
        }
      ],
      "get": {
        "summary": "get ICMS information by State.",
        "operationId": "getIcmsConfByState",
        "description": "This operation return configurations of icms that match with parameters queries\n",
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IcmsConfByState"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a IcmsConf State,",
        "operationId": "updateIcmsconfstate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IcmsConfState",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/IcmsConfByState"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a ICMS by State.",
        "operationId": "deleteIcmsConf",
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/icms-search/": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrieve list of ICMS.",
        "operationId": "getIcmsListSearch",
        "description": "This operation return ICMS configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "Search for codes",
            "type": "string",
            "maxLength": 60,
            "required": true
          },
          {
            "name": "state",
            "in": "query",
            "description": "Filter for states",
            "type": "string",
            "maxLength": 2,
            "required": false
          }
        ],
        "tags": [
          "Tax Conf ICMS"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "ICMS configurations list",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IcmsConfByState"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/cfop": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrive list of CFOP.",
        "operationId": "getCfopList",
        "description": "This operation return CFOP configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "suffixcode",
            "in": "query",
            "description": "Identify this CFOP, the CFOP Code has two parts N.XXX where N the prefix is the operation scope type if IN or OUT and if is in state, other state, other country and suffix XXX is the operation type\n",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "date",
            "in": "query",
            "description": "When informed return valid version configuration for this date\n",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "return the inactive versions too\n",
            "type": "boolean"
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CfopConf"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new CFOP configuration",
        "operationId": "createCfop",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/CfopConf"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/cfop/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "get CFOP information.",
        "operationId": "getCfop",
        "description": "This operation return CFOP configuration\n",
        "parameters": [
          {
            "$ref": "#/parameters/path_cfopCode"
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CfopConf"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a CFOP configuration",
        "operationId": "updateCfop",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/path_cfopCode"
          },
          {
            "name": "taxconfcfop",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/CfopConf"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a CFOP.",
        "operationId": "deleteCfop",
        "parameters": [
          {
            "$ref": "#/parameters/path_cfopCode"
          }
        ],
        "tags": [
          "Tax Conf CFOP"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/process": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "retrieve list of Processes.",
        "operationId": "getProcessList",
        "description": "This operation return Process Type configurations that match with parameters queries\n",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "filter the configuration by accountID, if not informed, only the standard configuration will be returned\n",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "date",
            "in": "query",
            "description": "When informed return valid version configuration for this date\n",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "return the inactive versions too\n",
            "type": "boolean"
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Array of Configurations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessScenario"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "create a new Process Type configuration",
        "operationId": "createProcess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taxconfprocess",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/taxconf/process/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "get Process information.",
        "operationId": "getProcess",
        "description": "This operation return Process Type configuration\n",
        "parameters": [
          {
            "$ref": "#/parameters/path_processCode"
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "update a Process Type configuration",
        "operationId": "updateProcess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/path_processCode"
          },
          {
            "name": "taxconfprocess",
            "in": "body",
            "description": "The pet JSON you want to post",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a Process.",
        "operationId": "deleteProcess",
        "parameters": [
          {
            "$ref": "#/parameters/path_processCode"
          }
        ],
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/default-process": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "Lists all of the engine's default processes.",
        "description": "Lists all of the engine's default processes.",
        "operationId": "listDefaultProcess",
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "Default processes list.",
              "type": "array",
              "items": {
                "description": "Default process.",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "class": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/default-process/{code}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "name": "code",
          "in": "path",
          "type": "string",
          "description": "Process code.",
          "required": true
        }
      ],
      "get": {
        "summary": "Gets details of a Default Process.",
        "description": "Gets details of a Default Process.",
        "operationId": "getDefaultProcess",
        "tags": [
          "Tax Conf Process"
        ],
        "responses": {
          "200": {
            "description": "The Process.",
            "schema": {
              "$ref": "#/definitions/ProcessScenario"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/ibpt/{state}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_stateAbbr"
        }
      ],
      "post": {
        "summary": "create a new Process Type configuration",
        "operationId": "createIbptFromCSV",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "csvIBPT",
            "in": "body",
            "description": "CSV file",
            "schema": {
              "$ref": "#/definitions/CsvIbptList"
            },
            "required": true
          }
        ],
        "tags": [
          "Tax Conf IBPT"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "summary": "disable a IBPT.",
        "operationId": "deleteIbptFromState",
        "tags": [
          "Tax Conf IBPT"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/legal-reason": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "List Legal Reasons.",
        "operationId": "listReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/header_listLimit"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Filters by company domain entries.\nProvide \"global\" to retrive only \"global\" entries.\nCompanyId searches also match global entries.\n",
            "type": "string",
            "maxLength": 60
          },
          {
            "name": "text",
            "in": "query",
            "type": "string",
            "description": "Performs text search.\n"
          },
          {
            "name": "referenceCode",
            "in": "query",
            "type": "string",
            "description": "Filters by reference code."
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "X-Pagination-Current-Page": {
                "description": "The current page. Defaults to 1.",
                "type": "number"
              },
              "X-Pagination-Limit": {
                "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
                "type": "number"
              },
              "X-Pagination-Total-Pages": {
                "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
                "type": "number"
              },
              "X-Pagination-Total-Count": {
                "description": "The total number of records across all pages.",
                "type": "number"
              }
            },
            "schema": {
              "title": "List.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/LegalReason"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "Update Legal Reason.",
        "operationId": "updateReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalReason"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "Create Legal Reason.",
        "operationId": "createReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LegalReason"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/taxconf/legal-reason/{uuid}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "summary": "Get single Legal Reason.",
        "operationId": "getReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LegalReason"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "Delete a Legal Reason entry.",
        "operationId": "deleteReason",
        "tags": [
          "Legal Reason"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/transactions?goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "transactionGoodsPurchase",
        "summary": "Transaction Method",
        "description": "This method has more then one operation model,\n(a) AS IS, the system only stores the transaction;\n(b) Full Calculation, the system calculates taxes, validates fileds, stores with transaction state, but doesn't try get government authorization;\n(c) Full Sync, the system calculates taxes, validates fileds, gets government authorization, stores with transaction state when authorized, used for NFCe.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsIn"
            }
          }
        ],
        "tags": [
          "Goods Transactions"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/TransactionForGoodsOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions?service-sales": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "transactionServicesSales",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalesTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Transactions"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/SalesTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions?service-purchase": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "transactionServiceSales",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Transactions"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PurchaseTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions?service-payment": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "transactionServicePayment",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Transactions"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/PaymentTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions?service-receipt": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "transactionServiceReceipt",
        "summary": "Calculation Method",
        "description": "Refer to the business rules below, for an outline view of Tax Determination Process as a whole, showing a beginning-to-end process making use of the specific UseCases and discriminating all required attributes and data to be returned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionIn"
            }
          }
        ],
        "tags": [
          "Services Transactions"
        ],
        "responses": {
          "200": {
            "description": "Transaction Out",
            "schema": {
              "$ref": "#/definitions/ReceiptTransactionOut"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions/service": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "retrieveServiceTransactions",
        "summary": "Retrieve service transactions",
        "description": "Retrieve a list of transactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/query_transactionType_service"
          }
        ],
        "tags": [
          "Services Transactions"
        ],
        "responses": {
          "200": {
            "description": "List of transaction"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions/service/{documentCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "get": {
        "operationId": "singleServiceTransaction",
        "summary": "Retrieve service transactions",
        "description": "Retrieve a single transaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Services Transactions"
        ],
        "responses": {
          "200": {
            "description": "List of transaction"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions/service/{documentCode}/void": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "put": {
        "operationId": "serviceTransactionVoid",
        "summary": "Void Transaction",
        "description": "Void Transaction\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Services Transactions"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions/goods": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "retrieveGoodsTransactions",
        "summary": "Retrieve goods transactions",
        "description": "Retrieve a list of transactions.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/query_transactionType_goods"
          }
        ],
        "tags": [
          "Goods Transactions"
        ],
        "responses": {
          "200": {
            "description": "List of transaction"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions/goods/{documentCode}": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "get": {
        "operationId": "singleGoodsTransaction",
        "summary": "Retrieve goods transactions",
        "description": "Retrieve a specific transaction.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goods Transactions"
        ],
        "responses": {
          "200": {
            "description": "List of transaction"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/transactions/goods/{documentCode}/void": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        },
        {
          "$ref": "#/parameters/path_documentCode"
        }
      ],
      "put": {
        "operationId": "goodsTransactionVoid",
        "summary": "Void Transaction",
        "description": "Request to cancel a Invoice and if authorized, cancel a transaction.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goods Transactions"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    },
    "/compliance/apuracao-ajuste": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveApuracaoAjuste",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ApuracaoAjuste'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoAjuste"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteApuracaoAjuste",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ApuracaoAjuste'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoAjuste"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/apuracao-ajuste-documentacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveApuracaoAjusteDocumentacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ApuracaoAjusteDocumentacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoAjusteDocumentacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteApuracaoAjusteDocumentacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ApuracaoAjusteDocumentacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoAjusteDocumentacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/apuracao-ajuste-processo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveApuracaoAjusteProcesso",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ApuracaoAjusteProcesso'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoAjusteProcesso"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteApuracaoAjusteProcesso",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ApuracaoAjusteProcesso'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoAjusteProcesso"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/apuracao-contribuicao-previdenciaria": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveApuracaoContribuicaoPrevidenciaria",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ApuracaoContribuicaoPrevidenciaria'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoContribuicaoPrevidenciaria"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteApuracaoContribuicaoPrevidenciaria",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ApuracaoContribuicaoPrevidenciaria'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoContribuicaoPrevidenciaria"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/apuracao-imposto": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveApuracaoImposto",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ApuracaoImposto'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoImposto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteApuracaoImposto",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ApuracaoImposto'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoImposto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/apuracao-imposto-ipi": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveApuracaoImpostoIPI",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ApuracaoImpostoIPI'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoImpostoIPI"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteApuracaoImpostoIPI",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ApuracaoImpostoIPI'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoImpostoIPI"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/apuracao-informacao-adicional": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveApuracaoInformacaoAdicional",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ApuracaoInformacaoAdicional'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoInformacaoAdicional"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteApuracaoInformacaoAdicional",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ApuracaoInformacaoAdicional'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApuracaoInformacaoAdicional"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/arrecadacao-referenciado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveArrecadacaoReferenciado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ArrecadacaoReferenciado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArrecadacaoReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteArrecadacaoReferenciado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ArrecadacaoReferenciado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArrecadacaoReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/base-calculo-incentivos-fiscais": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveBaseCalculoIncentivosFiscais",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'BaseCalculoIncentivosFiscais'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseCalculoIncentivosFiscais"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteBaseCalculoIncentivosFiscais",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'BaseCalculoIncentivosFiscais'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseCalculoIncentivosFiscais"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/calculo-isencao-reducao-imposto-sobre-lucro-real-irpj": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCalculoIsencaoReducaoImpostoSobreLucroRealIRPJ",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CalculoIsencaoReducaoImpostoSobreLucroRealIRPJ'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalculoIsencaoReducaoImpostoSobreLucroRealIRPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCalculoIsencaoReducaoImpostoSobreLucroRealIRPJ",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CalculoIsencaoReducaoImpostoSobreLucroRealIRPJ'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalculoIsencaoReducaoImpostoSobreLucroRealIRPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/calculo-isencao-reducao-lucro-presumido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCalculoIsencaoReducaoLucroPresumido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CalculoIsencaoReducaoLucroPresumido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalculoIsencaoReducaoLucroPresumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCalculoIsencaoReducaoLucroPresumido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CalculoIsencaoReducaoLucroPresumido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CalculoIsencaoReducaoLucroPresumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/comercio-eletronico": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveComercioEletronico",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ComercioEletronico'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComercioEletronico"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteComercioEletronico",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ComercioEletronico'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComercioEletronico"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/declaracao-pais-pais": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDeclaracaoPaisPais",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DeclaracaoPaisPais'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPais"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDeclaracaoPaisPais",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DeclaracaoPaisPais'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPais"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/declaracao-pais-pais-declaracao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDeclaracaoPaisPaisDeclaracao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DeclaracaoPaisPaisDeclaracao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPaisDeclaracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDeclaracaoPaisPaisDeclaracao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DeclaracaoPaisPaisDeclaracao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPaisDeclaracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/declaracao-pais-pais-observacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDeclaracaoPaisPaisObservacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DeclaracaoPaisPaisObservacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPaisObservacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDeclaracaoPaisPaisObservacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DeclaracaoPaisPaisObservacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPaisObservacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/demonstracao-lucro-exploracao-irpj": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDemonstracaoLucroExploracaoIRPJ",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DemonstracaoLucroExploracaoIRPJ'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DemonstracaoLucroExploracaoIRPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDemonstracaoLucroExploracaoIRPJ",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DemonstracaoLucroExploracaoIRPJ'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DemonstracaoLucroExploracaoIRPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/demonstracao-receitas-incentivadas": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDemonstracaoReceitasIncentivadas",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DemonstracaoReceitasIncentivadas'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DemonstracaoReceitasIncentivadas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDemonstracaoReceitasIncentivadas",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DemonstracaoReceitasIncentivadas'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DemonstracaoReceitasIncentivadas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/detalhe-exportacao-comercial-exportadora": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDetalheExportacaoComercialExportadora",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DetalheExportacaoComercialExportadora'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetalheExportacaoComercialExportadora"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDetalheExportacaoComercialExportadora",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DetalheExportacaoComercialExportadora'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetalheExportacaoComercialExportadora"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ativos-exterior": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveAtivosExterior",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'AtivosExterior'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtivosExterior"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAtivosExterior",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'AtivosExterior'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtivosExterior"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/demonstrativo-livro-caixa": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDemonstrativoLivroCaixa",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DemonstrativoLivroCaixa'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DemonstrativoLivroCaixa"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDemonstrativoLivroCaixa",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DemonstrativoLivroCaixa'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DemonstrativoLivroCaixa"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/dados-sucessoras": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDadosSucessoras",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DadosSucessoras'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DadosSucessoras"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDadosSucessoras",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DadosSucessoras'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DadosSucessoras"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/folha-salarios-pis": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveFolhaSalariosPIS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'FolhaSalariosPIS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FolhaSalariosPIS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteFolhaSalariosPIS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'FolhaSalariosPIS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FolhaSalariosPIS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/info-periodos-anteriores": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInfoPeriodosAnteriores",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InfoPeriodosAnteriores'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InfoPeriodosAnteriores"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInfoPeriodosAnteriores",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InfoPeriodosAnteriores'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InfoPeriodosAnteriores"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/fundo-clube-investimento": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveFundoClubeInvestimento",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'FundoClubeInvestimento'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FundoClubeInvestimento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteFundoClubeInvestimento",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'FundoClubeInvestimento'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FundoClubeInvestimento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/inf-opt-paesimunes-isentas": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInfOptPAESImunesIsentas",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InfOptPAESImunesIsentas'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InfOptPAESImunesIsentas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInfOptPAESImunesIsentas",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InfOptPAESImunesIsentas'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InfOptPAESImunesIsentas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/inf-opt-refisimunes-isentas": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInfOptREFISImunesIsentas",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InfOptREFISImunesIsentas'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InfOptREFISImunesIsentas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInfOptREFISImunesIsentas",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InfOptREFISImunesIsentas'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InfOptREFISImunesIsentas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/pagamento-recebimento-exterior": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "savePagamentoRecebimentoExterior",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'PagamentoRecebimentoExterior'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagamentoRecebimentoExterior"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deletePagamentoRecebimentoExterior",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'PagamentoRecebimentoExterior'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagamentoRecebimentoExterior"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/doacoes-eleitorais": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDoacoesEleitorais",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DoacoesEleitorais'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoacoesEleitorais"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDoacoesEleitorais",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DoacoesEleitorais'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoacoesEleitorais"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/declaracao-pais-pais-entidade": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDeclaracaoPaisPaisEntidade",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DeclaracaoPaisPaisEntidade'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPaisEntidade"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDeclaracaoPaisPaisEntidade",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DeclaracaoPaisPaisEntidade'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclaracaoPaisPaisEntidade"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/rendimentos-dirigentes-conselheiros": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveRendimentosDirigentesConselheiros",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'RendimentosDirigentesConselheiros'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RendimentosDirigentesConselheiros"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteRendimentosDirigentesConselheiros",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'RendimentosDirigentesConselheiros'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RendimentosDirigentesConselheiros"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/vendas-comercial-exportadora-fee": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveVendasComercialExportadoraFEE",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'VendasComercialExportadoraFEE'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendasComercialExportadoraFEE"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteVendasComercialExportadoraFEE",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'VendasComercialExportadoraFEE'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendasComercialExportadoraFEE"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/optantes-refis": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOptantesREFIS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OptantesREFIS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OptantesREFIS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOptantesREFIS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OptantesREFIS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OptantesREFIS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/optantes-refisoptantes": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOptantesREFISOptantes",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OptantesREFISOptantes'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OptantesREFISOptantes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOptantesREFISOptantes",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OptantesREFISOptantes'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OptantesREFISOptantes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/participacoes-consorcios-empresas-participantes": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveParticipacoesConsorciosEmpresasParticipantes",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ParticipacoesConsorciosEmpresasParticipantes'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipacoesConsorciosEmpresasParticipantes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteParticipacoesConsorciosEmpresasParticipantes",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ParticipacoesConsorciosEmpresasParticipantes'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipacoesConsorciosEmpresasParticipantes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/participacoes-consorcios-empresas": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveParticipacoesConsorciosEmpresas",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ParticipacoesConsorciosEmpresas'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipacoesConsorciosEmpresas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteParticipacoesConsorciosEmpresas",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ParticipacoesConsorciosEmpresas'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipacoesConsorciosEmpresas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/outras-informacoes-ecf": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOutrasInformacoesECF",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OutrasInformacoesECF'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasInformacoesECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOutrasInformacoesECF",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OutrasInformacoesECF'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasInformacoesECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/outras-informacoes-lucro-presumido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOutrasInformacoesLucroPresumido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OutrasInformacoesLucroPresumido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasInformacoesLucroPresumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOutrasInformacoesLucroPresumido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OutrasInformacoesLucroPresumido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasInformacoesLucroPresumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/outras-informacoes-lucro-real": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOutrasInformacoesLucroReal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OutrasInformacoesLucroReal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasInformacoesLucroReal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOutrasInformacoesLucroReal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OutrasInformacoesLucroReal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasInformacoesLucroReal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/outros-lancamentos-info-economicas": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOutrosLancamentosInfoEconomicas",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OutrosLancamentosInfoEconomicas'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrosLancamentosInfoEconomicas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOutrosLancamentosInfoEconomicas",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OutrosLancamentosInfoEconomicas'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrosLancamentosInfoEconomicas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/atividade-incentivada-pj": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveAtividadeIncentivadaPJ",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'AtividadeIncentivadaPJ'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtividadeIncentivadaPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAtividadeIncentivadaPJ",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'AtividadeIncentivadaPJ'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtividadeIncentivadaPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ativo-imobilizado-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveAtivoImobilizadoPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'AtivoImobilizadoPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtivoImobilizadoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAtivoImobilizadoPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'AtivoImobilizadoPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtivoImobilizadoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ativo-imobilizado-piscofinsprocesso-referenciado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveAtivoImobilizadoPISCOFINSProcessoReferenciado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'AtivoImobilizadoPISCOFINSProcessoReferenciado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtivoImobilizadoPISCOFINSProcessoReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteAtivoImobilizadoPISCOFINSProcessoReferenciado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'AtivoImobilizadoPISCOFINSProcessoReferenciado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AtivoImobilizadoPISCOFINSProcessoReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/bem-ciap": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveBemCIAP",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'BemCIAP'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BemCIAP"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteBemCIAP",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'BemCIAP'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BemCIAP"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/bens": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveBens",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Bens'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bens"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteBens",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Bens'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bens"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/campo-adicional": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCampoAdicional",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CampoAdicional'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampoAdicional"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCampoAdicional",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CampoAdicional'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampoAdicional"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/centro-custo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCentroCusto",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CentroCusto'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CentroCusto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCentroCusto",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CentroCusto'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CentroCusto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ciapoutros-creditos": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCIAPOutrosCreditos",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CIAPOutrosCreditos'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CIAPOutrosCreditos"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCIAPOutrosCreditos",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CIAPOutrosCreditos'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CIAPOutrosCreditos"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/codigo-aglutinacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCodigoAglutinacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CodigoAglutinacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodigoAglutinacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCodigoAglutinacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CodigoAglutinacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodigoAglutinacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/codigo-aglutinacao-centro-custo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCodigoAglutinacaoCentroCusto",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CodigoAglutinacaoCentroCusto'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodigoAglutinacaoCentroCusto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCodigoAglutinacaoCentroCusto",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CodigoAglutinacaoCentroCusto'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodigoAglutinacaoCentroCusto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/comp-oper-per": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCompOperPer",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CompOperPer'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompOperPer"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCompOperPer",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CompOperPer'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompOperPer"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/cons-oper-per": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveConsOperPer",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ConsOperPer'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsOperPer"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteConsOperPer",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ConsOperPer'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsOperPer"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/cons-oper-per-proc-ref": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveConsOperPerProcRef",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ConsOperPerProcRef'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsOperPerProcRef"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteConsOperPerProcRef",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ConsOperPerProcRef'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsOperPerProcRef"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/contabil-folha-pagamento": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContabilFolhaPagamento",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContabilFolhaPagamento'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContabilFolhaPagamento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContabilFolhaPagamento",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContabilFolhaPagamento'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContabilFolhaPagamento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/contabilista": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContabilista",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Contabilista'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contabilista"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContabilista",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Contabilista'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contabilista"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/conta-contabil": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContaContabil",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContaContabil'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContaContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContaContabil",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContaContabil'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContaContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/conta-contabil-referencial": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContaContabilReferencial",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContaContabilReferencial'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContaContabilReferencial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContaContabilReferencial",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContaContabilReferencial'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContaContabilReferencial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/conta-contabil-sub-conta": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContaContabilSubConta",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContaContabilSubConta'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContaContabilSubConta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContaContabilSubConta",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContaContabilSubConta'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContaContabilSubConta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/contribuicao-diferida-anterior-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContribuicaoDiferidaAnteriorPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContribuicaoDiferidaAnteriorPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoDiferidaAnteriorPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContribuicaoDiferidaAnteriorPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContribuicaoDiferidaAnteriorPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoDiferidaAnteriorPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/contribuicao-extemporanea-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContribuicaoExtemporaneaPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContribuicaoExtemporaneaPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContribuicaoExtemporaneaPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContribuicaoExtemporaneaPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/contribuicao-previdenciaria-consolidada": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContribuicaoPrevidenciariaConsolidada",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContribuicaoPrevidenciariaConsolidada'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoPrevidenciariaConsolidada"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContribuicaoPrevidenciariaConsolidada",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContribuicaoPrevidenciariaConsolidada'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoPrevidenciariaConsolidada"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/contribuicao-retida-fonte-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContribuicaoRetidaFontePISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContribuicaoRetidaFontePISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoRetidaFontePISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContribuicaoRetidaFontePISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContribuicaoRetidaFontePISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoRetidaFontePISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/contribuicao-social-extemporanea-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveContribuicaoSocialExtemporaneaPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ContribuicaoSocialExtemporaneaPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoSocialExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteContribuicaoSocialExtemporaneaPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ContribuicaoSocialExtemporaneaPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContribuicaoSocialExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/controle-estoque": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveControleEstoque",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ControleEstoque'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControleEstoque"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteControleEstoque",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ControleEstoque'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControleEstoque"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-item-ressarcimento-icms": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalItemRessarcimentoICMS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalItemRessarcimentoICMS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalItemRessarcimentoICMS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalItemRessarcimentoICMS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalItemRessarcimentoICMS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalItemRessarcimentoICMS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExt",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExt'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExt"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExt",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExt'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExt"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext-consolidacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExtConsolidacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExtConsolidacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtConsolidacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExtConsolidacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExtConsolidacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtConsolidacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext-estrutura-societaria": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExtEstruturaSocietaria",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExtEstruturaSocietaria'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtEstruturaSocietaria"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExtEstruturaSocietaria",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExtEstruturaSocietaria'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtEstruturaSocietaria"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext-imposto-pago-exterior": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExtImpostoPagoExterior",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExtImpostoPagoExterior'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtImpostoPagoExterior"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExtImpostoPagoExterior",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExtImpostoPagoExterior'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtImpostoPagoExterior"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext-periodo-apuracao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExtPeriodoApuracao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExtPeriodoApuracao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtPeriodoApuracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExtPeriodoApuracao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExtPeriodoApuracao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtPeriodoApuracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext-prejuizo-acumulado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExtPrejuizoAcumulado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExtPrejuizoAcumulado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtPrejuizoAcumulado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExtPrejuizoAcumulado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExtPrejuizoAcumulado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtPrejuizoAcumulado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext-regime-caixa": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExtRegimeCaixa",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExtRegimeCaixa'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtRegimeCaixa"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExtRegimeCaixa",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExtRegimeCaixa'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtRegimeCaixa"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/ident-part-ext-renda-ativa-passiva": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIdentPartExtRendaAtivaPassiva",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IdentPartExtRendaAtivaPassiva'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtRendaAtivaPassiva"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIdentPartExtRendaAtivaPassiva",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IdentPartExtRendaAtivaPassiva'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentPartExtRendaAtivaPassiva"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/oper-exterior-import-export": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOperExteriorImportExport",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OperExteriorImportExport'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperExteriorImportExport"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOperExteriorImportExport",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OperExteriorImportExport'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperExteriorImportExport"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/oper-exterior-import-export-contratantes": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOperExteriorImportExportContratantes",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OperExteriorImportExportContratantes'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperExteriorImportExportContratantes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOperExteriorImportExportContratantes",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OperExteriorImportExportContratantes'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperExteriorImportExportContratantes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/oper-exterior-pvnv": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOperExteriorPVNV",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OperExteriorPVNV'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperExteriorPVNV"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOperExteriorPVNV",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OperExteriorPVNV'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperExteriorPVNV"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/pagamento-remessas-serv-juros-div-rec-brext": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "savePagamentoRemessasServJurosDivRecBRExt",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'PagamentoRemessasServJurosDivRecBRExt'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagamentoRemessasServJurosDivRecBRExt"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deletePagamentoRemessasServJurosDivRecBRExt",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'PagamentoRemessasServJurosDivRecBRExt'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagamentoRemessasServJurosDivRecBRExt"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/particip-aval-metodo-equiv-patrimonial": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveParticipAvalMetodoEquivPatrimonial",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ParticipAvalMetodoEquivPatrimonial'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipAvalMetodoEquivPatrimonial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteParticipAvalMetodoEquivPatrimonial",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ParticipAvalMetodoEquivPatrimonial'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipAvalMetodoEquivPatrimonial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/reprocessamento-reparo-produto": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveReprocessamentoReparoProduto",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ReprocessamentoReparoProduto'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReprocessamentoReparoProduto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteReprocessamentoReparoProduto",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ReprocessamentoReparoProduto'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReprocessamentoReparoProduto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/correcao-apontamento-registro-pai": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCorrecaoApontamentoRegistroPai",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CorrecaoApontamentoRegistroPai'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorrecaoApontamentoRegistroPai"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCorrecaoApontamentoRegistroPai",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CorrecaoApontamentoRegistroPai'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorrecaoApontamentoRegistroPai"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/correcao-apontamento-estoque": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCorrecaoApontamentoEstoque",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CorrecaoApontamentoEstoque'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorrecaoApontamentoEstoque"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCorrecaoApontamentoEstoque",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CorrecaoApontamentoEstoque'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorrecaoApontamentoEstoque"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/correcao-apontamento-registro-filho": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCorrecaoApontamentoRegistroFilho",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CorrecaoApontamentoRegistroFilho'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorrecaoApontamentoRegistroFilho"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCorrecaoApontamentoRegistroFilho",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CorrecaoApontamentoRegistroFilho'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CorrecaoApontamentoRegistroFilho"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/desmontagem-item-origem": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDesmontagemItemOrigem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DesmontagemItemOrigem'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DesmontagemItemOrigem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDesmontagemItemOrigem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DesmontagemItemOrigem'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DesmontagemItemOrigem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/desmontagem-item-destino": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDesmontagemItemDestino",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DesmontagemItemDestino'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DesmontagemItemDestino"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDesmontagemItemDestino",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DesmontagemItemDestino'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DesmontagemItemDestino"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/doc-fiscal-emitido-ecfitem-report": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocFiscalEmitidoECFItemReport",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocFiscalEmitidoECFItemReport'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocFiscalEmitidoECFItemReport"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocFiscalEmitidoECFItemReport",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocFiscalEmitidoECFItemReport'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocFiscalEmitidoECFItemReport"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/reprocessamento-reparo-consumo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveReprocessamentoReparoConsumo",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ReprocessamentoReparoConsumo'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReprocessamentoReparoConsumo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteReprocessamentoReparoConsumo",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ReprocessamentoReparoConsumo'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReprocessamentoReparoConsumo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/royalties-recebidos-pagos-brex": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveRoyaltiesRecebidosPagosBREX",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'RoyaltiesRecebidosPagosBREX'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoyaltiesRecebidosPagosBREX"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteRoyaltiesRecebidosPagosBREX",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'RoyaltiesRecebidosPagosBREX'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoyaltiesRecebidosPagosBREX"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-light": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalLight",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalLight'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalLight"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalLight",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalLight'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalLight"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/industrializacao-insumo-consumido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIndustrializacaoInsumoConsumido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IndustrializacaoInsumoConsumido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndustrializacaoInsumoConsumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIndustrializacaoInsumoConsumido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IndustrializacaoInsumoConsumido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndustrializacaoInsumoConsumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/industrializacao-item-produzido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveIndustrializacaoItemProduzido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'IndustrializacaoItemProduzido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndustrializacaoItemProduzido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteIndustrializacaoItemProduzido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'IndustrializacaoItemProduzido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndustrializacaoItemProduzido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/insumo-consumido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInsumoConsumido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InsumoConsumido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsumoConsumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInsumoConsumido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InsumoConsumido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsumoConsumido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/inventario-informacao-complementar": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInventarioInformacaoComplementar",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InventarioInformacaoComplementar'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventarioInformacaoComplementar"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInventarioInformacaoComplementar",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InventarioInformacaoComplementar'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventarioInformacaoComplementar"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/item-consumo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveItemConsumo",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ItemConsumo'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemConsumo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemConsumo",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ItemConsumo'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemConsumo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/valor-agregado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveValorAgregado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ValorAgregado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValorAgregado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteValorAgregado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ValorAgregado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValorAgregado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/item-produzido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveItemProduzido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ItemProduzido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemProduzido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemProduzido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ItemProduzido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemProduzido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/outras-movimentacoes": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOutrasMovimentacoes",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OutrasMovimentacoes'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasMovimentacoes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOutrasMovimentacoes",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OutrasMovimentacoes'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasMovimentacoes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/credito-desconto-contribuicao-social-extemporanea-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCreditoDescontoContribuicaoSocialExtemporaneaPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CreditoDescontoContribuicaoSocialExtemporaneaPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditoDescontoContribuicaoSocialExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCreditoDescontoContribuicaoSocialExtemporaneaPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CreditoDescontoContribuicaoSocialExtemporaneaPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditoDescontoContribuicaoSocialExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/credito-extemporaneo-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCreditoExtemporaneoPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CreditoExtemporaneoPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditoExtemporaneoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCreditoExtemporaneoPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CreditoExtemporaneoPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditoExtemporaneoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/credito-fiscal-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCreditoFiscalPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CreditoFiscalPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditoFiscalPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCreditoFiscalPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CreditoFiscalPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditoFiscalPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/cretencao-fonte-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCRetencaoFontePISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CRetencaoFontePISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CRetencaoFontePISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCRetencaoFontePISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CRetencaoFontePISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CRetencaoFontePISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/cupom-fiscal-referenciado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveCupomFiscalReferenciado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'CupomFiscalReferenciado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CupomFiscalReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteCupomFiscalReferenciado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'CupomFiscalReferenciado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CupomFiscalReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/dacon-categoria": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDaconCategoria",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DaconCategoria'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaconCategoria"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDaconCategoria",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DaconCategoria'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaconCategoria"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/dacon-contas-contabeis": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDaconContasContabeis",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DaconContasContabeis'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaconContasContabeis"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDaconContasContabeis",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DaconContasContabeis'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaconContasContabeis"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/deducao-diversas-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDeducaoDiversasPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DeducaoDiversasPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeducaoDiversasPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDeducaoDiversasPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DeducaoDiversasPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeducaoDiversasPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-item-light": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalItemLight",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalItemLight'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalItemLight"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalItemLight",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalItemLight'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalItemLight"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/estabelecimento-fiscal-ecf": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEstabelecimentoFiscalECF",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EstabelecimentoFiscalECF'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscalECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEstabelecimentoFiscalECF",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EstabelecimentoFiscalECF'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscalECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/gnre": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveGNRE",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'GNRE'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GNRE"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteGNRE",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'GNRE'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GNRE"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/inscricao-estadual": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInscricaoEstadual",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InscricaoEstadual'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InscricaoEstadual"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInscricaoEstadual",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InscricaoEstadual'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InscricaoEstadual"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/pedido-externo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "savePedidoExterno",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'PedidoExterno'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoExterno"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deletePedidoExterno",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'PedidoExterno'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoExterno"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/pedido-externo-item": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "savePedidoExternoItem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'PedidoExternoItem'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoExternoItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deletePedidoExternoItem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'PedidoExternoItem'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoExternoItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/razao-auxiliar-sub-conta": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveRazaoAuxiliarSubConta",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'RazaoAuxiliarSubConta'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RazaoAuxiliarSubConta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteRazaoAuxiliarSubConta",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'RazaoAuxiliarSubConta'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RazaoAuxiliarSubConta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/desconto-contribuicao-extemporaneo-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDescontoContribuicaoExtemporaneoPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DescontoContribuicaoExtemporaneoPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescontoContribuicaoExtemporaneoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDescontoContribuicaoExtemporaneoPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DescontoContribuicaoExtemporaneoPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescontoContribuicaoExtemporaneoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/descricao-contribuicao-extemporanea-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDescricaoContribuicaoExtemporaneaPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DescricaoContribuicaoExtemporaneaPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescricaoContribuicaoExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDescricaoContribuicaoExtemporaneaPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DescricaoContribuicaoExtemporaneaPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescricaoContribuicaoExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/detalhamento-contribuicao-social-extemporanea-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDetalhamentoContribuicaoSocialExtemporaneaPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DetalhamentoContribuicaoSocialExtemporaneaPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetalhamentoContribuicaoSocialExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDetalhamentoContribuicaoSocialExtemporaneaPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DetalhamentoContribuicaoSocialExtemporaneaPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetalhamentoContribuicaoSocialExtemporaneaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/detalhe-apuracao-contribuicao-previdenciario": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDetalheApuracaoContribuicaoPrevidenciario",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DetalheApuracaoContribuicaoPrevidenciario'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetalheApuracaoContribuicaoPrevidenciario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDetalheApuracaoContribuicaoPrevidenciario",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DetalheApuracaoContribuicaoPrevidenciario'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DetalheApuracaoContribuicaoPrevidenciario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/doc-fiscal-emitido-ecf": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocFiscalEmitidoECF",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocFiscalEmitidoECF'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocFiscalEmitidoECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocFiscalEmitidoECF",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocFiscalEmitidoECF'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocFiscalEmitidoECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/doc-fiscal-emitido-ecfitem": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocFiscalEmitidoECFItem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocFiscalEmitidoECFItem'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocFiscalEmitidoECFItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocFiscalEmitidoECFItem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocFiscalEmitidoECFItem'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocFiscalEmitidoECFItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-fatura": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalFatura",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalFatura'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalFatura"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalFatura",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalFatura'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalFatura"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-imposto-retido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalImpostoRetido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalImpostoRetido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalImpostoRetido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalImpostoRetido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalImpostoRetido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalImpostoRetido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-info-complementar": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalInfoComplementar",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalInfoComplementar'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalInfoComplementar"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalInfoComplementar",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalInfoComplementar'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalInfoComplementar"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-item": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalItem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalItem'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalItem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalItem'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-operacao-armas": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalOperacaoArmas",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalOperacaoArmas'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalOperacaoArmas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalOperacaoArmas",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalOperacaoArmas'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalOperacaoArmas"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-operacao-medicamento-item": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalOperacaoMedicamentoItem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalOperacaoMedicamentoItem'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalOperacaoMedicamentoItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalOperacaoMedicamentoItem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalOperacaoMedicamentoItem'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalOperacaoMedicamentoItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-operacao-veiculo-novo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalOperacaoVeiculoNovo",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalOperacaoVeiculoNovo'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalOperacaoVeiculoNovo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalOperacaoVeiculoNovo",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalOperacaoVeiculoNovo'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalOperacaoVeiculoNovo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-parcela": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalParcela",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalParcela'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalParcela"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalParcela",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalParcela'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalParcela"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/documento-fiscal-referenciado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveDocumentoFiscalReferenciado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'DocumentoFiscalReferenciado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteDocumentoFiscalReferenciado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'DocumentoFiscalReferenciado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentoFiscalReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/entidade-referencial": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEntidadeReferencial",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EntidadeReferencial'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntidadeReferencial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEntidadeReferencial",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EntidadeReferencial'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntidadeReferencial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/equipamento-ecf": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEquipamentoECF",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EquipamentoECF'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EquipamentoECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEquipamentoECF",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EquipamentoECF'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EquipamentoECF"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/estabelecimento-abertura-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEstabelecimentoAberturaPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EstabelecimentoAberturaPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoAberturaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEstabelecimentoAberturaPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EstabelecimentoAberturaPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoAberturaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/estabelecimento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEstabelecimentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EstabelecimentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEstabelecimentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EstabelecimentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/estabelecimento-fiscal-dacon": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEstabelecimentoFiscalDACON",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EstabelecimentoFiscalDACON'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscalDACON"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEstabelecimentoFiscalDACON",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EstabelecimentoFiscalDACON'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscalDACON"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/estabelecimento-fiscal-dipj": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEstabelecimentoFiscalDIPJ",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EstabelecimentoFiscalDIPJ'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscalDIPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEstabelecimentoFiscalDIPJ",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EstabelecimentoFiscalDIPJ'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EstabelecimentoFiscalDIPJ"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/evento-incorporacao-fusao-cisao-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveEventoIncorporacaoFusaoCisaoPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'EventoIncorporacaoFusaoCisaoPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventoIncorporacaoFusaoCisaoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteEventoIncorporacaoFusaoCisaoPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'EventoIncorporacaoFusaoCisaoPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventoIncorporacaoFusaoCisaoPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/exportacao-documento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveExportacaoDocumentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ExportacaoDocumentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportacaoDocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteExportacaoDocumentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ExportacaoDocumentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportacaoDocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/exportacao-indireta": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveExportacaoIndireta",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ExportacaoIndireta'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportacaoIndireta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteExportacaoIndireta",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ExportacaoIndireta'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportacaoIndireta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/fciitem": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveFCIItem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'FCIItem'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FCIItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteFCIItem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'FCIItem'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FCIItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/folha-pagamento": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveFolhaPagamento",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'FolhaPagamento'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FolhaPagamento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteFolhaPagamento",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'FolhaPagamento'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FolhaPagamento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/formulario-cancelado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveFormularioCancelado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'FormularioCancelado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormularioCancelado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteFormularioCancelado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'FormularioCancelado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormularioCancelado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/formulario-utilizado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveFormularioUtilizado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'FormularioUtilizado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormularioUtilizado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteFormularioUtilizado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'FormularioUtilizado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormularioUtilizado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/fornecedores-clientes": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveFornecedoresClientes",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'FornecedoresClientes'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FornecedoresClientes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteFornecedoresClientes",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'FornecedoresClientes'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FornecedoresClientes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/guia-previdencia-social": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveGuiaPrevidenciaSocial",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'GuiaPrevidenciaSocial'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GuiaPrevidenciaSocial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteGuiaPrevidenciaSocial",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'GuiaPrevidenciaSocial'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GuiaPrevidenciaSocial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/historico-padrao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveHistoricoPadrao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'HistoricoPadrao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoricoPadrao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteHistoricoPadrao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'HistoricoPadrao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HistoricoPadrao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/informacao-adicional-diferida-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInformacaoAdicionalDiferidaPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InformacaoAdicionalDiferidaPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InformacaoAdicionalDiferidaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInformacaoAdicionalDiferidaPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InformacaoAdicionalDiferidaPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InformacaoAdicionalDiferidaPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/informacao-complementar": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInformacaoComplementar",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InformacaoComplementar'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InformacaoComplementar"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInformacaoComplementar",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InformacaoComplementar'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InformacaoComplementar"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/informacao-exportacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInformacaoExportacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InformacaoExportacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InformacaoExportacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInformacaoExportacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InformacaoExportacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InformacaoExportacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/inscricao-estadual-estabelecimento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInscricaoEstadualEstabelecimentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InscricaoEstadualEstabelecimentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InscricaoEstadualEstabelecimentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInscricaoEstadualEstabelecimentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InscricaoEstadualEstabelecimentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InscricaoEstadualEstabelecimentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/insumo-relacionado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInsumoRelacionado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'InsumoRelacionado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsumoRelacionado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInsumoRelacionado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'InsumoRelacionado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsumoRelacionado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/inventario": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveInventario",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Inventario'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteInventario",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Inventario'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/item": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveItem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Item'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteItem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Item'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/item-alteracao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveItemAlteracao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ItemAlteracao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemAlteracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemAlteracao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ItemAlteracao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemAlteracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/item-estabelecimento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveItemEstabelecimentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ItemEstabelecimentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemEstabelecimentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteItemEstabelecimentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ItemEstabelecimentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemEstabelecimentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/lancamento-contabil": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveLancamentoContabil",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'LancamentoContabil'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LancamentoContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteLancamentoContabil",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'LancamentoContabil'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LancamentoContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/livro-razao-parametrizavel-campo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveLivroRazaoParametrizavelCampo",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'LivroRazaoParametrizavelCampo'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivroRazaoParametrizavelCampo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteLivroRazaoParametrizavelCampo",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'LivroRazaoParametrizavelCampo'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivroRazaoParametrizavelCampo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/livro-razao-parametro-valor": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveLivroRazaoParametroValor",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'LivroRazaoParametroValor'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivroRazaoParametroValor"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteLivroRazaoParametroValor",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'LivroRazaoParametroValor'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivroRazaoParametroValor"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/local-coleta-entrega": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveLocalColetaEntrega",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'LocalColetaEntrega'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalColetaEntrega"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteLocalColetaEntrega",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'LocalColetaEntrega'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalColetaEntrega"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/lotacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveLotacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Lotacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lotacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteLotacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Lotacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lotacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/movimentacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveMovimentacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Movimentacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movimentacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteMovimentacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Movimentacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Movimentacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/movimentacao-documento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveMovimentacaoDocumentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'MovimentacaoDocumentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentacaoDocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteMovimentacaoDocumentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'MovimentacaoDocumentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentacaoDocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/movimentacao-documento-fiscal-item": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveMovimentacaoDocumentoFiscalItem",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'MovimentacaoDocumentoFiscalItem'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentacaoDocumentoFiscalItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteMovimentacaoDocumentoFiscalItem",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'MovimentacaoDocumentoFiscalItem'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentacaoDocumentoFiscalItem"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/movimentacao-lalur": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveMovimentacaoLALUR",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'MovimentacaoLALUR'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentacaoLALUR"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteMovimentacaoLALUR",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'MovimentacaoLALUR'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentacaoLALUR"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/movimento-documento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveMovimentoDocumentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'MovimentoDocumentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentoDocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteMovimentoDocumentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'MovimentoDocumentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentoDocumentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/movimento-inventario": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveMovimentoInventario",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'MovimentoInventario'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentoInventario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteMovimentoInventario",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'MovimentoInventario'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovimentoInventario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/natureza-operacao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveNaturezaOperacao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'NaturezaOperacao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NaturezaOperacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteNaturezaOperacao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'NaturezaOperacao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NaturezaOperacao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/obrigacao-recolher": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveObrigacaoRecolher",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ObrigacaoRecolher'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObrigacaoRecolher"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteObrigacaoRecolher",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ObrigacaoRecolher'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObrigacaoRecolher"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/observacao-documento-lancamento-detalhe": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveObservacaoDocumentoLancamentoDetalhe",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ObservacaoDocumentoLancamentoDetalhe'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservacaoDocumentoLancamentoDetalhe"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteObservacaoDocumentoLancamentoDetalhe",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ObservacaoDocumentoLancamentoDetalhe'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservacaoDocumentoLancamentoDetalhe"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/observacao-documento-lancamento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveObservacaoDocumentoLancamentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ObservacaoDocumentoLancamentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservacaoDocumentoLancamentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteObservacaoDocumentoLancamentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ObservacaoDocumentoLancamentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservacaoDocumentoLancamentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/observacao-lancamento-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveObservacaoLancamentoFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ObservacaoLancamentoFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservacaoLancamentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteObservacaoLancamentoFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ObservacaoLancamentoFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservacaoLancamentoFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/outras-compensacoes": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOutrasCompensacoes",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OutrasCompensacoes'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasCompensacoes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOutrasCompensacoes",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OutrasCompensacoes'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrasCompensacoes"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/outros-documentos-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveOutrosDocumentosPISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'OutrosDocumentosPISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrosDocumentosPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteOutrosDocumentosPISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'OutrosDocumentosPISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutrosDocumentosPISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/pagamento-indevido": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "savePagamentoIndevido",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'PagamentoIndevido'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagamentoIndevido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deletePagamentoIndevido",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'PagamentoIndevido'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PagamentoIndevido"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/parceiro": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveParceiro",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Parceiro'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parceiro"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteParceiro",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Parceiro'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Parceiro"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/parceiro-alteracao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveParceiroAlteracao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ParceiroAlteracao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParceiroAlteracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteParceiroAlteracao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ParceiroAlteracao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParceiroAlteracao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/parcelamento-imposto": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveParcelamentoImposto",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ParcelamentoImposto'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParcelamentoImposto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteParcelamentoImposto",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ParcelamentoImposto'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParcelamentoImposto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/participante-acionario": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveParticipanteAcionario",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ParticipanteAcionario'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipanteAcionario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteParticipanteAcionario",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ParticipanteAcionario'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ParticipanteAcionario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/plano-conta": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "savePlanoConta",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'PlanoConta'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanoConta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deletePlanoConta",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'PlanoConta'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlanoConta"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/processo-referenciado": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveProcessoReferenciado",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ProcessoReferenciado'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteProcessoReferenciado",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ProcessoReferenciado'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciado"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/processo-referenciado-contribuicao-previdenciario": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveProcessoReferenciadoContribuicaoPrevidenciario",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ProcessoReferenciadoContribuicaoPrevidenciario'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciadoContribuicaoPrevidenciario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteProcessoReferenciadoContribuicaoPrevidenciario",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ProcessoReferenciadoContribuicaoPrevidenciario'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciadoContribuicaoPrevidenciario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/processo-referenciado-acao-judicial": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveProcessoReferenciadoAcaoJudicial",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ProcessoReferenciadoAcaoJudicial'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciadoAcaoJudicial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteProcessoReferenciadoAcaoJudicial",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ProcessoReferenciadoAcaoJudicial'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciadoAcaoJudicial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/processo-referenciado-processo-administrativo": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveProcessoReferenciadoProcessoAdministrativo",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ProcessoReferenciadoProcessoAdministrativo'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciadoProcessoAdministrativo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteProcessoReferenciadoProcessoAdministrativo",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ProcessoReferenciadoProcessoAdministrativo'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessoReferenciadoProcessoAdministrativo"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/provento": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveProvento",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Provento'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Provento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteProvento",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Provento'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Provento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/reducao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveReducao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'Reducao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reducao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteReducao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'Reducao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reducao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/reducao-parcial": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveReducaoParcial",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ReducaoParcial'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReducaoParcial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteReducaoParcial",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ReducaoParcial'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReducaoParcial"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/responsavel-arquivo-digital": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveResponsavelArquivoDigital",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ResponsavelArquivoDigital'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponsavelArquivoDigital"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteResponsavelArquivoDigital",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ResponsavelArquivoDigital'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponsavelArquivoDigital"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/saldo-contabil": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveSaldoContabil",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'SaldoContabil'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaldoContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteSaldoContabil",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'SaldoContabil'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaldoContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/saldo-fechamento": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveSaldoFechamento",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'SaldoFechamento'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaldoFechamento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteSaldoFechamento",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'SaldoFechamento'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaldoFechamento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/suspensao-imposto": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveSuspensaoImposto",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'SuspensaoImposto'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuspensaoImposto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteSuspensaoImposto",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'SuspensaoImposto'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuspensaoImposto"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/tipo-movimentacao-inventario": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveTipoMovimentacaoInventario",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'TipoMovimentacaoInventario'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TipoMovimentacaoInventario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteTipoMovimentacaoInventario",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'TipoMovimentacaoInventario'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TipoMovimentacaoInventario"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/transferencia-saldo-contabil": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveTransferenciaSaldoContabil",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'TransferenciaSaldoContabil'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferenciaSaldoContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteTransferenciaSaldoContabil",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'TransferenciaSaldoContabil'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferenciaSaldoContabil"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/transporte-rodoviario-complemento": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveTransporteRodoviarioComplemento",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'TransporteRodoviarioComplemento'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransporteRodoviarioComplemento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteTransporteRodoviarioComplemento",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'TransporteRodoviarioComplemento'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransporteRodoviarioComplemento"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/transporte-rodoviario-nota-fiscal": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveTransporteRodoviarioNotaFiscal",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'TransporteRodoviarioNotaFiscal'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransporteRodoviarioNotaFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteTransporteRodoviarioNotaFiscal",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'TransporteRodoviarioNotaFiscal'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransporteRodoviarioNotaFiscal"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/unidade-medida": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveUnidadeMedida",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'UnidadeMedida'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnidadeMedida"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteUnidadeMedida",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'UnidadeMedida'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnidadeMedida"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/unidade-medida-conversao": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveUnidadeMedidaConversao",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'UnidadeMedidaConversao'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnidadeMedidaConversao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteUnidadeMedidaConversao",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'UnidadeMedidaConversao'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnidadeMedidaConversao"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/compliance/valor-retido-fonte-piscofins": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "post": {
        "operationId": "saveValorRetidoFontePISCOFINS",
        "summary": "Create/Update Method",
        "description": "Este método insere ou atualiza um objeto do tipo 'ValorRetidoFontePISCOFINS'.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValorRetidoFontePISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      },
      "delete": {
        "operationId": "deleteValorRetidoFontePISCOFINS",
        "summary": "Delete Method",
        "description": "Este método faz a exclusão de um objeto do tipo 'ValorRetidoFontePISCOFINS'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValorRetidoFontePISCOFINS"
            }
          }
        ],
        "tags": [
          "Compliance"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204_NoContent"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/documents": {
      "parameters": [
        {
          "$ref": "#/parameters/header_jwt"
        }
      ],
      "get": {
        "operationId": "getDocuments",
        "summary": "Get documents (invoices and other types)",
        "description": "This method operation return the documents\n",
        "parameters": [
          {
            "$ref": "#/parameters/query_documentType"
          },
          {
            "$ref": "#/parameters/query_startDate"
          },
          {
            "$ref": "#/parameters/query_endDate"
          },
          {
            "$ref": "#/parameters/query_documentSubType"
          },
          {
            "$ref": "#/parameters/query_federalTaxId"
          }
        ],
        "tags": [
          "Documents"
        ],
        "responses": {
          "200": {
            "description": "File URL",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "operationId": "insertDocument",
        "summary": "Insert a new document",
        "description": "This method insert a new document\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transaction Message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "tags": [
          "Documents"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201_Created"
          },
          "400": {
            "$ref": "#/responses/400_BadRequest"
          },
          "401": {
            "$ref": "#/responses/401_Unauthorized"
          },
          "403": {
            "$ref": "#/responses/403_Forbidden"
          },
          "404": {
            "$ref": "#/responses/404_NotFound"
          },
          "429": {
            "$ref": "#/responses/429_TooManyRequests"
          },
          "500": {
            "$ref": "#/responses/500_InternalServerError"
          },
          "503": {
            "$ref": "#/responses/503_ServiceUnavailable"
          }
        }
      }
    }
  },
  "responses": {
    "201_Created": {
      "description": "Success.",
      "schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid"
          }
        }
      }
    },
    "204_NoContent": {
      "description": "Success."
    },
    "400_BadRequest": {
      "description": "The request was invalid or cannot be otherwise served.",
      "schema": {
        "$ref": "#/definitions/ValidationError"
      }
    },
    "401_Unauthorized": {
      "description": "Authentication credentials were missing or incorrect.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "403_Forbidden": {
      "description": "The request is understood, but it has been refused or access is not allowed.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "404_NotFound": {
      "description": "The URI requested is invalid or the resource requested does not exists.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "429_TooManyRequests": {
      "description": "The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "500_InternalServerError": {
      "description": "Something is broken.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "503_ServiceUnavailable": {
      "description": "The server is up, but overloaded with requests. Try again later.",
      "schema": {
        "$ref": "#/definitions/Message"
      }
    },
    "200_SuccessList": {
      "description": "Success response",
      "headers": {
        "X-Pagination-Current-Page": {
          "description": "The current page. Defaults to 1.",
          "type": "number"
        },
        "X-Pagination-Limit": {
          "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
          "type": "number"
        },
        "X-Pagination-Total-Pages": {
          "description": "The total number of pages in the result set. Use this along with X-Pagination-Current-Page to determine if there are any remaining pages/records to be retrieved.",
          "type": "number"
        },
        "X-Pagination-Total-Count": {
          "description": "The total number of records across all pages.",
          "type": "number"
        }
      }
    }
  },
  "parameters": {
    "header_jwt": {
      "name": "Authorization",
      "in": "header",
      "description": "Bearer {auth}",
      "required": true,
      "type": "string"
    },
    "path_companyId": {
      "name": "companyId",
      "in": "path",
      "description": "Company ID",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "path_zipCode": {
      "name": "zipcode",
      "in": "path",
      "description": "ZIP Code",
      "required": true,
      "type": "string",
      "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
      "maxLength": 60
    },
    "path_agastCode": {
      "name": "code",
      "in": "path",
      "description": "Agast Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "query_agastCode": {
      "name": "agast",
      "in": "query",
      "description": "Custom Agast Code",
      "type": "string",
      "maxLength": 60
    },
    "path_accountId": {
      "name": "accountId",
      "in": "path",
      "description": "Account ID",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "path_companyCode": {
      "name": "companyCode",
      "in": "path",
      "description": "Company Code",
      "required": true,
      "type": "string"
    },
    "path_documentCode": {
      "name": "documentCode",
      "in": "path",
      "description": "Document Code",
      "required": true,
      "type": "string"
    },
    "query_transactionType_goods": {
      "name": "type",
      "in": "query",
      "description": "Transaction Type",
      "type": "string",
      "enum": [
        "sale",
        "purchase",
        "sales-return",
        "purchase-return",
        "transfer-return",
        "shipping",
        "shipping-return",
        "transfer",
        "receipt-adjustment",
        "transfer-adjustment"
      ]
    },
    "query_transactionType_service": {
      "name": "type",
      "in": "query",
      "description": "Transaction Type (sale, purchase, receipts or payment)",
      "type": "string",
      "enum": [
        "sale",
        "purchase",
        "payment",
        "receipt"
      ]
    },
    "header_listLimit": {
      "name": "X-Pagination-Limit",
      "in": "header",
      "description": "The per page limit. Currently set to 10 but subject to change at any time (max 100).",
      "type": "integer",
      "format": "int32",
      "default": 10,
      "minimum": 5
    },
    "header_listPage": {
      "name": "X-Pagination-Current-Page",
      "in": "header",
      "type": "integer",
      "format": "int32",
      "description": "The current page. Defaults to 1.",
      "default": 1,
      "minimum": 1
    },
    "path_cityCode": {
      "name": "cityCode",
      "in": "path",
      "description": "City Code",
      "required": true,
      "type": "number"
    },
    "path_federalTaxId": {
      "name": "federalTaxId",
      "in": "path",
      "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
      "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'",
      "required": true,
      "type": "string"
    },
    "path_itemCode": {
      "name": "code",
      "in": "path",
      "description": "Item Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_locationCode": {
      "name": "code",
      "in": "path",
      "description": "Location Code",
      "required": true,
      "type": "string"
    },
    "path_processCode": {
      "name": "code",
      "in": "path",
      "description": "Process Code",
      "required": true,
      "type": "string"
    },
    "path_taxType": {
      "name": "taxType",
      "in": "path",
      "description": "Tax Type",
      "required": true,
      "type": "string",
      "enum": [
        "inss",
        "inss-rf",
        "irrf",
        "pis",
        "pis-rf",
        "cofins",
        "cofins-rf",
        "csll",
        "csll-rf",
        "irpj",
        "iss",
        "iss-rf",
        "ipi"
      ]
    },
    "path_stateAbbr": {
      "name": "state",
      "in": "path",
      "description": "Brazilian State",
      "required": true,
      "type": "string",
      "enum": [
        "ac",
        "al",
        "am",
        "ap",
        "ba",
        "ce",
        "df",
        "es",
        "go",
        "ma",
        "mg",
        "ms",
        "mt",
        "pa",
        "pb",
        "pe",
        "pi",
        "pr",
        "rj",
        "rn",
        "ro",
        "rr",
        "rs",
        "sc",
        "se",
        "sp",
        "to"
      ],
      "maxLength": 2
    },
    "query_agastParent": {
      "name": "parent",
      "in": "query",
      "description": "Agast Code",
      "type": "string",
      "maxLength": 60
    },
    "query_itemCode": {
      "name": "code",
      "in": "query",
      "description": "Item Code",
      "type": "string",
      "maxLength": 60
    },
    "query_textQuery": {
      "name": "text",
      "in": "query",
      "description": "Performs text search.",
      "type": "string"
    },
    "header_AvaTypeGoods": {
      "name": "Avalara-Product-Type",
      "in": "header",
      "description": "Avalara Product Type",
      "type": "string",
      "enum": [
        "goods",
        "service"
      ],
      "default": "goods",
      "required": true
    },
    "header_AvaTypeService": {
      "name": "Avalara-Product-Type",
      "in": "header",
      "description": "Avalara Product Type",
      "type": "string",
      "enum": [
        "goods",
        "service"
      ],
      "default": "service"
    },
    "header_listSort": {
      "name": "X-Pagination-Sort",
      "in": "header",
      "type": "string",
      "pattern": "-?\\w+"
    },
    "path_invoiceKey": {
      "name": "key",
      "in": "path",
      "description": "Invoice Key",
      "required": true,
      "type": "string",
      "pattern": "^(\\d{44})$"
    },
    "path_rpsSerie": {
      "name": "serie",
      "in": "path",
      "description": "RPS Serie",
      "required": true,
      "type": "string"
    },
    "path_rpsNumber": {
      "name": "number",
      "in": "path",
      "description": "RPS Number",
      "required": true,
      "type": "integer",
      "format": "int64"
    },
    "path_serviceCode": {
      "name": "serviceCode",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "path_icmsCode": {
      "name": "code",
      "in": "path",
      "description": "ICMS Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_ipbtCode": {
      "name": "code",
      "in": "path",
      "description": "IBPT Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "path_cfopCode": {
      "name": "code",
      "in": "path",
      "description": "CFOP Code",
      "required": true,
      "type": "string",
      "maxLength": 60
    },
    "query_stateAbbr": {
      "name": "state",
      "in": "query",
      "description": "Brazilian State",
      "required": false,
      "type": "string",
      "enum": [
        "ac",
        "al",
        "am",
        "ap",
        "ba",
        "ce",
        "df",
        "es",
        "go",
        "ma",
        "mg",
        "ms",
        "mt",
        "pa",
        "pb",
        "pe",
        "pi",
        "pr",
        "rj",
        "rn",
        "ro",
        "rr",
        "rs",
        "sc",
        "se",
        "sp",
        "to"
      ],
      "maxLength": 2
    },
    "query_documentType": {
      "name": "documentType",
      "in": "query",
      "description": "Document Type",
      "type": "string",
      "required": true,
      "enum": [
        "SERVICO",
        "MERCADORIA",
        "TRANSPORTE"
      ]
    },
    "query_startDate": {
      "name": "startDate",
      "in": "query",
      "description": "The start date in range",
      "type": "string",
      "required": true,
      "maxLength": 10
    },
    "query_endDate": {
      "name": "endDate",
      "in": "query",
      "description": "The end date in range",
      "type": "string",
      "required": true,
      "maxLength": 10
    },
    "query_documentSubType": {
      "name": "subType",
      "in": "query",
      "description": "Document Sub-type",
      "type": "string",
      "required": true,
      "enum": [
        "ENTRADA",
        "EMISSAO"
      ]
    },
    "query_federalTaxId": {
      "name": "federalTaxId",
      "in": "query",
      "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}",
      "type": "string",
      "required": true,
      "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?"
    }
  },
  "definitions": {
    "InformerForGoods": {
      "type": "object",
      "description": "Internal Type used to references all taxes.",
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForGoods"
        },
        "line": {
          "$ref": "#/definitions/LineForGoods"
        },
        "_company": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "_entity": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "emitter": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "receiver": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "transporter": {
          "$ref": "#/definitions/EntityInformerForGoods"
        },
        "csts": {
          "type": "object",
          "properties": {
            "icms": {
              "type": "string",
              "description": "CST-B"
            },
            "ipi": {
              "type": "string",
              "description": "CST-IPI"
            },
            "pisCofins": {
              "type": "string",
              "description": "CST PIS/COFINS"
            }
          }
        },
        "amount": {
          "type": "number"
        },
        "discount": {
          "type": "number"
        },
        "quantity": {
          "type": "number"
        },
        "unitPrice": {
          "type": "number"
        },
        "freightAmount": {
          "type": "number"
        },
        "insuranceAmount": {
          "type": "number"
        },
        "otherCostAmount": {
          "type": "number"
        },
        "exemptValue": {
          "type": "number"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "params",
            "body",
            "query"
          ]
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "EntityInformerForGoods": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "taxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "federalTaxRegime": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "abbr": {
              "type": "string"
            }
          }
        },
        "cityCode": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "details": {
          "type": "object"
        },
        "icmsTaxPayer": {
          "type": "boolean"
        }
      }
    },
    "HeaderForGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/HeaderForGoodsBase"
        },
        {
          "type": "object",
          "required": [
            "participants",
            "transactionType"
          ],
          "properties": {
            "messageType": {
              "type": "string",
              "enum": [
                "goods"
              ],
              "default": "goods"
            },
            "documentCode": {
              "type": "string",
              "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
            },
            "participants": {
              "description": "List of transaction participants, Seller, Buyer, Carrier",
              "type": "object",
              "properties": {
                "entity": {
                  "$ref": "#/definitions/EntityForGoods"
                },
                "transporter": {
                  "$ref": "#/definitions/EntityForGoods"
                }
              }
            },
            "nfAccessKey": {
              "type": "string",
              "description": "This is the public NF id. With this number is possible get invoice information directly from government."
            },
            "nfceQrCode": {
              "type": "string",
              "maxLength": 600,
              "minLength": 100,
              "description": "qr code printed on DANFE;"
            },
            "transactionType": {
              "type": "string",
              "enum": [
                "Sale",
                "Purchase",
                "SalesReturn",
                "PurchaseReturn",
                "TransferReturn",
                "Shipping",
                "ShippingReturn",
                "Transfer",
                "ReceiptAdjustment",
                "TransferAdjustment"
              ],
              "description": "This string indicates the type of transaction for which tax should be calculated."
            },
            "transactionModel": {
              "type": "string",
              "default": "55",
              "enum": [
                "01",
                "1B",
                "02",
                "2D",
                "2E",
                "04",
                "06",
                "07",
                "08",
                "8B",
                "09",
                "10",
                "11",
                "13",
                "14",
                "15",
                "16",
                "18",
                "21",
                "22",
                "26",
                "27",
                "28",
                "29",
                "55",
                "57",
                "59",
                "60",
                "65"
              ],
              "description": "- '01' # Nota Fiscal 1/1A\n- '1B' # Nota Fiscal Avulsa\n- '02' # Nota Fiscal de Venda a-Consumidor\n- '2D' # Cupom Fiscal\n- '2E' # Cupom Fiscal-Bilhete de Passagem\n- '04' # Nota Fiscal de Produtor\n- '06' # Nota Fiscal/Conta de Energia Elétrica\n- '07' # Nota Fiscal de Serviço de Transporte\n- '08' # Conhecimento de Transporte Rodoviário de-Cargas\n- '8B' # Conhecimento de Transporte de-Cargas Avulso\n- '09' # Conhecimento de Transporte Aquaviário de-Cargas\n- '10' # Conhecimento Aéreo\n- '11' # Conhecimento de Transporte Ferroviário de-Cargas\n- '13' # Bilhete de Passagem Rodoviário\n- '14' # Bilhete de Passagem Aquaviário\n- '15' # Bilhete de Passagem e-Nota de-Bagagem\n- '16' # Bilhete de Passagem Ferroviário\n- '18' # Resumo de Movimento Diário\n- '21' # Nota Fiscal de Serviço de-Comunicação\n- '22' # Nota Fiscal de Serviço de Telecomunicação\n- '26' # Conhecimento de Transporte Multimodal de-Cargas\n- '27' # Nota Fiscal De Transporte Ferroviário De-Carga\n- '28' # Nota Fiscal/Conta de Fornecimento de Gás-Canalizado\n- '29' # Nota Fiscal/Conta de Fornecimento de Água-Canalizada\n- '55' # Nota Fiscal Eletrônica (NF-e)\n- '57' # Conhecimento de Transporte Eletrônico (CT-e)\n- '59' # Cupom Fiscal Eletrônico (CF-e-SAT)\n- '60' # Cupom Fiscal Eletrônico (CF-e-ECF)\n- '65' # Nota Fiscal Eletrônica ao-Consumidor Final (NFC-e)\n"
            },
            "transactionClass": {
              "type": "string",
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "currency": {
              "type": "string",
              "default": "BRL",
              "description": "currency code"
            },
            "shippingDate": {
              "type": "string",
              "description": "This string is the transaction date in ISO 8601 format, when products were shipped, can be empty or absent"
            },
            "additionalInfo": {
              "$ref": "#/definitions/AdditionalInformation"
            },
            "tpImp": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n- '3' # DANFe Simplified;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5"
              ]
            },
            "idDest": {
              "description": "This indicator inform transaction target place, when is AUTOMATIC the company address and entity address are analyzed to identify type of transaction target place\n1- same state; 2 - interstate; 3-with exterior. Exist some cases where is necessary force this situation like when buyer from another state buy something in loco, the address are from different states, but transaction no. \nIdentificador de Local de destino da operação, na opção AUTOMATIC endereços da Companhia e da entidade destino são analisados para\nsaber se é uma operação dentro do mesmo estado, interestadual ou com o exterior. Há situações onde é necessário forçar este indicador como por exemplo \nQuando uma pessoa com endereço em outro estado, compra uma mercadoria de forma presencial, é uma operação interna apesar dos endereços dos envolvidos estarem em estados distintos.\n- 0 # AUTOMATIC - DEFAULT\n- 1 # Interna;\n- 2 # Interestadual;\n- 3 # Exterior)\n",
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3
              ],
              "default": 0
            },
            "indPres": {
              "type": "string",
              "description": "Presence indicator\n- '0' # Not applicable\n- '1' # Presential;\n- '2' # Remote, internet;\n- '3' # Remote, phone;\n- '4' # NFC-e home delivery;\n- '9' # Remote, others\n",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "9"
              ]
            },
            "invoiceNumber": {
              "type": "integer",
              "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)"
            },
            "invoiceSerial": {
              "type": "integer",
              "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)\n"
            },
            "transport": {
              "description": "Shipment",
              "$ref": "#/definitions/Transport"
            },
            "payment": {
              "$ref": "#/definitions/Payment"
            },
            "purchaseInfo": {
              "$ref": "#/definitions/PurchaseInfo"
            },
            "export": {
              "$ref": "#/definitions/ExportInfo"
            }
          }
        }
      ]
    },
    "LineForGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/LineForGoodsBase"
        },
        {
          "type": "object",
          "required": [
            "itemDescription"
          ],
          "properties": {
            "avalaraGoodsAndServicesType": {
              "type": "string",
              "description": "AGAST CODE for itemCode"
            },
            "returnedPercentageAmount": {
              "type": "number",
              "format": "double",
              "description": "when is return operation this field inform the percentage of returned itens. This decimal max 3 integers and 2 decimals, v >=0.00 and v <= 100.00"
            },
            "itemDescription": {
              "type": "string",
              "description": "This string captures the description of the item represented by this line, will be used LC 116"
            },
            "legalReason": {
              "type": "object",
              "description": "Legal Reason for this tax scenario",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Internal ID"
                },
                "name": {
                  "type": "string",
                  "description": "Short name to this message"
                }
              }
            },
            "cfop": {
              "type": "integer",
              "description": "Fiscal Operation Code of transport service"
            },
            "overwrite": {
              "type": "string",
              "enum": [
                "all",
                "cfop",
                "proportional",
                "no"
              ],
              "description": "- 'all' # THE SYSTEM GET ALL INFORMATIONS PASSED IN TRANSACTION\n- 'cfop' # THE SYSTEM DISCOVRE AND REPLACE ONLY CFOP\n- 'proportional' # THE SYSTEM DISCOVER CFOP AND AND USES TAX VALUES FROM REFERENCED TRANSACTION, PROPORTINAL BY QUANTITY\n- 'no' # DEFAULT THE SYSTEM WILL CALCULATED ALL TAXES\n",
              "default": "no"
            },
            "hasStockImpact": {
              "type": "boolean",
              "description": "return if this transaction has stock impact for this process or CFOP"
            },
            "hasFinantialImpact": {
              "type": "boolean",
              "description": "return if this transaction has finantial impact for this process or CFOP"
            },
            "indTotType": {
              "type": "boolean",
              "default": true,
              "description": "The item value will compose the invoice total value."
            },
            "referencedItem": {
              "type": "object",
              "description": "order number, information used for B2B control process",
              "properties": {
                "refNFe": {
                  "type": "string",
                  "maxLength": 44,
                  "pattern": "[0-9]{44}"
                },
                "lineCode": {
                  "type": "integer",
                  "description": "This identifier for this line in the transaction"
                }
              }
            },
            "orderNumber": {
              "type": "string",
              "minLength": 1,
              "maxLength": 15,
              "description": "order number, information used for B2B control process"
            },
            "orderItemNumber": {
              "type": "string",
              "pattern": "[0-9]{1,6}",
              "description": "number of the item from order number, information used for B2B control process"
            },
            "fciNumber": {
              "type": "string",
              "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
              "description": "Gloal Unique identifier (Importation form)"
            },
            "recopiNumber": {
              "type": "string",
              "maxLength": 20,
              "pattern": "[0-9]{20}",
              "description": "RECOPI number"
            },
            "infAdProd": {
              "type": "string",
              "maxLength": 500,
              "description": "additional information about product (referenced standard, complementary info, etc)"
            },
            "vehicle": {
              "$ref": "#/definitions/Vehicle"
            },
            "medicine": {
              "$ref": "#/definitions/Medicine"
            },
            "weapon": {
              "$ref": "#/definitions/Weapon"
            },
            "fuel": {
              "$ref": "#/definitions/Fuel"
            },
            "export": {
              "description": "Exportation detail",
              "type": "array",
              "maxItems": 500,
              "items": {
                "type": "object",
                "properties": {
                  "drawbackNumber": {
                    "type": "string",
                    "maxLength": 11,
                    "pattern": "[0-9]{0,11}"
                  },
                  "indExport": {
                    "type": "object",
                    "description": "indirect exportation",
                    "required": [
                      "registerNumber",
                      "accessKey",
                      "quantity"
                    ],
                    "properties": {
                      "registerNumber": {
                        "type": "string",
                        "maxLength": 12,
                        "pattern": "[0-9]{0,12}",
                        "description": "Exportation register number"
                      },
                      "accessKey": {
                        "type": "string",
                        "maxLength": 44,
                        "pattern": "[0-9]{44}",
                        "description": "invoice access key received to export"
                      },
                      "quantity": {
                        "type": "number",
                        "format": "double",
                        "description": "This decimal 11 integers and 0 to 4 decimals, quantity exported in real"
                      }
                    }
                  }
                }
              }
            },
            "di": {
              "description": "Import declaration",
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "object",
                "required": [
                  "diNumber",
                  "registerDateDI",
                  "clearanceSite",
                  "clearanceState",
                  "transportDIType",
                  "intermediateType",
                  "adi"
                ],
                "properties": {
                  "customsValue": {
                    "type": "number",
                    "format": "double",
                    "description": "customs value, valor aduaneiro (II Block of NFe)"
                  },
                  "diNumber": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 1,
                    "description": "Import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
                  },
                  "registerDateDI": {
                    "type": "string",
                    "description": "Register date of import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
                  },
                  "clearanceSite": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 1,
                    "description": "Clerance Site\nLocal do desembaraço aduaneiro\n"
                  },
                  "clearanceState": {
                    "$ref": "#/definitions/StateEnum",
                    "description": "Clerance Site State\nEstado onde ocorrreu o desembaraço aduaneiro\n"
                  },
                  "clearanceDate": {
                    "type": "string",
                    "description": "Clerance date"
                  },
                  "transportDIType": {
                    "description": "- '1' # Maritima\n- '2' # Fluvial\n- '3' # Lacustre\n- '4' # Aerea\n- '5' # Postal\n- '6' # Ferroviaria\n- '7' # Rodoviaria\n- '8' # Conduto\n- '9' # Meios Proprios\n- '10' # Entrada/Saida Ficta\n",
                    "type": "string",
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9",
                      "10"
                    ]
                  },
                  "afrmmValue": {
                    "type": "number",
                    "format": "double",
                    "description": "Aditional amount to freight to renew merchant marine, This decimal 13 integers and 2 decimals\n[Valor Adicional ao frete para renovação de marinha mercante]\n"
                  },
                  "intermediateType": {
                    "description": "- '1' # On One's Own [1-por conta propria]\n- '2' # On Behalf And Order [2-por conta e ordem]\n- '3' # Order [3-encomenda]\n",
                    "type": "string",
                    "enum": [
                      "1",
                      "2",
                      "3"
                    ]
                  },
                  "buyerFederalTaxID": {
                    "type": "string",
                    "pattern": "[0-9]{14}",
                    "description": "Buyer federal tax id\nCNPJ do comprador ou encomendante\n"
                  },
                  "buyerState": {
                    "$ref": "#/definitions/StateEnum",
                    "description": "Buyer sate\nEstado do comprador ou encomendante\n"
                  },
                  "exporterCode": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 1,
                    "description": "Exporter code"
                  },
                  "adi": {
                    "type": "array",
                    "maxItems": 100,
                    "description": "aditional import declaration",
                    "items": {
                      "type": "object",
                      "required": [
                        "addNumber",
                        "sequentialNumber",
                        "manufacturerCode"
                      ],
                      "properties": {
                        "addNumber": {
                          "type": "integer",
                          "description": "aditional sequence number (1 to 100)"
                        },
                        "sequentialNumber": {
                          "type": "integer",
                          "description": "sequential item number for this adi, sequence number (1 to 999)"
                        },
                        "manufacturerCode": {
                          "type": "string",
                          "maxLength": 60,
                          "minLength": 1,
                          "description": "Manufatorer erp internal code"
                        },
                        "adiDiscount": {
                          "type": "number",
                          "format": "double",
                          "description": "This decimal 13 integers and 2 decimals, aditional adi discount"
                        },
                        "drawbackNumber": {
                          "type": "string",
                          "pattern": "[0-9]{0,11}",
                          "minLength": 1,
                          "description": "Drawback number"
                        }
                      }
                    }
                  }
                }
              }
            },
            "calculatedTax": {
              "type": "object",
              "properties": {
                "taxByType": {
                  "type": "object",
                  "properties": {
                    "icms": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsSt": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsStSd": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsPartOwn": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsPartDest": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDifaFCP": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDifaDest": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDifaRemet": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsRf": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsDeson": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "icmsCredsn": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "pis": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "pisSt": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "cofins": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "cofinsSt": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "ipi": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "ipiReturned": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/TaxByTypeTax"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "calcBase": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      ]
                    },
                    "ii": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "iof": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "aproxtribState": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    },
                    "aproxtribFed": {
                      "$ref": "#/definitions/TaxByTypeTax"
                    }
                  }
                },
                "tax": {
                  "type": "number",
                  "format": "double"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DetailsCalculatedTaxGoods_Item"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "Address": {
      "title": "Address",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "zipcode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "description": "Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "[0-9]{7}|0",
              "description": "City Code",
              "default": "0"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "type": "string",
              "description": "State Code",
              "pattern": "^([A-Z]{2,3})$"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$"
            },
            "number": {
              "type": "string",
              "maxLength": 60,
              "description": "House number"
            },
            "complement": {
              "type": "string",
              "maxLength": 60,
              "description": "Any other information about the address (Room, Suite, Floor, etc))."
            },
            "phone": {
              "type": "string",
              "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
              "description": "Phone number"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "zipcode",
            "cityCode",
            "state"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
              "description": "Brazilian Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "^(\\d{7})$",
              "description": "City Code (IBGE)"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "$ref": "#/definitions/StateEnum"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$",
              "default": "BRA"
            }
          }
        },
        {
          "title": "Address",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "zipcode"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "description": "Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "[0-9]{7}|0",
                  "description": "City Code",
                  "default": "0"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "type": "string",
                  "description": "State Code",
                  "pattern": "^([A-Z]{2,3})$"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$"
                },
                "number": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "House number"
                },
                "complement": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Any other information about the address (Room, Suite, Floor, etc))."
                },
                "phone": {
                  "type": "string",
                  "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
                  "description": "Phone number"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "zipcode",
                "cityCode",
                "state"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
                  "description": "Brazilian Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "^(\\d{7})$",
                  "description": "City Code (IBGE)"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "$ref": "#/definitions/StateEnum"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$",
                  "default": "BRA"
                }
              }
            }
          ]
        }
      ]
    },
    "EntityType": {
      "type": "string",
      "enum": [
        "business",
        "individual",
        "federalGovernment",
        "stateGovernment",
        "cityGovernment",
        "foreign"
      ],
      "description": "Entity Type (business, individual, federal government, state government, city government, foreign)"
    },
    "FederalTaxRegime": {
      "type": "string",
      "enum": [
        "realProfit",
        "estimatedProfit",
        "simplified",
        "simplifiedOverGrossthreshold",
        "simplifiedEntrepreneur",
        "notApplicable",
        "individual"
      ],
      "description": "- Federal tax regime\n- realProfit - REAL PROFIT LUCRO REAL\n- estimatedProfit - ESTIMATED PROFIT / LUCRO PRESUMIDO\n- simplified - SIMPLIFIED - OPTANTE TO SIMPLES\n- simplifiedOverGrossthreshold - OPTANTE DO SIMPLES COM LIMITE DE GROSS REVENUE\n- simplifiedEntrepreneur - SIMPLIFIED ENTREPRENEUR / MEI MICRO EMPREENDEDOR INDIVIDUAL \n- notApplicable - Not Applicable 1 \n- individual - INDIVIDUAL / INDIVIDUO\n"
    },
    "StateEnum": {
      "type": "string",
      "maxLength": 2,
      "enum": [
        "AC",
        "AL",
        "AP",
        "AM",
        "BA",
        "CE",
        "DF",
        "ES",
        "GO",
        "MA",
        "MT",
        "MS",
        "MG",
        "PA",
        "PB",
        "PR",
        "PE",
        "PI",
        "RJ",
        "RN",
        "RS",
        "RO",
        "RR",
        "SC",
        "SP",
        "SE",
        "TO"
      ],
      "description": "State Abreviation:\n- 'AC'\n- 'AL'\n- 'AP'\n- 'AM'\n- 'BA'\n- 'CE'\n- 'DF'\n- 'ES'\n- 'GO'\n- 'MA'\n- 'MT'\n- 'MS'\n- 'MG'\n- 'PA'\n- 'PB'\n- 'PR'\n- 'PE'\n- 'PI'\n- 'RJ'\n- 'RN'\n- 'RS'\n- 'RO'\n- 'RR'\n- 'SC'\n- 'SP'\n- 'SE'\n- 'TO'\n"
    },
    "HeaderForGoodsBase": {
      "type": "object",
      "required": [
        "eDocCreatorType",
        "companyLocation"
      ],
      "properties": {
        "participants": {
          "description": "List of transaction participants, Seller, Buyer, Carrier",
          "type": "object",
          "properties": {
            "entity": {
              "$ref": "#/definitions/EntityForGoods"
            },
            "transporter": {
              "$ref": "#/definitions/EntityForGoods"
            }
          }
        },
        "eDocCreatorType": {
          "type": "string",
          "enum": [
            "self",
            "other"
          ],
          "default": "self"
        },
        "eDocCreatorPerspective": {
          "type": "boolean",
          "default": true,
          "description": "This Flag is used only when eDocCreatorType is other and the return show Taxes using eDocCreator perspective or self perspective."
        },
        "companyLocation": {
          "type": "string",
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format, create transaction date"
        },
        "defaultLocations": {
          "$ref": "#/definitions/DefaultLocations"
        },
        "nfRef": {
          "description": "Transactions or other invoices referenced",
          "type": "array",
          "maxItems": 500,
          "items": {
            "$ref": "#/definitions/NRef"
          }
        }
      }
    },
    "EntityForGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "type": "object",
          "properties": {
            "icmsTaxPayer": {
              "type": "boolean",
              "description": "Inform if the entity is ICMS tax payer."
            }
          }
        }
      ]
    },
    "Payment": {
      "type": "object",
      "properties": {
        "installmentsTerms": {
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ],
          "description": "Installment terms\n- 0 # cash\n- 1 # on terms\n- 2 # other\n"
        },
        "bill": {
          "description": "Bill information",
          "type": "object",
          "properties": {
            "nFat": {
              "description": "Bill identifier",
              "type": "string",
              "maxLength": 60,
              "minLength": 1
            },
            "vOrig": {
              "description": "Orignal value",
              "type": "number",
              "format": "double"
            },
            "vDiscount": {
              "description": "Discount",
              "type": "number",
              "format": "double"
            },
            "vNet": {
              "description": "Net value",
              "type": "number",
              "format": "double"
            }
          }
        },
        "installment": {
          "type": "array",
          "maxItems": 120,
          "items": {
            "type": "object",
            "required": [
              "grossValue"
            ],
            "properties": {
              "documentNumber": {
                "type": "string",
                "maxLength": 60,
                "minLength": 1,
                "description": "Instalment number identifier"
              },
              "date": {
                "type": "string",
                "description": "Installment expiration date"
              },
              "grossValue": {
                "type": "number",
                "format": "double",
                "description": "Installment value"
              }
            }
          }
        },
        "paymentMode": {
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "required": [
              "mode",
              "value"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "01",
                  "02",
                  "03",
                  "04",
                  "05",
                  "10",
                  "11",
                  "12",
                  "13",
                  "99"
                ],
                "description": "Payment mode\n- '01' # Dinheiro\n- '02' # Cheque\n- '03' # Cartão de Crédito\n- '04' # Cartão de Débito\n- '05' # Crédito Loja\n- '10' # Vale Alimentação\n- '11' # Vale Refeição\n- '12' # Vale Presente\n- '13' # Vale Combustível\n- '99' # Outros\n"
              },
              "value": {
                "type": "number",
                "format": "double",
                "description": "payment value"
              },
              "cardTpIntegration": {
                "type": "string",
                "enum": [
                  "1",
                  "2"
                ],
                "description": "- '1' # Payment integrated with system,\n- '2' # Payment not integrated with system\n"
              },
              "cardCNPJ": {
                "type": "string",
                "pattern": "[0-9]{14}",
                "description": "Federal tax id of accrediting card (credenciadora do cartão)"
              },
              "cardBrand": {
                "type": "string",
                "enum": [
                  "01",
                  "02",
                  "03",
                  "04",
                  "99"
                ],
                "description": "card brand\n- '01' # Visa\n- '02' # Mastercard\n- '03' # American Express\n- '04' # Sorocred\n- '99' # Other\n"
              },
              "cardAuthorization": {
                "description": "transaction authorization number",
                "type": "string",
                "maxLength": 20,
                "minLength": 1
              }
            }
          }
        }
      }
    },
    "PurchaseInfo": {
      "type": "object",
      "properties": {
        "governmentOrder": {
          "description": "Invoice info for government purchase orders\nInformação da Nota de Empenho de compras públicas\n",
          "type": "string",
          "maxLength": 22,
          "minLength": 1
        },
        "orderNumber": {
          "description": "Order info\nInformação do pedido\n",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        },
        "contractNumber": {
          "description": "Agreement info\nInformação do contrato\n",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        }
      }
    },
    "ExportInfo": {
      "description": "Export information",
      "type": "object",
      "required": [
        "shippingState",
        "place"
      ],
      "properties": {
        "shippingState": {
          "description": "shipping state",
          "$ref": "#/definitions/StateEnum"
        },
        "place": {
          "description": "shipping place",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        },
        "placeDescription": {
          "description": "description of shipping place",
          "type": "string",
          "maxLength": 60,
          "minLength": 1
        }
      }
    },
    "Transport": {
      "required": [
        "modFreight"
      ],
      "properties": {
        "modFreight": {
          "type": "string",
          "enum": [
            "CIF",
            "FOB",
            "Thridparty",
            "FreeShipping"
          ],
          "description": "Freight model \n- 0 - CIF, \n- 1 - FOB, \n- 2 - Thrid party,\n- 9 - Free shipping\nwhen 9 - Free shipping, the fields below will be ignored if present\n- 'transporter'\n- 'withholdICMSTransport'\n- 'volumes'\n- 'vehicle'\n"
        },
        "withholdICMSTransport": {
          "type": "boolean",
          "description": "Forces witholding of ICMS on transport amount (freight)"
        },
        "volumes": {
          "type": "array",
          "maxItems": 5000,
          "description": "Packages",
          "items": {
            "type": "object",
            "properties": {
              "qVol": {
                "type": "string",
                "pattern": "[0-9]{1,15}",
                "description": "Quantity of packages transported"
              },
              "specie": {
                "type": "string",
                "minLength": 1,
                "maxLength": 60,
                "description": "package type"
              },
              "brand": {
                "type": "string",
                "minLength": 1,
                "maxLength": 60,
                "description": "brand"
              },
              "volumeNumeration": {
                "type": "string",
                "minLength": 1,
                "maxLength": 60,
                "description": "packages numeration"
              },
              "netWeight": {
                "type": "number",
                "format": "double",
                "description": "net weight using Kg"
              },
              "grossWeight": {
                "type": "number",
                "format": "double",
                "description": "gross weight using Kg"
              },
              "seal": {
                "type": "array",
                "maxItems": 5000,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "vehicle": {
          "$ref": "#/definitions/VehicleTransp"
        }
      }
    },
    "AdditionalInformation": {
      "type": "object",
      "properties": {
        "fiscalInfo": {
          "type": "string",
          "maxLength": 2000,
          "pattern": "[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}",
          "description": "Additional information of fiscal interest"
        },
        "complementaryInfo": {
          "type": "string",
          "maxLength": 5000,
          "pattern": "[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}",
          "description": "Additional information of user interest"
        },
        "procRef": {
          "description": "Referenced Process",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "properties": {
              "nProc": {
                "type": "string",
                "maxLength": 60,
                "description": "Process Identifier"
              },
              "indProc": {
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "9"
                ],
                "description": "Process Origin\n- '0' # SEFAZ;\n- '1' # Justiça Federal;\n- '2' # Justiça Estadual;\n- '3' # Secex/RFB;\n- '9' # Outros\n"
              }
            }
          }
        }
      }
    },
    "NRef": {
      "description": "Referenced Invoices\nThe invoice can be one of this types,\n- 'refNFe - Eletronic Invoice'\n- 'refCTE - Transport Invoice'\n- 'refECF - Reatail Cupom'\n- 'refNF  - Invoice model 1 or 1A'\n- 'refFarmerNF - farmer invoice'\n",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "refNFe",
            "refCTE",
            "refECF",
            "refNF",
            "refFarmerNF"
          ]
        },
        "refNFe": {
          "type": "string",
          "maxLength": 44,
          "pattern": "[0-9]{44}"
        },
        "refCTe": {
          "type": "string",
          "maxLength": 44,
          "pattern": "[0-9]{44}"
        },
        "refECF": {
          "type": "object",
          "required": [
            "nECF",
            "nCOO",
            "modECF"
          ],
          "properties": {
            "nECF": {
              "description": "ECF Sequential number that generated Cupom attached to NFe\ninformar o número de ordem seqüencial do ECF que emitiu o Cupom Fiscal vinculado à NF-e\n",
              "type": "string",
              "pattern": "[0-9]{1,3}"
            },
            "nCOO": {
              "description": "Operational counter number attached to NFe\nInformar o Número do Contador de Ordem de Operação - COO vinculado à NF-e\n",
              "type": "string",
              "pattern": "[0-9]{1,6}"
            },
            "modECF": {
              "description": "Fiscal document model\n- '2B' # coupon tax not ECF\n- '2C' # PDV coupon tax\n- '2D' # ECF coupon tax\n",
              "type": "string",
              "enum": [
                "2B",
                "2C",
                "2D"
              ]
            }
          }
        },
        "refNF": {
          "type": "object",
          "required": [
            "stateCd",
            "yymm",
            "federalTaxId",
            "serie",
            "number"
          ],
          "properties": {
            "stateCd": {
              "description": "State code of fiscal Document creator",
              "$ref": "#/definitions/StateEnum"
            },
            "yymm": {
              "description": "year and month of fiscal document creation",
              "type": "string",
              "pattern": "[0-9]{2}[0]{1}[1-9]{1}|[0-9]{2}[1]{1}[0-2]{1}"
            },
            "federalTaxId": {
              "description": "fiscal document creator federalTaxId",
              "type": "string",
              "pattern": "[0-9]{14}"
            },
            "serie": {
              "description": "fiscal document serie",
              "type": "string",
              "pattern": "0|[1-9]{1}[0-9]{0,2}"
            },
            "number": {
              "description": "fiscal document number",
              "type": "string",
              "pattern": "[1-9]{1}[0-9]{0,8}"
            }
          }
        },
        "refFarmerNF": {
          "type": "object",
          "required": [
            "stateCd",
            "yymm",
            "federalTaxId",
            "stateTaxId",
            "model",
            "serie",
            "number"
          ],
          "properties": {
            "stateCd": {
              "description": "State code of fiscal Document creator, farmer",
              "$ref": "#/definitions/StateEnum"
            },
            "yymm": {
              "description": "year and month of fiscal document creation",
              "type": "string",
              "pattern": "[0-9]{2}[0]{1}[1-9]{1}|[0-9]{2}[1]{1}[0-2]{1}"
            },
            "federalTaxId": {
              "description": "fiscal document creator farmer federalTaxId",
              "type": "string",
              "pattern": "[0-9]{14}"
            },
            "stateTaxId": {
              "description": "fiscal document creator, farmer stateTaxId",
              "type": "string"
            },
            "model": {
              "description": "Document Fiscal model\n- '04' # FARMER DOCUMENT\n- '01' # DETACHED DOCUMENT - AVULSO\n",
              "type": "string",
              "enum": [
                "04",
                "01"
              ]
            },
            "serie": {
              "description": "fiscal document serie",
              "type": "string",
              "pattern": "0|[1-9]{1}[0-9]{0,2}"
            },
            "number": {
              "description": "fiscal document number",
              "type": "string",
              "pattern": "[1-9]{1}[0-9]{0,8}"
            }
          }
        }
      }
    },
    "DefaultLocations": {
      "type": "object",
      "description": "This element contains a dictionary of locations such as the origin and destination addresses to be associated with this transaction. These locations may be overridden within each line item. The key for each location in the dictionary is the location 'purpose'. Valid locations purposes are 'ShipFrom', 'ShipTo', 'POS', 'POM', 'POO', 'BillingLocation', 'CallPlaced', 'CallReceived', 'ServiceRendered', 'POA' and 'FirstUse'. There can only be one location of a given purpose in the dictionary.",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EntityLocation"
        },
        "company": {
          "$ref": "#/definitions/EntityLocation"
        },
        "transporter": {
          "$ref": "#/definitions/EntityLocation"
        },
        "deliveryLocation": {
          "$ref": "#/definitions/EntityLocation"
        },
        "pickupLocation": {
          "$ref": "#/definitions/EntityLocation"
        }
      }
    },
    "Entity": {
      "type": "object",
      "required": [
        "type",
        "federalTaxId"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity name, official name (Razão Social)"
        },
        "role": {
          "description": "- 'transporter'\n- 'sender' # REMETENTE\n- 'dispatcher' # EXPEDITOR\n- 'receiver' # RECEIVER\n- 'addressee' # DESTINATÁRIO\n- 'other' # OUTRO\n",
          "type": "string",
          "enum": [
            "transporter",
            "sender",
            "dispatcher",
            "receiver",
            "addressee",
            "other"
          ]
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "federalTaxId": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "taxRegime": {
          "type": "string",
          "enum": [
            "realProfit",
            "estimatedProfit",
            "simplified",
            "simplifiedOverGrossthreshold",
            "simplifiedEntrepreneur",
            "notApplicable",
            "individual"
          ]
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Companies subject to follow same rules of Government entities (Instrução Normativa SRF1234)"
        },
        "subjectToPayrollTaxRelief": {
          "type": "boolean",
          "description": "Sujeito à desoneração de folha de pagamento."
        }
      }
    },
    "EntityLocation": {
      "title": "Address",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "zipcode"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "description": "Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "[0-9]{7}|0",
              "description": "City Code",
              "default": "0"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "type": "string",
              "description": "State Code",
              "pattern": "^([A-Z]{2,3})$"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$"
            },
            "number": {
              "type": "string",
              "maxLength": 60,
              "description": "House number"
            },
            "complement": {
              "type": "string",
              "maxLength": 60,
              "description": "Any other information about the address (Room, Suite, Floor, etc))."
            },
            "phone": {
              "type": "string",
              "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
              "description": "Phone number"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "zipcode",
            "cityCode",
            "state"
          ],
          "properties": {
            "street": {
              "type": "string",
              "maxLength": 60,
              "description": "Street Name"
            },
            "neighborhood": {
              "type": "string",
              "maxLength": 60,
              "description": "Neighborhood Name"
            },
            "zipcode": {
              "type": "string",
              "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
              "description": "Brazilian Zip Code"
            },
            "cityCode": {
              "type": "string",
              "pattern": "^(\\d{7})$",
              "description": "City Code (IBGE)"
            },
            "cityName": {
              "type": "string",
              "maxLength": 60,
              "description": "City Name"
            },
            "state": {
              "$ref": "#/definitions/StateEnum"
            },
            "countryCode": {
              "type": "string",
              "pattern": "[0-9]{1,4}",
              "description": "Country Code",
              "default": "0"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "pattern": "^([A-Z]{3})$",
              "default": "BRA"
            }
          }
        },
        {
          "title": "Address",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "zipcode"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "description": "Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "[0-9]{7}|0",
                  "description": "City Code",
                  "default": "0"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "type": "string",
                  "description": "State Code",
                  "pattern": "^([A-Z]{2,3})$"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$"
                },
                "number": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "House number"
                },
                "complement": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Any other information about the address (Room, Suite, Floor, etc))."
                },
                "phone": {
                  "type": "string",
                  "pattern": "^(\\d{6,14}|\\(\\d{2}\\)\\s*\\d{4,5}-*\\d{4})$",
                  "description": "Phone number"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "zipcode",
                "cityCode",
                "state"
              ],
              "properties": {
                "street": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Street Name"
                },
                "neighborhood": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Neighborhood Name"
                },
                "zipcode": {
                  "type": "string",
                  "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
                  "description": "Brazilian Zip Code"
                },
                "cityCode": {
                  "type": "string",
                  "pattern": "^(\\d{7})$",
                  "description": "City Code (IBGE)"
                },
                "cityName": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "City Name"
                },
                "state": {
                  "$ref": "#/definitions/StateEnum"
                },
                "countryCode": {
                  "type": "string",
                  "pattern": "[0-9]{1,4}",
                  "description": "Country Code",
                  "default": "0"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "pattern": "^([A-Z]{3})$",
                  "default": "BRA"
                }
              }
            }
          ]
        }
      ]
    },
    "VehicleTransp": {
      "type": "object",
      "description": "Identify type of vehicle used to transport\nthe attributes, except atribute type,  follow rule oneOf then only one of this atributes will be informed.\n",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "automobile",
            "wagon",
            "ferry",
            "trailer"
          ]
        },
        "automobile": {
          "$ref": "#/definitions/VehicleID"
        },
        "trailer": {
          "description": "Trailer",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/VehicleID"
          }
        },
        "wagon": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "ferry": {
          "description": "Ferry",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        }
      }
    },
    "VehicleID": {
      "type": "object",
      "required": [
        "licensePlate",
        "stateCode"
      ],
      "properties": {
        "licensePlate": {
          "type": "string",
          "pattern": "[A-Z]{2,3}[0-9]{4}|[A-Z]{3,4}[0-9]{3}"
        },
        "stateCode": {
          "$ref": "#/definitions/StateEnum"
        },
        "rtnc": {
          "type": "string",
          "maxLength": 20,
          "description": "Cargo Transport National Register, Registro Nacional de Transportador de Carga (ANTT)"
        }
      }
    },
    "LineForGoodsBase": {
      "type": "object",
      "required": [
        "lineCode",
        "itemCode",
        "numberOfItems",
        "lineAmount",
        "useType",
        "processScenario"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This is unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "maxLength": 60,
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states."
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal 11 integers and 1 to 4 decimals captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "This decimal 11 integers and 1 to 10 decimals captures the unit price of this line."
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "In its simplest form lineAmount = (item price * numberOfItems). If taxIncluded is 'true', lineAmount = (item price * numberOfItems + tax)."
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Discount conditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "discount unconditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "useType": {
          "type": "string",
          "enum": [
            "use or consumption",
            "resale",
            "agricultural production",
            "production",
            "use or consumption on business establishment",
            "use or consumption on transporter service establishment",
            "use or consumption on communication service establishment",
            "use or consumption on demand by contract",
            "use or consumption on energy supplier establishment",
            "use or consumption of fuel transaction type exportation",
            "use or consumption on services subject to iss",
            "use or consumption on services subject to icms",
            "fixed assets",
            "resale export",
            "resale icms exempt",
            "resale buyer under the same icmsSt tax rule",
            "transport of goods that don't need invoice (nf)"
          ],
          "description": "This is a enumeration folowing table"
        },
        "processScenario": {
          "type": "string",
          "maxLength": 60,
          "description": "Reference to process configurantion of this transaction, See ProcessScenario definition\nthis property is used only if eDocCreator=self or  eDocCreator=others and eDocCreatorPerspective=true\n"
        },
        "operationTypeReceiptMap": {
          "type": "string",
          "maxLength": 60,
          "description": "Mapping table used to discover the CFOP when execute the Tax receipt in funciotn of CFOP Received and Item Type\nthis property is used only if eDocCreator=others and eDocCreatorPerspective=false\n"
        },
        "freightAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "insuranceAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "otherCostAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "entityIsIcmsSubstitute": {
          "type": "boolean",
          "description": "Inform that for this item the Entity referenced is ICMS Substitute"
        },
        "isTransportIcmsWithheld": {
          "type": "boolean",
          "description": "Inform that this item has ICMS withheld for transport value service."
        },
        "icmsTaxRelief": {
          "type": "object",
          "required": [
            "reasonCode"
          ],
          "properties": {
            "reasonCode": {
              "type": "string",
              "enum": [
                "1",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "16"
              ],
              "description": "When item transaction subject to desoneration, this is the reason code\n- '1' # Táxi;\n- '3' # Produtor Agropecuário;\n- '4' # Frotista/Locadora;\n- '5' # Diplomático/Consular;\n- '6' # Utilitários e Motocicletas da Amazônia Ocidental e Áreas de Livre Comércio (Resolução 714/88 e 790/94 – CONTRAN e suas alterações);\n- '7' # SUFRAMA;\n- '8' # Venda a órgão Público;\n- '9' # Outros\n- '10' # Deficiente Condutor\n- '11' # Deficiente não condutor\n- '12' # Fomento agropecuário\n- '16' # Olimpíadas Rio 2016\n"
            },
            "taxBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS Tax base rate discount  (desconto na base do ICMS referetne a desoneração)"
            },
            "taxAmount": {
              "type": "number",
              "format": "double",
              "description": "Amount for Icms Relief (desoneração)"
            }
          }
        }
      }
    },
    "DetailsCalculatedTaxGoods_Item": {
      "allOf": [
        {
          "$ref": "#/definitions/DetailsCalculatedTaxGoods"
        },
        {
          "type": "object",
          "description": "Details",
          "properties": {
            "source": {
              "$ref": "#/definitions/CSTTableAEnum"
            },
            "cstB": {
              "$ref": "#/definitions/CSTTableBEnum"
            },
            "cst": {
              "type": "string"
            },
            "modBC": {
              "type": "string"
            },
            "pMVA": {
              "type": "number",
              "format": "double",
              "description": "Percent of Value-added margin (%)"
            },
            "pRedBC": {
              "type": "number",
              "format": "double",
              "description": "calc base percent of discount"
            },
            "pBCOp": {
              "type": "number",
              "format": "double",
              "description": "percent of calc base of own icms"
            },
            "ufst": {
              "$ref": "#/definitions/StateEnum"
            },
            "calcMode": {
              "$ref": "#/definitions/CalcModelEnum"
            },
            "legalTaxClass": {
              "type": "integer",
              "description": "Legal tax classificação for IPI (enquadramento tributário)"
            },
            "legalTaxClassDC": {
              "type": "integer",
              "description": "Legal tax classificação for IPI (enquadramento) for Drinks and Cigarettes"
            },
            "cnpjProd": {
              "type": "string",
              "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
              "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'\nFederal tax ID of real manufacturer, nly for exportation\n"
            },
            "sealCode": {
              "type": "string",
              "maxLength": 60,
              "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
            },
            "sealQuantity": {
              "type": "string",
              "pattern": "[0-9]{1,12}",
              "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
            },
            "icmsInterPartRate": {
              "type": "number",
              "format": "double",
              "description": "percent of icms apportionment between two states"
            },
            "icmsSesonReason": {
              "$ref": "#/definitions/ICMSSesonReason"
            },
            "perQuantityReturned": {
              "type": "number",
              "format": "double",
              "description": "percent of merchandise returned"
            }
          }
        }
      ]
    },
    "TaxByTypeTax": {
      "type": "object",
      "required": [
        "tax"
      ],
      "properties": {
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Tax value, negative value for withhold value"
        }
      }
    },
    "Vehicle": {
      "type": "object",
      "required": [
        "tpOp",
        "chassisNumber",
        "colorCode",
        "colorName",
        "cvPower",
        "cylinderVolumCC",
        "netWeight",
        "grossWeight",
        "serialNumber",
        "fuelType",
        "engineNumber",
        "cmt",
        "lengthBetweenAxis",
        "modelYear",
        "manufactoryYear",
        "paintType",
        "vehicleRENAVAMType",
        "specieRENAVAMType",
        "modelRENAVAMCode",
        "colorDENATRANCode",
        "vin",
        "vehicleManufactoryStatus",
        "maxOccupantsQuantity",
        "restrictionType"
      ],
      "properties": {
        "tpOp": {
          "description": "- 1 # Sales by car dealership\n- 2 # Direct billing\n- 3 # Direct sales\n- 0 # Other\n",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            0
          ]
        },
        "chassisNumber": {
          "type": "string",
          "maxLength": 17,
          "pattern": "[A-Z0-9]+"
        },
        "colorCode": {
          "type": "string",
          "maxLength": 17,
          "description": "color code used by factory"
        },
        "colorName": {
          "type": "string",
          "maxLength": 40,
          "description": "color name"
        },
        "cvPower": {
          "type": "string",
          "maxLength": 4,
          "description": "Power using CV unid"
        },
        "cylinderVolumCC": {
          "type": "string",
          "maxLength": 4,
          "description": "engine size in cubic centimeters"
        },
        "netWeight": {
          "type": "string",
          "maxLength": 9,
          "description": "net weight"
        },
        "grossWeight": {
          "type": "string",
          "maxLength": 9,
          "description": "gross weight"
        },
        "serialNumber": {
          "type": "string",
          "maxLength": 9,
          "description": "serie"
        },
        "fuelType": {
          "description": "- '01' # Alcohol\n- '02' # Gas\n- '03' # Diesel\n- '16' # Alcohol/Gas\n- '17' # Gas/Alcohol/GNV\n- '18' # Gas/Electric\n",
          "type": "string",
          "enum": [
            "01",
            "02",
            "03",
            "16",
            "17",
            "18"
          ]
        },
        "engineNumber": {
          "type": "string",
          "maxLength": 21,
          "description": "engine number"
        },
        "cmt": {
          "type": "string",
          "maxLength": 9,
          "description": "traction capacity, tonne"
        },
        "lengthBetweenAxis": {
          "type": "string",
          "maxLength": 4,
          "description": "length between axis"
        },
        "modelYear": {
          "type": "string",
          "pattern": "[0-9]{4}",
          "description": "model year"
        },
        "manufactoryYear": {
          "type": "string",
          "pattern": "[0-9]{4}",
          "description": "year of factory"
        },
        "paintType": {
          "type": "string",
          "maxLength": 1,
          "description": "paynt type"
        },
        "vehicleRENAVAMType": {
          "type": "string",
          "pattern": "[0-9]{1,2}"
        },
        "specieRENAVAMType": {
          "type": "string",
          "pattern": "[0-9]{1}"
        },
        "modelRENAVAMCode": {
          "type": "string",
          "pattern": "[0-9]{1,6}"
        },
        "colorDENATRANCode": {
          "description": "- '01' # YELLOW\n- '02' # BLUE\n- '03' # BEIGE\n- '04' # WHITE\n- '05' # GRAY\n- '06' # GOLDEN\n- '07' # GRENA\n- '08' # ORANGE\n- '09' # BROWN\n- '10' # SILVER\n- '11' # BLACK\n- '12' # PINK\n- '13' # PURPLE\n- '14' # GREEN\n- '15' # RED\n- '16' # FANTASY\n",
          "type": "string",
          "pattern": "[0-9]{1,2}",
          "enum": [
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16"
          ]
        },
        "vin": {
          "type": "string",
          "enum": [
            "R",
            "N"
          ],
          "description": "chassis condition original or modified (remarcado)"
        },
        "vehicleManufactoryStatus": {
          "description": "- '1' # Finished(Done)\n- '2' # Not finished\n- '3' # Semi-finished\n",
          "type": "string",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "maxOccupantsQuantity": {
          "type": "string",
          "maxLength": 3,
          "pattern": "[0-9]{1,3}",
          "description": "max number of sit occupants"
        },
        "restrictionType": {
          "description": "Lien/restriction type\n- '0' # No one;\n- '1' # Alienação Fiduciária;\n- '2' # Arrendamento Mercantil;\n- '3' # Reserva de Domínio;\n- '4' # Penhor de Veículos;\n- '9' # Other.\n",
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "9"
          ]
        }
      }
    },
    "Medicine": {
      "type": "object",
      "required": [
        "loteNumber",
        "loteQuantity",
        "manufactotyDate",
        "expirationDate",
        "maxValueToEndUser"
      ],
      "properties": {
        "loteNumber": {
          "type": "string",
          "maxLength": 20
        },
        "loteQuantity": {
          "type": "number",
          "format": "double",
          "description": "This is a decimal type with 11 digits including 3 decimal positions."
        },
        "manufactotyDate": {
          "type": "string"
        },
        "expirationDate": {
          "type": "string"
        },
        "maxValueToEndUser": {
          "type": "number",
          "format": "double",
          "description": "This is a decimal type with 15 digits including 2 decimal positions.  Max value to end user."
        }
      }
    },
    "Weapon": {
      "type": "object",
      "required": [
        "weaponRestrictionType",
        "serieNumber",
        "gunBarrelSerieNumber",
        "weaponDescription"
      ],
      "properties": {
        "weaponRestrictionType": {
          "description": "- '0' # restrict use\n- '1' # public use\n",
          "type": "string",
          "enum": [
            "0",
            "1"
          ]
        },
        "serieNumber": {
          "type": "string",
          "maxLength": 15
        },
        "gunBarrelSerieNumber": {
          "type": "string",
          "maxLength": 15,
          "description": "Barrel's serial number.\nNúmero de série do cano\n"
        },
        "weaponDescription": {
          "type": "string",
          "maxLength": 256,
          "description": "weapon description"
        }
      }
    },
    "Fuel": {
      "type": "object",
      "required": [
        "prodANPCode",
        "stateCodeOfUndUser"
      ],
      "properties": {
        "prodANPCode": {
          "type": "string",
          "pattern": "[0-9]{9}"
        },
        "perMixGN": {
          "type": "number",
          "format": "double",
          "description": "percentage of natural gas (GLP)"
        },
        "authorizationCodeCODIF": {
          "type": "string",
          "pattern": "[0-9]{1,21}"
        },
        "quantityOnRoomTemperature": {
          "type": "number",
          "format": "double",
          "description": "This decimal 12 integers and 0 to 4 decimals\nQuantidade de combustível faturada à temperatura ambiente.\nInformar quando a quantidade faturada informada no campo qCom (I10) tiver sido ajustada para\numa temperatura diferente da ambiente.\n"
        },
        "stateCodeOfUndUser": {
          "$ref": "#/definitions/StateEnum",
          "description": "state where fuel was used"
        },
        "cide": {
          "type": "object",
          "required": [
            "baseCalcCIDE",
            "rateCIDE",
            "valueCIDE"
          ],
          "properties": {
            "baseCalcCIDE": {
              "type": "number",
              "format": "double",
              "description": "percentage of natural gas (GLP), this decimal 12 integers and 0 to 4 decimals"
            },
            "rateCIDE": {
              "type": "number",
              "format": "double",
              "description": "percentage of natural gas (GLP), this decimal 11 integers and 0 to 4 decimals - R$"
            },
            "valueCIDE": {
              "type": "number",
              "format": "double",
              "description": "percentage of natural gas (GLP), this decimal 13 integers and 2 decimals - R$"
            }
          }
        },
        "pumpNumber": {
          "type": "object",
          "required": [
            "nozzleNumberFuelSupply",
            "fuelPumpNumber",
            "fuelTankNumber",
            "startValueOfPumpNumber",
            "endValueOfPumpNumber"
          ],
          "properties": {
            "nozzleNumberFuelSupply": {
              "type": "string",
              "pattern": "[0-9]{1,3}",
              "description": "Identification number of nozzle used in the dispensing process.  \nNumero de identificação do Bico utilizado no abastecimento\n"
            },
            "fuelPumpNumber": {
              "type": "string",
              "pattern": "[0-9]{1,3}",
              "description": "Identification number of the Pump connect to the used nozzle.  \nNumero de identificação da bomba ao qual o bico está interligado\n"
            },
            "fuelTankNumber": {
              "type": "string",
              "pattern": "[0-9]{1,3}",
              "description": "Identification number of the Pump connect to the used nozzle.  \nNumero de identificação da bomba ao qual o bico está interligado\n"
            },
            "startValueOfPumpNumber": {
              "type": "number",
              "format": "double",
              "description": "Valor do Encerrante no ínicio do abastecimento. \nReading of auto-counter (encerrante) at the start of the refueling/dispensing.\nThis decimal 12 integers and 3 decimals - R$\n"
            },
            "endValueOfPumpNumber": {
              "type": "number",
              "format": "double",
              "description": "Valor do Encerrante no final do abastecimento. \nReading of auto-counter (encerrante) at the end of the refueling/dispensing.\nThis decimal 12 integers and 3 decimals - R$\n"
            }
          }
        }
      }
    },
    "DetailsCalculatedTaxGoods": {
      "type": "object",
      "properties": {
        "locationType": {
          "type": "string",
          "description": "This string captures the applicable location type. Location used for calc. Buyer or Seller"
        },
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n",
          "default": "Country"
        },
        "taxImpact": {
          "$ref": "#/definitions/DetailsCalculatedTaxImpact"
        },
        "taxType": {
          "type": "string",
          "enum": [
            "icms",
            "icmsSt",
            "icmsStSd",
            "icmsPartOwn",
            "icmsPartDest",
            "icmsDifaFCP",
            "icmsDifaDest",
            "icmsDifaRemet",
            "icmsRf",
            "icmsDeson",
            "icmsCredsn",
            "pis",
            "pisSt",
            "cofins",
            "cofinsSt",
            "ipi",
            "ipiReturned",
            "ii",
            "iof",
            "aproxtribCity",
            "aproxtribState",
            "aproxtribFed",
            "aproxtrib"
          ],
          "description": "Tax identificator"
        },
        "rateType": {
          "type": "string",
          "description": "Name of configuration rate"
        },
        "scenario": {
          "type": "string",
          "description": "This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in."
        },
        "subtotalTaxable": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "legalReason": {
          "type": "object",
          "description": "Legal Reason for this tax scenario",
          "properties": {
            "id": {
              "type": "string",
              "description": "Internal ID"
            },
            "name": {
              "type": "string",
              "description": "Short name to this message"
            }
          }
        },
        "significantLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This element captures the list of locations that contributed to the tax determination. for Service is Buyer and Seller Address"
        },
        "taxRuleType": {
          "type": "string",
          "enum": [
            "SELLER",
            "BUYER",
            "TRANSACTION",
            "ITEM",
            "TAX"
          ],
          "description": "This string with type of rule"
        }
      }
    },
    "CalcModelEnum": {
      "type": "string",
      "enum": [
        "rate",
        "quantity"
      ]
    },
    "CSTPistCofinsEnum": {
      "type": "string",
      "enum": [
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "49",
        "50",
        "51",
        "52",
        "53",
        "54",
        "55",
        "56",
        "60",
        "61",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "70",
        "71",
        "72",
        "73",
        "74",
        "75",
        "98",
        "99"
      ],
      "description": "Use to determined how the tax is applicable and calculated. It may define and exemption, a tax base reduction, identify that a special rate is applicable (not the rate itself).\n- '01' # Operação Tributável com Alíquota Básica\n- '02' # Operação Tributável com Alíquota Diferenciada\n- '03' # Operação Tributável com Alíquota por Unidade de Medida de Produto\n- '04' # Operação Tributável Monofásica - 'Revenda a Alíquota Zero\n- '05' # Operação Tributável por Substituição Tributária\n- '06' # Operação Tributável a Alíquota Zero\n- '07' # Operação Isenta da Contribuição\n- '08' # Operação sem Incidência da Contribuição\n- '09' # Operação com Suspensão da Contribuição\n- '49' # Outras Operações de Saída\n- '50' # Operação com Direito a Crédito - 'Vinculada Exclusivamente a Receita Tributada no Mercado Interno\n- '51' # Operação com Direito a Crédito – Vinculada Exclusivamente a Receita Não Tributada no Mercado Interno\n- '52' # Operação com Direito a Crédito - 'Vinculada Exclusivamente a Receita de Exportação\n- '53' # Operação com Direito a Crédito - 'Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno\n- '54' # Operação com Direito a Crédito - 'Vinculada a Receitas Tributadas no Mercado Interno e de Exportação\n- '55' # Operação com Direito a Crédito - 'Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação\n- '56' # Operação com Direito a Crédito - 'Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação\n- '60' # Crédito Presumido - 'Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno\n- '61' # Crédito Presumido - 'Operação de Aquisição Vinculada Exclusivamente a Receita Não-Tributada no Mercado Interno\n- '62' # Crédito Presumido - 'Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação\n- '63' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno\n- '64' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação\n- '65' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação\n- '66' # Crédito Presumido - 'Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação\n- '67' # Crédito Presumido - 'Outras Operações\n- '70' # Operação de Aquisição sem Direito a Crédito\n- '71' # Operação de Aquisição com Isenção\n- '72' # Operação de Aquisição com Suspensão\n- '73' # Operação de Aquisição a Alíquota Zero\n- '74' # Operação de Aquisição sem Incidência da Contribuição\n- '75' # Operação de Aquisição por Substituição Tributária\n- '98' # Outras Operações de Entrada\n- '99' # Outras Operações\n"
    },
    "CSTTableAEnum": {
      "type": "string",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ],
      "description": "Source of product or merchandise,\n- '0' # National goods - 'except those treated in codes 3,4, 5 and 8\n- '1' # Imported directly by seller, except those in code 6\n- '2' # Foreign goods - 'Acquired in the internal market (inside Brazil), except those in code 7\n- '3' # Merchandise or goods with imported content above 40% and with less than or equal to 70%\n- '4' # National goods from production following 'standard basic processes' as stablished by legislation (standard basic processes are devised to separate simple assembly from manufaturing processes)\n- '5' # National goods - 'Merchandise or goods with imported content equal or below 40%\n- '6' # Foreign goods - 'Directly imported by Seller, without a National Equivalent as listed by Comex and natural gas\n- '7' # Foreign goods - 'Acquired inside Brazil, without a National Equivalent  as listed by Comex and natural gas\n- '8' # Merchandise or goods with imported content above 70%\n"
    },
    "CSTTableBEnum": {
      "type": "string",
      "enum": [
        "00",
        "10",
        "20",
        "30",
        "40",
        "41",
        "50",
        "51",
        "60",
        "70",
        "90"
      ],
      "description": "Use to determined how the tax is applicable and calculated. It may define and exemption, a tax base reduction, identify that a special rate is applicable (not the rate itself).\n- '00' # Taxed in its totality\n- '10' # Taxed and subject to tax substitution (ICMS ST)\n- '20' # Taxed with Tax Base Reduction\n- '30' # Exempt /Not Taxed and subject to tax Substitution (ICMS#ST)\n- '40' # Tax Exempt\n- '41' # Not Taxed\n- '50' # Taxes Suspended\n- '51' # Taxes Diferred\n- '60' # ICMS Tax already collected through Substituition (ICMS ST)\n- '70' # Taxed with Tax Base Reduction and subject to Tax Subsititution (ICMS ST)\n- '90' # Others\n"
    },
    "DetailsCalculatedTaxImpact": {
      "type": "object",
      "properties": {
        "impactOnFinalPrice": {
          "$ref": "#/definitions/DetailsTaxImpactEnum"
        },
        "impactOnNetAmount": {
          "$ref": "#/definitions/DetailsTaxImpactEnum"
        },
        "accounting": {
          "$ref": "#/definitions/DetailsTaxAccountingEnum"
        }
      }
    },
    "ICMSSesonReason": {
      "description": "- '0' # NO ICMS TAX RELIEF\n- '1' # TAXI\n- '3' # AGRICULTURAL PRODUCTION\n- '4' # FLEET OWNERS\n- '5' # DIPLOMATIC MISSIONS\n- '6' # VEHICLE AND MOTORCICLE OF FREE ZONE AREA AND OCIDENTAL AMAZON\n- '7' # SUFRAMA\n- '8' # SALES TO GOVERNMENT\n- '9' # OTHERS\n- '10' # DISABLED PERSON DRIVER\n- '11' # DISABLED PERSON NOT DRIVER\n",
      "type": "string",
      "enum": [
        "0",
        "1",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "DetailsTaxImpactEnum": {
      "type": "string",
      "enum": [
        "Add",
        "Included",
        "Subtracted",
        "Informative"
      ]
    },
    "DetailsTaxAccountingEnum": {
      "type": "string",
      "description": "Escrituração",
      "enum": [
        "liability",
        "asset",
        "none"
      ]
    },
    "AccountCompany": {
      "type": "object",
      "required": [
        "companyId",
        "companyCode"
      ],
      "properties": {
        "companyId": {
          "type": "string",
          "format": "uuid"
        },
        "companyCode": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        }
      }
    },
    "Company": {
      "type": "object",
      "required": [
        "code",
        "officialName",
        "name",
        "entityType",
        "federalTaxRegime"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60,
          "description": "string is a code maintained by the client application to uniquely identify the company for which this transaction is being recorded. It is unique within the context of an Account. It will be limited to 60 characters when creating a Company"
        },
        "officialName": {
          "type": "string",
          "maxLength": 150,
          "description": "Official Company name (Razão Social)"
        },
        "name": {
          "type": "string",
          "maxLength": 150,
          "description": "Company name (DBA - Nome de Fantasia),  Used to identify branches/subsidiaries with same name"
        },
        "entityType": {
          "$ref": "#/definitions/EntityType"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Company has participation of state-owned capital (it will be considerated like a government entity)"
        },
        "federalTaxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "pisSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "cofinsSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "csllSubjectTo": {
          "type": "string",
          "enum": [
            "TAXABLE",
            "NOT TAXABLE",
            "EXEMPT"
          ],
          "description": "this flag informs if this company is subject to this tax\nthe default value for this property is TAXABLE,\nwhen set to TAXABLE it doesn't mean that all transaction will be TAXABLE. The system will analise other rules to identify exemptions/exceptions\nwhen set to NOT TAXABLE or EXEMPT, the system will not analise other rules.\n"
        },
        "receiptsAreFullNoCumulativePisCofins": {
          "type": "boolean",
          "description": "When th company is REAL PROFIT usually it operates under a Non-Cumulative PIS/COFINS regime\nBut exist some services that are always Cumulative regime.\nIf the company has all receipts from Non-Cumulative services this flag will be set to True.\nThis flag informs special conditions to credit of PIS/COFINS when this company is out of Free zone and  purchases from Free Zone Company\nQuando uma empresa fora da Zona Franca adquire uma produto ou serviço de uma empresa situada na Zona Franca de Manaus, o crédito de PIS E COFINS segue estas aliquotas diferenciadas.\nFundamentação, art. 5º da Instrução Normativa SRF nº 546/2005; art. 3º, § 12 da Lei nº 10.637/2002; art. 3º, § 17 da Lei nº 10.833/2003; art. 4º da Lei nº 11.307/2006.\nDESTINATÁRIO ALÍQUOTAS.\nPIS COFINS\na) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure a Contribuição para o PIS/PASEP no regime de não-cumulatividade débito 0,65% 3% crédito 1% 4,6%\nc) Venda efetuada a pessoa jurídica estabelecida fora da Zona Franca de Manaus, que apure o imposto de renda com base no lucro real e que tenha sua receita, total ou parcialmente, excluída do regime de incidência não-cumulativa da Contribuição para o PIS/PASEP débito 1,3% 6% crédito 1,65% 7,6%\n"
        },
        "inssWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withholding INSS this Flag can be set to True"
        },
        "issWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, to force withhold ISS this Flag can be set to True"
        },
        "irrfWithholdSubjectTo": {
          "type": "boolean",
          "description": "On purchase transaction, if this flag is FALSE, the system will not withhold IRRF.\nif this flag is TRUE the system will analise other rules to define if will have witholding\n"
        },
        "icmsRateForSimplestaxregime": {
          "type": "number",
          "format": "double",
          "description": "Actual ICMS Rate for this company (if the company is Tax Regime Simplified).\nAliquota de ICMS da companhia caso Optante do Simples\n"
        },
        "isExemptByGrossRevenueForSimplestaxregime": {
          "type": "boolean",
          "description": "ICMS Exempt when Tax Regime is Simplified because total gross revenue is bellow amount defined by state (see PARANÁ State)\nIsenção do ICMS no Simples Nacional para faixa de receita bruta\n"
        },
        "subjectToPayrollTaxRelief": {
          "type": "boolean",
          "description": "Sujeito à desoneração de folha de pagamento."
        },
        "configuration": {
          "type": "object",
          "properties": {
            "certificate": {
              "type": "string",
              "description": "digital certificate A1 model, p12, encoded by base64"
            },
            "certificatepwd": {
              "type": "string",
              "description": "certificate password"
            },
            "certificateexpiration": {
              "type": "string",
              "description": "expiration date of this certificate"
            },
            "logo": {
              "type": "string",
              "description": "company logo image encoded by base64"
            },
            "tpImpNFe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "tpImpNFCe": {
              "type": "string",
              "description": "how the document will be printed\n- '0' # without DANFE;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
              "enum": [
                "0",
                "4",
                "5"
              ]
            }
          }
        },
        "mailServer": {
          "type": "object",
          "properties": {
            "user": {
              "type": "string",
              "description": "User for login on email server"
            },
            "password": {
              "type": "string",
              "description": "Password to login on email server"
            },
            "smtpAddress": {
              "type": "string",
              "description": "smtp address to email server"
            },
            "port": {
              "type": "integer",
              "description": "port"
            },
            "emailFrom": {
              "type": "string",
              "description": "email address to identify the sender e-mail, to send a XML and DANFE"
            },
            "protocol": {
              "type": "string",
              "enum": [
                "ssl",
                "tls"
              ],
              "description": "protocol SSL or TLS"
            },
            "templatemessageToEmail": {
              "type": "string",
              "description": "Message to add to email body"
            }
          }
        },
        "authorizedToDownloadNFe": {
          "description": "Person or company authorized to downloadNFe",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "federalTaxId": {
                "type": "string",
                "pattern": "[0-9]{11,14}",
                "description": "Federal tax id, CNPJ or CPF"
              }
            }
          }
        }
      }
    },
    "AgastGoods": {
      "title": "Service Agast Specialization",
      "allOf": [
        {
          "$ref": "#/definitions/Agast"
        },
        {
          "type": "object",
          "properties": {
            "ex": {
              "type": "integer",
              "description": "hsCode Exception for IPI tax"
            },
            "cest": {
              "type": "string",
              "pattern": "[0-9]{7}",
              "description": "tax substitution code - Codigo especificador da Substuicao Tributaria"
            },
            "cean": {
              "type": "string",
              "pattern": "[0-9]{0}|[0-9]{8}|[0-9]{12,14}",
              "description": "GTIN NUMBER"
            },
            "cstIPI": {
              "type": "string",
              "description": "Inform if this process is subject to IPI taxation on output process\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'N'  # NO TAXABLE\n- 'I'  # IMMUNE\n",
              "enum": [
                "T",
                "Z",
                "E",
                "N",
                "I"
              ]
            },
            "ipiLegalTaxClass": {
              "type": "string",
              "description": "Legal tax classificação for IPI (enquadramento tributário)\nWhen the process has CST IPI 52 or 54, it is mandatory to inform a Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU=\n"
            },
            "ipiLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the IPI legal reason, this message will be placed on invoice."
            },
            "specialProductClass": {
              "type": "string",
              "enum": [
                "OTHERS",
                "COMMUNICATION",
                "ENERGY",
                "TRANSPORT",
                "FUEL AND LUBRICANT",
                "VEHICLE",
                "ALCOHOLIC BEVERAGES",
                "WEAPONS",
                "AMMO",
                "PERFUME",
                "TOBACCO"
              ]
            },
            "icmsConf": {
              "type": "array",
              "description": "One per State",
              "items": {
                "$ref": "#/definitions/AgastGoods_IcmsConf"
              }
            }
          }
        },
        {
          "title": "Service Agast Specialization"
        }
      ]
    },
    "AgastService": {
      "title": "Service Agast Specialization",
      "allOf": [
        {
          "$ref": "#/definitions/Agast"
        },
        {
          "type": "object",
          "title": "Service Agast Specialization",
          "properties": {
            "pisCofinsTaxReporting": {
              "type": "string",
              "enum": [
                "cumulative",
                "noCumulative"
              ],
              "description": "when the company is Real Profit inform if this item is cumulative or no cumulative by default"
            },
            "accruableCSLLTaxation": {
              "type": "string",
              "description": "Inform if this item by nature is subject to CSLL taxation or exempt\n- 'T' # TAXABLE\n- 'E' # EXEMPT\n",
              "enum": [
                "T",
                "E"
              ]
            },
            "csllExemptLegalReason": {
              "type": "string",
              "maxLength": 1024
            },
            "csllExemptLegalReasonCode": {
              "type": "string"
            },
            "withholding": {
              "$ref": "#/definitions/AgastService_Withhold"
            },
            "issDueatDestination": {
              "type": "boolean",
              "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
            }
          }
        },
        {
          "title": "Service Agast Specialization"
        }
      ]
    },
    "AgastServiceOperations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgastServiceOperations_Item"
      }
    },
    "AgastServiceOperations_Item": {
      "type": "object",
      "properties": {
        "serviceCode": {
          "type": "string",
          "description": "Service Code in City"
        },
        "cityCode": {
          "type": "integer",
          "format": "int64",
          "description": "City Code (IBGE)"
        },
        "agastCode": {
          "type": "string",
          "description": "AGAST Code"
        },
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "description": {
          "type": "string",
          "description": "Service description"
        },
        "issWhOriginUnregSeller": {
          "type": "boolean"
        },
        "issDueatDestination": {
          "type": "boolean",
          "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
        },
        "subjectPayrollTaxRelief": {
          "type": "boolean",
          "description": "Item subjecto to Payroll Tax Relief\nItem sujeto à desoneraçãode folha de pagamento\n"
        },
        "subjectToINSS": {
          "type": "boolean",
          "description": "Item subjecto to INSS\nItem sujeto à INSS\n"
        },
        "customCompany": {
          "type": "boolean",
          "description": "Custom AGAST"
        }
      }
    },
    "Agast": {
      "type": "object",
      "required": [
        "code",
        "codeType"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Agast Code. AGAST (Avalara Goods and Services Types) are preset products with default tax definitions available to be used as provided or copied to create an specific comapany item."
        },
        "description": {
          "type": "string",
          "maxLength": 200,
          "description": "Agast Description"
        },
        "lifeTimeStart": {
          "type": "string",
          "description": "date when this configuration values starts"
        },
        "lifeTimeEnd": {
          "type": "string",
          "description": "date when this configuration values expire"
        },
        "inactive": {
          "type": "boolean",
          "description": "set this configuration to Inactive"
        },
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "codeType": {
          "type": "string",
          "enum": [
            "NCM",
            "NBS",
            "LC116",
            "SERVICE UNREGULATED"
          ]
        },
        "accruablePISTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to PIS taxation or exempt\n- 'T' # TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'N' # NO TAXABLE\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N"
          ]
        },
        "pisExemptLegalReasonCode": {
          "type": "string",
          "description": "When exempt, taxable with zero rate, suspended, not taxable, this field informs the official code number for the exemption"
        },
        "pisExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specified a reason, this field holds the reason's description"
        },
        "accruableCOFINSTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to COFINS taxation or exempt\n- 'T' # TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'N' # NO TAXABLE\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N"
          ]
        },
        "cofinsExemptLegalReasonCode": {
          "type": "string",
          "description": "When exempt, taxable with zero rate, suspended, not taxable, this field informs the official code number for the exemption"
        },
        "cofinsExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specified a reason, this field holds the reason's description"
        },
        "pisCofinsCreditNotAllowed": {
          "type": "boolean",
          "description": "on Real Profit Purchase transaction, inform if this item allows tax credits when it is non-cumulative"
        },
        "federalTaxRate": {
          "type": "array",
          "description": "This is an array of tax object related to an agast.",
          "items": {
            "$ref": "#/definitions/TaxTypeRate"
          }
        },
        "notes": {
          "type": "string",
          "description": "Free-form text for optionally adding any comment on this."
        },
        "taxAdviserCode": {
          "type": "string",
          "description": "This adds a purely informational information about the source of TaxAdviser imported data."
        }
      }
    },
    "AgastGoods_IcmsConf": {
      "type": "object",
      "description": "See definitions IcmsConfByState",
      "properties": {
        "code": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        }
      }
    },
    "TaxTypeRate": {
      "type": "object",
      "required": [
        "taxType",
        "taxModel"
      ],
      "properties": {
        "taxType": {
          "$ref": "#/definitions/TaxType"
        },
        "taxModel": {
          "type": "string",
          "enum": [
            "rate",
            "srf"
          ],
          "description": "Tax can be calculated by rate or by quantity"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "Specific tax rate ex 3.5 (3.5%)"
        },
        "srvAmount": {
          "type": "number",
          "format": "double",
          "description": "Specific tax rate ex 3.5 (3.5%)"
        },
        "quantityUnidBase": {
          "type": "string",
          "maxLength": 6
        },
        "specializationType": {
          "type": "string",
          "enum": [
            "basic",
            "monophase",
            "taxSubstitution"
          ]
        }
      }
    },
    "TaxType": {
      "type": "string",
      "description": "Tax Rate\nObs: AR - \"a recolher\" (serviço).\nRP e PP - filtrado para alvos de lucro real ou lucro presumido (serviço)\n",
      "enum": [
        "INSS",
        "INSS_RF",
        "INSS_AR",
        "IRRF",
        "IRRF_GOVERNMENT",
        "PIS",
        "PIS_RF",
        "PIS_RP",
        "PIS_PP",
        "COFINS",
        "COFINS_RF",
        "COFINS_RP",
        "COFINS_PP",
        "CSLL",
        "CSLL_RF",
        "CSLL_PP",
        "CSLL_RP",
        "IRPJ",
        "ISS",
        "ISS_RF",
        "IPI"
      ]
    },
    "LegalReason": {
      "type": "object",
      "required": [
        "name",
        "description",
        "scope"
      ],
      "description": "Legal Reason (Fundamentação Legal):\n- 'name'\n- 'description'\n- 'scope'\n",
      "properties": {
        "id": {
          "type": "string",
          "description": "Internal ID"
        },
        "referenceCode": {
          "type": "string",
          "description": "A custom, non-unique, non-mandatory reference code that might be used to reference\na company Reason record to a global Reason record.\n"
        },
        "companyId": {
          "type": "string",
          "description": "If present, this record is scoped to the company."
        },
        "scope": {
          "type": "string",
          "description": "Message scope. May be one of these.\ngeneral - This message is not linked to any entity (agast/process/cfop) and will be applied to any item in a transacition. (Esta mensagem tem escopo geral, nao está relacionadas diretamente qualquer objeto.);\nlinkedTo - This message is linked to an entity, and its processing will only occur when the context involves it. (Esta mensagens estão relacionadas diretamente a algum objeto como um AGAST por exemplo, um Processo ou uma CFOP.);\n",
          "enum": [
            "general",
            "linkedTo"
          ]
        },
        "disable": {
          "type": "boolean",
          "description": "Set this message as no longer valid"
        },
        "description": {
          "type": "string",
          "maxLength": 5000,
          "description": "Legal reason textual description;"
        },
        "name": {
          "type": "string",
          "description": "Short name to this message"
        },
        "showInInvoice": {
          "type": "string",
          "description": "Optional. Show this message when used in Invoice (NFe, NFCe, others...). Where to show this.",
          "enum": [
            "complementaryInfoMessage",
            "fiscalInfoMessage",
            "itemInfoMessage",
            "no show"
          ]
        },
        "referencedProcesses": {
          "description": "Referenced Process",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "properties": {
              "nProc": {
                "type": "string",
                "maxLength": 60,
                "description": "Process Identifier (NFe <nProc> tag)"
              },
              "indProc": {
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "9"
                ],
                "description": "Process Origin (NFe <indProc> tag)\n- '0' # SEFAZ;\n- '1' # Justiça Federal;\n- '2' # Justiça Estadual;\n- '3' # Secex/RFB;\n- '9' # Outros\n"
              }
            }
          }
        },
        "taxConstraint": {
          "description": "Filter this message application to specified tax cases.\n",
          "properties": {
            "taxType": {
              "type": "string",
              "enum": [
                "NONE",
                "INSS",
                "IRRF",
                "IRPJ",
                "PIS",
                "COFINS",
                "CSLL",
                "IPI",
                "ICMS",
                "II",
                "IOF",
                "ISS",
                "APROXTOTALTAX"
              ],
              "description": "This is the Tax Type to apply legal messages.\n- 'NONE'\n- 'INSS'\n- 'IRRF'\n- 'IRPJ'\n- 'PIS'\n- 'COFINS'\n- 'CSLL'\n- 'IPI'\n- 'ICMS'\n- 'II'\n- 'IOF'\n- 'ISS'\n- 'APROXTOTALTAX'\n"
            },
            "specializedTaxType": {
              "type": "string",
              "enum": [
                "icms",
                "icmsSt",
                "icmsStSd",
                "icmsPartOwn",
                "icmsPartDest",
                "icmsDifaFCP",
                "icmsDifaDest",
                "icmsDifaRemet",
                "icmsRf",
                "icmsDeson",
                "icmsCredsn",
                "pis",
                "pisSt",
                "cofins",
                "cofinsSt",
                "ipi",
                "ipiReturned",
                "ii",
                "iof"
              ],
              "description": "These are the specific tax types to which a message may be applied\n- 'icms'\n- 'icmsSt'\n- 'icmsStSd'\n- 'icmsPartOwn'\n- 'icmsPartDest'\n- 'icmsDifaFCP'\n- 'icmsDifaDest'\n- 'icmsDifaRemet'\n- 'icmsRf'\n- 'icmsDeson'\n- 'icmsCredsn'\n- 'pis'\n- 'pisSt'\n- 'cofins'\n- 'cofinsSt'\n- 'ipi'\n- 'ipiReturned'\n- 'ii'\n- 'iof'\n"
            },
            "jurisdictionType": {
              "type": "string",
              "enum": [
                "NONE",
                "City",
                "State",
                "Country"
              ],
              "description": "Types of jurisdiction\n- 'NONE'\n- 'City'\n- 'State'\n- 'Country'\n"
            },
            "jurisdictionCode": {
              "type": "string",
              "description": "Code to identify the Jurisdiction"
            },
            "precondition": {
              "type": "string",
              "description": "script rule that will evaluated to decide if this message is applicable.\nif doesn't have rule is samething that return true value.\n"
            }
          }
        }
      }
    },
    "AgastService_Withhold": {
      "description": "inform if this item is subject to withholding tax on service Transactions, default true",
      "type": "object",
      "properties": {
        "IRRF": {
          "$ref": "#/definitions/AgastService_WithholdIRRF"
        },
        "INSSSubjectPayrollTaxRelief": {
          "type": "boolean",
          "description": "Item subjecto to Payroll Tax Relief\nItem sujeto à desoneraçãode folha de pagamento\n"
        },
        "INSS": {
          "type": "boolean"
        },
        "INSSLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "INSSForSimples": {
          "type": "boolean"
        },
        "INSSForSimplesLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "PIS": {
          "description": "inform if this item is subject to withholding PIS on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        },
        "COFINS": {
          "description": "inform if this item is subject to withholding COFINS on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        },
        "CSLL": {
          "description": "inform if this item is subject to withholding CSLL on service Transactions, by entity type, default true",
          "$ref": "#/definitions/AgastService_WithholdPCC"
        }
      }
    },
    "AgastService_WithholdPCC": {
      "type": "object",
      "properties": {
        "business": {
          "type": "boolean"
        },
        "businessLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "federalGovernment": {
          "type": "boolean"
        },
        "federalGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "stateGovernment": {
          "type": "boolean"
        },
        "stateGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "cityGovernment": {
          "type": "boolean"
        },
        "cityGovernmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        }
      }
    },
    "AgastService_WithholdIRRF": {
      "type": "object",
      "properties": {
        "business": {
          "type": "boolean"
        },
        "businessLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        },
        "government": {
          "type": "boolean"
        },
        "governmentLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "reference id to TaxLegalReason"
        }
      }
    },
    "TransactionForGoodsIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForGoods"
        },
        "lines": {
          "type": "array",
          "maxItems": 990,
          "items": {
            "$ref": "#/definitions/LineForGoods"
          }
        }
      }
    },
    "TransactionForGoodsOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForGoods"
        },
        "lines": {
          "type": "array",
          "maxItems": 990,
          "items": {
            "$ref": "#/definitions/LineForGoods"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/CalculatedTaxSummaryForGoods"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "TransactionSimulationForGoodsIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForGoods"
        },
        "lines": {
          "type": "array",
          "maxItems": 990,
          "items": {
            "$ref": "#/definitions/LineForGoods"
          }
        }
      }
    },
    "SalesTransactionOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/SalesHeaderOut"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/SalesLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/SalesCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "SalesTransactionIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/SalesHeaderIn"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/SalesLinesIn"
          }
        }
      }
    },
    "PurchaseTransactionOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PurchaseHeaderOut"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PurchaseLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/PurchaseCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "PurchaseTransactionIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PurchaseHeaderIn"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PurchaseLinesIn"
          }
        }
      }
    },
    "PaymentTransactionOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PayRecLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/PayRecCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "PaymentTransactionIn": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentLinesIn"
          }
        }
      }
    },
    "ReceiptTransactionOut": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary",
        "processingInfo"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PayRecLinesOut"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/PayRecCalculatedTaxSummaryForService"
        },
        "processingInfo": {
          "$ref": "#/definitions/ProcessingInfo"
        }
      }
    },
    "ReceiptTransactionIn": {
      "type": "object",
      "required": [
        "header",
        "lines"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/PayRecHeader"
        },
        "lines": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/PaymentLinesIn"
          }
        }
      }
    },
    "CalculatedTaxSummaryForGoods": {
      "type": "object",
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "taxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line taxed discounts"
        },
        "untaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line untaxed discounts"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute + sum of all line tax attribute not VAT - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "properties": {
            "icms": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsStSd": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsPartOwn": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsPartDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDifaFCP": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDifaDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDifaRemet": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsDeson": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "icmsCredsn": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "pisSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "cofinsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "ipi": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "ipiReturned": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "ii": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "iof": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "aproxtribState": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            },
            "aproxtribFed": {
              "$ref": "#/definitions/TaxByTypeSummaryForGoods"
            }
          }
        }
      }
    },
    "ProcessingInfo": {
      "type": "object",
      "properties": {
        "versionId": {
          "type": "string"
        },
        "duration": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TaxByTypeSummaryForGoods": {
      "type": "object",
      "description": "summary of all taxes",
      "properties": {
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "sum of all lines calcBase"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value"
        },
        "jurisdictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxByTypeSummaryJurisdictionForGoods"
          }
        }
      }
    },
    "TaxByTypeSummaryJurisdictionForGoods": {
      "properties": {
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value by jurisdiction"
        }
      }
    },
    "SalesHeaderOut": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesHeaderIn"
        },
        {
          "type": "object",
          "properties": {
            "discriminationOut": {
              "type": "string",
              "maxLength": 2000,
              "minLength": 1,
              "description": "Invoice discrimination, it is discriminationIn plus automatic messages"
            },
            "xml": {
              "type": "string",
              "maxLength": 50000,
              "description": "RPS XML or NFSe XML generated, when the client system doesn't have EDI with government then BR16 return RPS when transaction is created."
            },
            "ediSyncState": {
              "type": "string",
              "enum": [
                "STORED",
                "WAITING APPROVAL",
                "AUTHORIZED",
                "AUTHORIZED with NOTE",
                "ERROR",
                "CANCELED REPLACED",
                "CANCELED",
                "CANCELLATION REQUESTED"
              ],
              "description": "Service sales usually has a EDI integration with government to get Final document or Authorization. This is external process and the integration status is followed by this property.\n- 'STORED'\n- 'WAITING APPROVAL'\n- 'AUTHORIZED'\n- 'AUTHORIZED with NOTE'\n- 'ERROR'\n- 'CANCELED REPLACED'\n- 'CANCELED'\n- 'CANCELLATION REQUESTED'\n"
            },
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "withholdingMode": {
                  "$ref": "#/definitions/WithholdingMode",
                  "description": "To avoid having to verify multiple attributes from a Invoice at the time of funds collection which subject to Tax Withholding, this attribute will allow a referenced Invoice to be quickly checked for withholdings during the cash transaction. This is an SALES.Transaction attribute to be consisted in the Tax Engine that can be used during the receivable process. The values are enumeration where each letter identify if that tax has been withheld PCC,xxx, PCx, PxC ..."
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/InstallmentComplete"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "SalesLinesOut": {
      "allOf": [
        {
          "$ref": "#/definitions/SalesLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "avalaraGoodsAndServicesType": {
              "type": "string",
              "description": "AGAST CODE for itemCode"
            },
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "This decimal captures the total cost of this line. In its simplest form lineNetValue = (lineAmount - discountTaxable - sum of whithholdings)."
            },
            "cst": {
              "type": "string",
              "maxLength": 2,
              "enum": [
                "01",
                "02",
                "03",
                "04",
                "05",
                "21",
                "22",
                "23",
                "24",
                "25",
                "40"
              ],
              "description": "- '01' # ORIGIN MODE\n- '02' # ORIGIN MODE BUT EXEMPT\n- '03' # ORIGIN MODE BUT IMMUNE\n- '04' # ORIGIN MODE BUT SUSPENDED FOR LEGAL REASON\n- '05' # ORIGIN MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '21' # DESTINATION MODE\n- '22' # DESTINATION MODE BUT EXEMPT\n- '23' # DESTINATION MODE BUT IMMUNE\n- '24' # DESTINATION MODE BUT SUSPENDED\n- '25' # DESTINATION MODE BUT SUSPENDED\n- '40' # FOREIGN IMMUNE MODE\n"
            },
            "cstRf": {
              "type": "string",
              "maxLength": 2,
              "enum": [
                "61",
                "62",
                "63",
                "64",
                "65",
                "66",
                "67",
                "68",
                "69",
                "70",
                "71",
                "72"
              ],
              "description": "- '61' # WITHHOLD NORMAL MODE\n- '62' # WITHHOLD NORMAL MODE BUT EXEMPT\n- '63' # WITHHOLD NORMAL MODE BUT IMMUNE\n- '64' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR LEGAL REASON\n- '65' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '66' # WITHHOLD FORCED MODE\n- '67' # WITHHOLD FORCED MODE BUT EXEMPT\n- '68' # WITHHOLD FORCED MODE BUT IMMUNE\n- '69' # WITHHOLD FORCED MODE BUT SUSPENDED FOR LEGAL REASON\n- '70' # WITHHOLD FORCED MODE BUT SUSPENDED FOR ADMINISTRATIVE PROCESS\n- '71' # NO WITHHOLD MODE\n- '72' # NO WITHHOLD FOREIGN MODE\n"
            },
            "taxDeductions": {
              "type": "object",
              "properties": {
                "iss": {
                  "type": "number",
                  "format": "double",
                  "description": "Deduction amount not ISS taxable. Example Building material"
                }
              }
            },
            "calculatedTax": {
              "$ref": "#/definitions/SalesCalculatedTax"
            }
          }
        }
      ]
    },
    "SalesCalculatedTaxSummaryForService": {
      "type": "object",
      "required": [
        "taxByType"
      ],
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute - sum of all line tax attribute - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "description": "Object with summary of all taxes returned by engine",
          "properties": {
            "pisRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofinsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csllRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irrf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csll": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "issRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "iss": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "aproxtribCity": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "aproxtribFed": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irpj": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inss": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            }
          }
        }
      }
    },
    "InstallmentComplete": {
      "type": "object",
      "required": [
        "documentNumber",
        "date",
        "grossValue"
      ],
      "properties": {
        "documentNumber": {
          "type": "string",
          "description": "DOCNUMBER, ID OF THIS DOCUMENT FOR THIS transaction"
        },
        "date": {
          "type": "string",
          "description": "installment Due Date"
        },
        "grossValue": {
          "type": "number",
          "format": "double",
          "description": "Intallment amount, fraction of  ∑(lineAmount - lineTaxedDiscount)"
        },
        "netValue": {
          "type": "number",
          "format": "double",
          "description": "net amount due for this installment, grossValue - ∑ (withhold amounts)"
        },
        "withholdingMode": {
          "$ref": "#/definitions/WithholdingMode",
          "description": "Inform if this payment is subject to Pis, Cofins or CSLL"
        },
        "withholdingPIS": {
          "type": "number",
          "format": "double",
          "description": "calculated PIS-RF tax for this payment"
        },
        "withholdingCOFINS": {
          "type": "number",
          "format": "double",
          "description": "calculated COFINS-RF tax for this payment"
        },
        "withholdingCSLL": {
          "type": "number",
          "format": "double",
          "description": "calculated CSLL-RF tax for this payment"
        }
      }
    },
    "PaymentTerms": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "description": "0 – cash pagamento à vista\n1 – on terms, pagamento à prazo;\n"
    },
    "SalesHeaderIn": {
      "allOf": [
        {
          "$ref": "#/definitions/HeaderBaseInfo"
        },
        {
          "type": "object",
          "properties": {
            "purchaseOrderNumber": {
              "type": "string",
              "description": "The number of Purchase Order"
            },
            "rpsNumber": {
              "type": "integer",
              "description": "Provisional receipt services, sequencial number maintained by the client application, unique by serie"
            },
            "rpsSerie": {
              "type": "string",
              "description": "set name identifier for rps number sequency.",
              "default": "0"
            },
            "discriminationIn": {
              "type": "string",
              "maxLength": 1000,
              "minLength": 1,
              "description": "Service discrimination, free description about service"
            },
            "entity": {
              "$ref": "#/definitions/SalesEntity"
            },
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/SalesInstallmentIn"
                  }
                }
              }
            },
            "taxesConfig": {
              "$ref": "#/definitions/SalesTaxesConfig"
            },
            "defaultLocations": {
              "$ref": "#/definitions/SalesDefaultLocations"
            }
          }
        }
      ]
    },
    "WithholdingMode": {
      "type": "string",
      "enum": [
        "xxx",
        "PCC",
        "PCx",
        "PxC",
        "Pxx",
        "xCC",
        "xxC",
        "xCx"
      ],
      "description": "Using the placing reference in PCC for PIS (P), COFINS (C) and COFINS (C).  x = tax is not subject to withholding. \n- 'xxx'\n- 'PCC'\n- 'PCx'\n- 'PxC'\n- 'Pxx'\n- 'xCC'\n- 'xxC'\n- 'xCx'\n"
    },
    "HeaderBaseInfo": {
      "type": "object",
      "required": [
        "transactionType",
        "transactionDate",
        "companyLocation"
      ],
      "properties": {
        "transactionType": {
          "type": "string",
          "enum": [
            "Sale",
            "Purchase",
            "Payment",
            "Receipt"
          ],
          "description": "This string indicates the type of transaction for which tax should be calculated.\n- 'Sale'\n- 'Purchase'\n- 'Payment'\n- 'Receipt'\n"
        },
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "currency": {
          "type": "string",
          "description": "currency code / transactions must be in Brazilian Reais \"BRL\""
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format (which may be different from the date the tax calculation is performed)"
        },
        "taxCalculationDate": {
          "type": "string",
          "description": "accrual date, This string is the date, in ISO 8601 format, on which tax is to be calculated for this transaction (normally tax is calculated on the date the transaction is performed as captured in the transactionDate field). This is useful for layaways and other deferred transactions."
        },
        "companyLocation": {
          "type": "string",
          "maxLength": 64,
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        }
      }
    },
    "SalesEntity": {
      "type": "object",
      "required": [
        "type",
        "taxRegime"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "SERVICE BUYER NAME OFFICIAL"
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "cnpjcpf": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "taxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "specialTaxRegime": {
          "type": "string",
          "enum": [
            "MEM",
            "EST",
            "SPR",
            "COP",
            "MEI",
            "MPP"
          ],
          "description": "Entity Special Tax Regime \n- 'MEM' # Microempresa municipal\n- 'EST' # Estimativa\n- 'SPR' # Sociedade de profissionais\n- 'COP' # Cooperativa\n- 'MEI' # Microempresário Individual (MEI)\n- 'MPP' # Microempresário e Empresa de Pequeno Porte (ME EPP)\n"
        },
        "subjectToSRF1234": {
          "type": "boolean",
          "description": "Companies subject to rule follow same rule of Government"
        },
        "requiredWithholdingISS": {
          "type": "boolean",
          "description": "If Withholding ISS is required, independently the rules applied."
        },
        "adminProcess": {
          "type": "string",
          "maxLength": 30,
          "description": "PROCESS NUMBER TO ISS SUSPENDED FOR ADMINISTRATIVE PROCESS"
        },
        "build": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 15,
              "description": "Business code. Código da obra OBRA"
            },
            "art": {
              "type": "string",
              "maxLength": 15,
              "description": "technical note. Anota\\u00e7\\u00e3o de Responsabilidade T\\u00e9cnica-ART, estabelece que todos os contratos referentes à  execu\\u00e7\\u00e3o de servi\\u00e7os ou obras de Engenharia, Agronomia, Geologia, Geografia ou Meteorologia dever\\u00e3o ser objeto de anota\\u00e7\\u00e3o no Conselho Regional de Engenharia e Agronomia"
            },
            "cei": {
              "type": "string",
              "maxLength": 15,
              "description": "Número CEI da Obra"
            },
            "number": {
              "type": "string",
              "maxLength": 15,
              "description": "Número de Matrícula da Obra"
            }
          }
        }
      }
    },
    "SalesInstallmentIn": {
      "type": "object",
      "required": [
        "documentNumber",
        "date",
        "grossValue"
      ],
      "properties": {
        "documentNumber": {
          "type": "string",
          "description": "DOCNUMBER, ID OF THIS DOCUMENT FOR THIS transaction"
        },
        "date": {
          "type": "string",
          "description": "installment Due Date"
        },
        "grossValue": {
          "type": "number",
          "format": "double",
          "description": "Intallment value, fraction of  ∑(lineAmount - lineTaxedDiscount)"
        }
      }
    },
    "SalesTaxesConfig": {
      "type": "object",
      "properties": {
        "accruableCOFINSTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings.\n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n"
        },
        "accruableCSLLTaxation": {
          "type": "string",
          "enum": [
            "T",
            "E"
          ],
          "description": "There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be CSLL exempt.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. \n- T TAXABLE\n- E EXEMPT\n"
        },
        "accruablePISTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. \n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n"
        },
        "accruableCOFINSExempCodeTaxation": {
          "type": "string",
          "pattern": "[0-9]{3}",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption"
        },
        "accruablePISExempCodeTaxation": {
          "type": "string",
          "pattern": "[0-9]{3}",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption"
        },
        "withholdingCOFINS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdingCSLL": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdingIRRF": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdingPIS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings."
        },
        "withholdIRRFExemptReasonTaxation": {
          "type": "string",
          "description": "When property withholdingIRRF is false is mandatory inform the reason"
        }
      }
    },
    "SalesDefaultLocations": {
      "type": "object",
      "description": "This element contains a dictionary of locations such as the origin and destination addresses to be associated with this transaction. There can only be one location of a given purpose in the dictionary.",
      "properties": {
        "serviceRendered": {
          "$ref": "#/definitions/ServiceRendered"
        }
      }
    },
    "ServiceRendered": {
      "type": "object",
      "description": "Address where the rendered service.",
      "properties": {
        "address": {
          "$ref": "#/definitions/SimpleAddress"
        }
      }
    },
    "SimpleAddress": {
      "title": "Address",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "line1",
            "line2",
            "line3",
            "zipcode",
            "country"
          ],
          "properties": {
            "line1": {
              "type": "string",
              "maxLength": 60,
              "description": "Address"
            },
            "line2": {
              "type": "string",
              "maxLength": 60,
              "description": "Number"
            },
            "line3": {
              "type": "string",
              "maxLength": 60,
              "description": "District"
            },
            "city": {
              "type": "string",
              "maxLength": 60
            },
            "zipcode": {
              "type": "string",
              "description": "Zip Code"
            },
            "state": {
              "type": "string",
              "description": "State Code",
              "pattern": "^([A-Z]{2,3})$"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "line1",
            "line2",
            "line3",
            "zipcode",
            "country"
          ],
          "properties": {
            "line1": {
              "type": "string",
              "maxLength": 60,
              "description": "Address"
            },
            "line2": {
              "type": "string",
              "maxLength": 60,
              "description": "Number"
            },
            "line3": {
              "type": "string",
              "maxLength": 60,
              "description": "District"
            },
            "city": {
              "type": "string",
              "maxLength": 60
            },
            "zipcode": {
              "type": "string",
              "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
              "description": "Brazilian Zip Code"
            },
            "state": {
              "$ref": "#/definitions/StateEnum"
            },
            "country": {
              "type": "string",
              "maxLength": 3,
              "description": "Use ISO 3166-1 alpha-3 codes",
              "default": "BRA"
            }
          }
        },
        {
          "title": "Address",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "line1",
                "line2",
                "line3",
                "zipcode",
                "country"
              ],
              "properties": {
                "line1": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Address"
                },
                "line2": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Number"
                },
                "line3": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "District"
                },
                "city": {
                  "type": "string",
                  "maxLength": 60
                },
                "zipcode": {
                  "type": "string",
                  "description": "Zip Code"
                },
                "state": {
                  "type": "string",
                  "description": "State Code",
                  "pattern": "^([A-Z]{2,3})$"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "line1",
                "line2",
                "line3",
                "zipcode",
                "country"
              ],
              "properties": {
                "line1": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Address"
                },
                "line2": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "Number"
                },
                "line3": {
                  "type": "string",
                  "maxLength": 60,
                  "description": "District"
                },
                "city": {
                  "type": "string",
                  "maxLength": 60
                },
                "zipcode": {
                  "type": "string",
                  "pattern": "^(\\d{8}|\\d{5}\\-\\d{3})$",
                  "description": "Brazilian Zip Code"
                },
                "state": {
                  "$ref": "#/definitions/StateEnum"
                },
                "country": {
                  "type": "string",
                  "maxLength": 3,
                  "description": "Use ISO 3166-1 alpha-3 codes",
                  "default": "BRA"
                }
              }
            }
          ]
        }
      ]
    },
    "SalesCalculatedTax": {
      "type": "object",
      "properties": {
        "taxByType": {
          "$ref": "#/definitions/SalesTaxByType"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Sum of tax type not VAT (Value Added Tax)"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetailsCalculatedTaxServiceSales"
          }
        }
      }
    },
    "SalesLinesIn": {
      "type": "object",
      "required": [
        "itemCode"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This string is a unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU."
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Conditional discount"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Unconditional discount"
        },
        "withLaborAssignment": {
          "type": "boolean",
          "description": "Service w/labor assignment\nServiço com cessão de mão de obra\n"
        },
        "taxDeductions": {
          "type": "object",
          "properties": {
            "iss": {
              "type": "number",
              "format": "double",
              "description": "Deduction amount not taxable by ISS . Example constructions materials included in a service invoice"
            }
          }
        }
      }
    },
    "SalesTaxByType": {
      "type": "object",
      "description": "Object with summary of all taxes returned by engine",
      "properties": {
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "irrf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pis": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofins": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csll": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "issRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "iss": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "aproxtribCity": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "aproxtribFed": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "irpj": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inss": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "DetailsCalculatedTaxServiceSales": {
      "type": "object",
      "properties": {
        "locationType": {
          "type": "string",
          "description": "This string captures the applicable location type. Location used for calc. Buyer or Seller"
        },
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "taxImpact": {
          "$ref": "#/definitions/DetailsCalculatedTaxImpact"
        },
        "taxType": {
          "type": "string",
          "enum": [
            "aproxtribCity",
            "aproxtribFed",
            "pis",
            "pisRf",
            "cofins",
            "cofinsRf",
            "csll",
            "csllRf",
            "irrf",
            "inss",
            "inssRf",
            "iss",
            "issRf",
            "irpj"
          ],
          "description": "Tax identificator\n- 'aproxtribCity'\n- 'aproxtribFed'\n- 'pis'\n- 'pisRf'\n- 'cofins'\n- 'cofinsRf'\n- 'csll'\n- 'csllRf'\n- 'irrf'\n- 'inss'\n- 'inssRf'\n- 'iss'\n- 'issRf'\n- 'irpj'\n"
        },
        "rateType": {
          "type": "string",
          "description": "Name of configuration rate"
        },
        "scenario": {
          "type": "string",
          "description": "This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in."
        },
        "subtotalTaxable": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "exemptionCode": {
          "type": "string",
          "description": "This string is required if is exempt"
        },
        "significantLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This element captures the list of locations that contributed to the tax determination. for BR16 Service is Buyer and Seller Address"
        },
        "taxRuleType": {
          "type": "string",
          "enum": [
            "SELLER",
            "BUYER",
            "TRANSACTION",
            "ITEM",
            "TAX",
            "NO_EXEMPTION"
          ],
          "description": "This string with type of rule\n- 'SELLER'\n- 'BUYER'\n- 'TRANSACTION'\n- 'ITEM'\n- 'TAX'\n- 'NO_EXEMPTION'\n"
        }
      }
    },
    "TaxByTypeSummaryForService": {
      "type": "object",
      "description": "summary of all taxes",
      "properties": {
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value"
        },
        "jurisdictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxByTypeSummaryJurisdiction"
          }
        }
      }
    },
    "TaxByTypeSummaryJurisdiction": {
      "properties": {
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value by jurisdiction"
        }
      }
    },
    "PurchaseHeaderOut": {
      "allOf": [
        {
          "$ref": "#/definitions/PurchaseHeaderIn"
        },
        {
          "type": "object",
          "properties": {
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "withholdingMode": {
                  "$ref": "#/definitions/WithholdingMode"
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/InstallmentComplete"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "PurchaseLinesOut": {
      "allOf": [
        {
          "$ref": "#/definitions/PurchaseLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "avalaraGoodsAndServicesType": {
              "type": "string",
              "description": "AGAST CODE for itemCode"
            },
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "This decimal captures the value of lineAmount - lineTaxedDiscount - sum of withholding."
            },
            "calculatedTax": {
              "$ref": "#/definitions/PurchaseCalculatedTax"
            }
          }
        }
      ]
    },
    "PurchaseCalculatedTaxSummaryForService": {
      "type": "object",
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute - sum of all line tax attribute - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "description": "Object with summary of all taxes returned by engine",
          "properties": {
            "issRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pisRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofinsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csllRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irrf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssAr": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            }
          }
        }
      }
    },
    "PurchaseHeaderIn": {
      "allOf": [
        {
          "$ref": "#/definitions/HeaderBaseInfo"
        },
        {
          "type": "object",
          "properties": {
            "purchaseOrderNumber": {
              "type": "string",
              "description": "The number of Purchase Order"
            },
            "entity": {
              "$ref": "#/definitions/PurchaseEntity"
            },
            "payment": {
              "type": "object",
              "properties": {
                "terms": {
                  "$ref": "#/definitions/PaymentTerms"
                },
                "installments": {
                  "type": "array",
                  "description": "installments",
                  "items": {
                    "$ref": "#/definitions/PurchaseInstallmentIn"
                  }
                }
              }
            },
            "taxesConfig": {
              "$ref": "#/definitions/PurchaseTaxesConfig"
            },
            "defaultLocations": {
              "$ref": "#/definitions/PurchaseDefaultLocations"
            }
          }
        }
      ]
    },
    "PurchaseEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "Legal Name of Service buyer."
        },
        "type": {
          "$ref": "#/definitions/EntityType"
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "cnpjcpf": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer. If CPF, pattern is '[0-9]{11}' if CNPJ, pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "taxRegime": {
          "$ref": "#/definitions/FederalTaxRegime"
        },
        "hasCpom": {
          "type": "boolean",
          "description": "Some cities require PURCHASE.Buyers to withhold ISS (City Tax) from PURCHASE.Sellers stablished in different cities. In case the PURCHASE.Seller has acquired a Tax Registration in this destination city, by providing this information in the service invoice, this withholding obligation is lifted."
        },
        "subjectWithholdingIrrf": {
          "type": "boolean",
          "description": "These are the federal taxes attributes that determine whether withholding of taxes should take place. In special cases where the PURCHASE.Seller is exempt of one or more of these taxes the withholding follows the same rules. The Business type may also dictate these rules as well."
        },
        "inssPreviousContrib": {
          "type": "number",
          "format": "double",
          "description": "The INSS contribution is capped at a maximum limit (amount of actual retired payment available in the country).  Individuals sellers subject to INSS withholding can provide the amount already tax by other transactions (with the same buyer or different ones) to deduct to the tax basis. This amount is to be provided to the Seller in a form of a signed document."
        },
        "inssBasisDiscount": {
          "type": "number",
          "format": "double",
          "description": "The INSS contribution is applicable only to the labor amount in a service contract.  There are several items that may be deducted from the service invoice total to arrive at the INSS taxable amount. This amount is to be provided to the Seller in the body of the Invoice or calculated during the transaction input."
        },
        "issRfRate": {
          "type": "number",
          "format": "double",
          "description": "When Seller is Simples regime, the seller needs send RF rate."
        }
      }
    },
    "PurchaseInstallmentIn": {
      "type": "object",
      "required": [
        "documentNumber",
        "date",
        "grossValue"
      ],
      "properties": {
        "documentNumber": {
          "type": "string",
          "description": "DOCNUMBER, ID OF THIS DOCUMENT FOR THIS transaction"
        },
        "date": {
          "type": "string",
          "description": "installment, Due Date"
        },
        "grossValue": {
          "type": "number",
          "format": "double",
          "description": "Intallment value, fraction of  ∑(lineAmount - lineTaxedDiscount)"
        }
      }
    },
    "PurchaseTaxesConfig": {
      "type": "object",
      "properties": {
        "entityAccruableCOFINSTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "ATTENTION SELLER POINT OF VIEW. There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. T TAXABLE, N NOT TAXABLE, Z TAXABLE WITH RATE=0.00, E EXEMPT, H SUSPENDED, S SPECIFIC RATE\n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n",
          "default": "T"
        },
        "entityAccruableCSLLTaxation": {
          "type": "string",
          "enum": [
            "T",
            "E"
          ],
          "description": "ATTENTION SELLER POINT OF VIEW. There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be CSLL exempt.  \nThis attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. \n- T TAXABLE\n- E EXEMPT\n",
          "default": "T"
        },
        "entityAccruablePISTaxation": {
          "type": "string",
          "enum": [
            "T",
            "N",
            "Z",
            "E",
            "H",
            "S"
          ],
          "description": "ATTENTION SELLER POINT OF VIEW. There are cases where both Seller, Buyer and items are taxable but a special situation still exists that forces the transaction to be exempt specially for PIS and COFINS.  This attribute will allow users to identify such scenarios and trigger the exemption in spite of all other settings. T TAXABLE, N NOT TAXABLE, Z TAXABLE WITH RATE=0.00, E EXEMPT, H SUSPENDED, S SPECIFIC RATE\n- 'T' # TAXABLE\n- 'N' # NOT TAXABLE\n- 'Z' # TAXABLE WITH RATE=0.00\n- 'E' # EXEMPT\n- 'H' # SUSPENDED\n- 'S' # SPECIFIC RATE\n",
          "default": "T"
        },
        "accruableCOFINSExempCodeTaxation": {
          "type": "string",
          "pattern": "([0-9]{3})?",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption. When not Taxable of Seller point of view this field has the reason code."
        },
        "accruablePISExempCodeTaxation": {
          "type": "string",
          "pattern": "([0-9]{3})?",
          "description": "This is a code available by Receita Federal for reason of the exemption, When Code is 999 the User system need send the custom reason to Exemption. When not Taxable of Seller point of view this field has the reason code."
        },
        "accruablePISExemptReasonTaxation": {
          "type": "string",
          "description": "When Code is 999 the user system need send the custom reason to Exemption"
        },
        "accruableCOFINSExemptReasonTaxation": {
          "type": "string",
          "description": "When Code is 999 the user system need send the custom reason to Exemption"
        },
        "accruableCSLLExemptReasonTaxation": {
          "type": "string",
          "description": "CSLL no withholding Custom Reason"
        },
        "withholdingPIS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdingCOFINS": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdingCSLL": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdingIRRF": {
          "type": "boolean",
          "description": "Support Buyer Tax Liability identifier for Federal Withholding Taxes. Each buyer may be subject/liable to withhold the following taxes independent to one another. The seller must be able to inform which Tax impacts the transaction based on a direct equivalency in the service item accrual. i.e. (The service item must be taxed by a given tax and the buyer must liable for the same tax withholding in order for the transaction to be taxable). To differentiate from the accrued taxes under the same acronyms the withholding taxes are followed by WH (this is a convention created for the sake of understanding and communicating the requirements. If false spite of all other settings.",
          "default": true
        },
        "withholdCOFINSExemptReasonTaxation": {
          "type": "string",
          "description": "COFINS no withholding Custom Reason"
        },
        "withholdCSLLExemptReasonTaxation": {
          "type": "string",
          "description": "CSLL no withholding Custom Reason"
        },
        "withholdPISExemptReasonTaxation": {
          "type": "string",
          "description": "PIS no withholding Custom Reason"
        }
      }
    },
    "PurchaseDefaultLocations": {
      "type": "object",
      "description": "This element contains a dictionary of locations such as the origin and destination addresses to be associated with this transaction. There can only be one location of a given purpose in the dictionary.",
      "properties": {
        "PointOfOrderOrigin": {
          "$ref": "#/definitions/PointOfOrderOrigin"
        }
      }
    },
    "PointOfOrderOrigin": {
      "type": "object",
      "description": "Address where the service is rendered.",
      "properties": {
        "address": {
          "$ref": "#/definitions/SimpleAddress"
        }
      }
    },
    "PurchaseCalculatedTax": {
      "type": "object",
      "properties": {
        "taxByType": {
          "$ref": "#/definitions/PurchaseTaxByType"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Sum of tax type not VAT (Value Added Tax)"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetailsCalculatedTaxServicePurchase"
          }
        }
      }
    },
    "PurchaseLinesIn": {
      "type": "object",
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This string is a unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU."
        },
        "taxForItem": {
          "type": "object",
          "description": "This structure is mandatory when doesn't have itemCode (SKU), usually the companies doesn't have the services to buy mapped.\nOptionally teh service can be consumed sending serviceAgast and the service code on the company city\n",
          "required": [
            "agastCode"
          ],
          "properties": {
            "agastCode": {
              "type": "string",
              "description": "Service Agast code for this ite, the Service AGAST code has Federal Jurisdiction"
            },
            "serviceCode": {
              "type": "string",
              "description": "Company city code service      \nWhen this information isn't available the rates for ISS are zero.\n"
            }
          }
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Conditional discount"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Unconditional discount"
        },
        "withLaborAssignment": {
          "type": "boolean",
          "description": "Service w/labor assignment\nServiço com cessão de mão de obra\n"
        },
        "useType": {
          "type": "string",
          "enum": [
            "resale",
            "production",
            "use or consumption",
            "fixed assets"
          ],
          "description": "Type of entity use associated with this line\n- 'resale'\n- 'production'\n- 'use or consumption'\n- 'fixed assets'\n"
        },
        "taxDeductions": {
          "type": "object",
          "properties": {
            "iss": {
              "type": "number",
              "format": "double",
              "description": "Deduction amount not ISS taxable. Example Building material"
            }
          }
        }
      }
    },
    "PurchaseTaxByType": {
      "type": "object",
      "description": "Object with summary of all taxes returned by engine",
      "properties": {
        "issRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "irrf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssAr": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pis": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofins": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "DetailsCalculatedTaxServicePurchase": {
      "type": "object",
      "properties": {
        "locationType": {
          "type": "string",
          "description": "This string captures the applicable location type. Location used for calc. Buyer or Seller"
        },
        "jurisdictionName": {
          "type": "string",
          "description": "Jurisdiction used for calctax amount"
        },
        "jurisdictionType": {
          "type": "string",
          "enum": [
            "City",
            "State",
            "Country"
          ],
          "description": "Type of jurisdiction\n- 'City'\n- 'State'\n- 'Country'\n"
        },
        "taxImpact": {
          "$ref": "#/definitions/DetailsCalculatedTaxImpact"
        },
        "taxType": {
          "type": "string",
          "enum": [
            "pis",
            "pisRf",
            "cofins",
            "cofinsRf",
            "csll",
            "csllRf",
            "irrf",
            "inssAr",
            "inssRf",
            "issRf"
          ],
          "description": "Tax identificator\n- 'pis'\n- 'pisRf'\n- 'cofins'\n- 'cofinsRf'\n- 'csll'\n- 'csllRf'\n- 'irrf'\n- 'inssAr'\n- 'inssRf'\n- 'issRf'\n"
        },
        "rateType": {
          "type": "string",
          "description": "Name of configuration rate"
        },
        "scenario": {
          "type": "string",
          "description": "This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in."
        },
        "subtotalTaxable": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "exemptionCode": {
          "type": "string",
          "description": "This string is required if is exempt"
        },
        "significantLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This element captures the list of locations that contributed to the tax determination. for BR16 Service is Buyer and Seller Address"
        },
        "taxRuleType": {
          "type": "string",
          "enum": [
            "SELLER",
            "BUYER",
            "TRANSACTION",
            "ITEM",
            "TAX"
          ],
          "description": "This string with type of rule\n- 'SELLER'\n- 'BUYER'\n- 'TRANSACTION'\n- 'ITEM'\n- 'TAX'\n"
        }
      }
    },
    "PayRecHeader": {
      "type": "object",
      "required": [
        "transactionType",
        "transactionDate",
        "paymentMode"
      ],
      "properties": {
        "transactionType": {
          "type": "string",
          "enum": [
            "Sale",
            "Purchase",
            "Payment",
            "Receipt"
          ],
          "description": "This string indicates the type of transaction for which tax should be calculated.\n- 'Sale'\n- 'Purchase'\n- 'Payment'\n- 'Receipt'\n"
        },
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "currency": {
          "type": "string",
          "description": "currency code. 'BRL' for Brazilian Reais."
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format (which may be different from the date the tax calculation is performed)"
        },
        "taxCalculationDate": {
          "type": "string",
          "description": "accrual date, This string is the date, in ISO 8601 format, on which tax is to be calculated for this transaction (normally tax is calculated on the date the transaction is performed as captured in the transactionDate field). This is useful for layaways and other deferred transactions."
        },
        "paymentMode": {
          "type": "string",
          "enum": [
            "CALCULATE",
            "ASIS"
          ],
          "description": "- 'CALCULATE'\n- 'ASIS'\nWhen ASIS, the transaction is stored without executing tax determination (no Calculation).\n"
        }
      }
    },
    "PayRecLinesOut": {
      "allOf": [
        {
          "$ref": "#/definitions/PayRecLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "lineAmount": {
              "type": "number",
              "format": "double",
              "description": "GrossAmount of this installment line"
            },
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "Net value, the net Value is Gross value plus penalty minus sum of discount and withhold taxes"
            },
            "withholdingMode": {
              "$ref": "#/definitions/WithholdingMode",
              "description": "x is because not subject of this tax independent of Threshold"
            },
            "calculatedTax": {
              "$ref": "#/definitions/PaymentCalculatedTax"
            }
          }
        }
      ]
    },
    "PayRecCalculatedTaxSummaryForService": {
      "type": "object",
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "Sum of grossvalues"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "Sum of all withholding values"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "Sum all NetValues"
        },
        "pccWithholdingModes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PccWithholdingMode"
          }
        },
        "taxByType": {
          "type": "object",
          "description": "Object with summary of all taxes returned by engine",
          "properties": {
            "issRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "pisRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "cofinsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "csllRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "irrf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            },
            "inssRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForService"
            }
          }
        }
      }
    },
    "PaymentCalculatedTax": {
      "type": "object",
      "description": "Structure with value for each tax withhold value of this line",
      "properties": {
        "taxByType": {
          "$ref": "#/definitions/PaymentTaxByType"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "Sum of tax type not VAT (Value Added Tax)"
        }
      }
    },
    "PayRecLinesIn": {
      "type": "object",
      "required": [
        "itemCode"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "Installment number in this document"
        },
        "lineType": {
          "type": "string",
          "enum": [
            "installment"
          ]
        },
        "itemCode": {
          "type": "string",
          "description": "Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc."
        },
        "itemDescription": {
          "type": "string",
          "description": "Free description about this payment"
        },
        "itemDocNumber": {
          "type": "string",
          "description": "Installment number, when paid AS IS"
        },
        "lineUntaxedPenality": {
          "type": "number",
          "format": "double",
          "description": "Penalty, usually because paid after due date"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "unconditional discounts"
        }
      }
    },
    "PaymentTaxByType": {
      "type": "object",
      "description": "Object with summary of all taxes returned by engine",
      "properties": {
        "irrf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "inssRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "issRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "PccWithholdingMode": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "CSRF",
            "individual"
          ],
          "description": "Inform if this group of tax are calculated considering the threashold by PCC or Individualy (each tax separately)"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "this attribute occurs only for CSRF type, When CRSF mode, this is sum of pisRf, CofinsRf and CsllRf"
        },
        "pisRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "cofinsRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        },
        "csllRf": {
          "$ref": "#/definitions/TaxByTypeTax"
        }
      }
    },
    "PaymentLinesIn": {
      "allOf": [
        {
          "$ref": "#/definitions/PayRecLinesIn"
        },
        {
          "type": "object",
          "properties": {
            "lineNetValue": {
              "type": "number",
              "format": "double",
              "description": "Net value, the net Value is Gross value plus penalty minus sum of discount and withhold taxes"
            }
          }
        }
      ]
    },
    "CompanyAgastGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/AgastGoods"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyAgastService": {
      "allOf": [
        {
          "$ref": "#/definitions/AgastService"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyIcmsConfByState": {
      "allOf": [
        {
          "$ref": "#/definitions/IcmsConfByState"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyProcessScenario": {
      "allOf": [
        {
          "$ref": "#/definitions/ProcessScenario"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "CompanyTaxTypeRate": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxTypeRate"
        },
        {
          "type": "object",
          "required": [
            "companyId"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            }
          }
        }
      ]
    },
    "ItemGoods": {
      "allOf": [
        {
          "$ref": "#/definitions/ItemSimple"
        },
        {
          "type": "object",
          "properties": {
            "sealCode": {
              "type": "string",
              "maxLength": 60,
              "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
            },
            "nFCI": {
              "type": "string",
              "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
              "description": "Importation content form number (Número de controle da FCI - Ficha de Conteúdo de Importação)"
            },
            "isIcmsStSubstitute": {
              "type": "boolean",
              "description": "this field inform that this merchandise or product is ICMS Substitute\nMust be used when the item is for resale and the company will assume the role of ICMS Substitute (wholesaler, retailer, distributor). Example: when Importing some product the company does not pay IcmsSt at the time of customs clearance but when selling sale the item.\nDeverá ser utilizado quando a empresa que irá vender a mercadoria sujeita ao ICMS ST for o SUBSTITUTO TRIBUTÁRIO (Distribuidor, atacadista e varejista), como por exemplo das mercadorias IMPORTADAS, neste sentido, a empresa não irá pagar o ICMS ST no desembaraço aduaneiro e irá recolher quando for vender as mesmas.\n"
            },
            "source": {
              "description": "- '0' # National goods - except those treated in codes 3,4, 5 and 8\n- '1' # Foreign goods - Imported directly by seller, except those in code 6\n- '2' # Foreign goods - Acquired in the internal market (inside Brazil), except those in code 7\n- '3' # National goods - Merchandise or goods with imported content above 40% and with less than or equal to 70%\n- '4' # National goods from production following 'standard basic processes' as stablished by legislation (standard basic processes are devised to separate simple assembly from manufaturing processes)\n- '5' # National goods - Merchandise or goods with imported content equal or below 40%\n- '6' # Foreign goods - Directly imported by Seller, without a National Equivalent as listed by Comex and natural gas\n- '7' # Foreign goods - Acquired inside Brazil, without a National Equivalent  as listed by Comex and natural gas\n- '8' # National goods - Merchandise or goods with imported content above 70%\n",
              "type": "string",
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8"
              ]
            },
            "productType": {
              "type": "string",
              "description": "Tipo fiscal do produto segundo tabela SPED\nFiscal product type by SPED list table\n- 'FOR PRODUCT' # 04  Produto Acabado\n- 'FOR MERCHANDISE' # 00  Mercadoria para Revenda\n- 'NO RESTRICTION' # 99 Outras\n- 'SERVICE' # 09  Serviços\n- 'FEEDSTOCK' # 01  Matéria-Prima\n- 'FIXED ASSETS' # 08 Ativo Imobilizado\n- 'PACKAGING' # 02 Embalagem\n- 'PRODUCT IN PROCESS' # 03  Produto em Processo\n- 'SUBPRODUCT' # 05  Subproduto\n- 'INTERMEDIATE PRODUCT' # 06  Produto Intermediário\n- 'MATERIAL FOR USAGE AND CONSUMPTION' # 07  Material de Uso e Consumo\n- 'OTHER INPUTS' # 10  Outros insumos\n",
              "enum": [
                "FOR PRODUCT",
                "FOR MERCHANDISE",
                "NO RESTRICTION",
                "SERVICE",
                "FEEDSTOCK",
                "FIXED ASSETS",
                "PACKAGING",
                "PRODUCT IN PROCESS",
                "SUBPRODUCT",
                "INTERMEDIATE PRODUCT",
                "MATERIAL FOR USAGE AND CONSUMPTION",
                "OTHER INPUTS"
              ]
            },
            "manufacturerEquivalent": {
              "type": "boolean",
              "description": "Item is merchandise but will be considered product"
            },
            "appropriateIPIcreditWhenInGoing": {
              "type": "boolean",
              "description": "Inform that this item will have rights to aprropriate IPI credit"
            },
            "appropriateICMScreditWhenInGoing": {
              "type": "boolean",
              "description": "Inform that this item will have rights to aprropriate IPI credit"
            },
            "usuallyAppropriatePISCOFINSCredit": {
              "type": "boolean",
              "description": "Subject to appropriate PIS/COFINS credit, when NO CUMULATIVE"
            },
            "isPisCofinsEstimatedCredit": {
              "type": "boolean",
              "description": "The credit PIS/COFINS is subject to purchase form companies, but exist some exceptions, when the credit will be a estimated amount"
            },
            "piscofinsRevenueType": {
              "description": "- '01' # Vinculada Exclusivamente a Receita Tributada no Mercado Interno\n- '02' # Exclusivamente a Receita Não Tributada no Mercado Interno\n- '03' # Exclusivamente a Receita de Exportação\n- '04' # Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno\n- '05' # Vinculada a Receitas Tributadas no Mercado Interno e de Exportação\n- '06' # Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação\n- '07' # Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno, e de Exportação\n",
              "type": "string",
              "enum": [
                "01",
                "02",
                "03",
                "04",
                "05",
                "06",
                "07"
              ]
            },
            "icmsBaseDiscountForMonoPhaseSocialContr": {
              "type": "number",
              "format": "double",
              "description": "Discount allowed on icms base when PIS/COFINS are Monophase"
            },
            "cean": {
              "type": "string",
              "pattern": "[0-9]{0}|[0-9]{8}|[0-9]{12,14}",
              "description": "GTIN NUMBER"
            },
            "nve": {
              "type": "string",
              "pattern": "[A-Z]{2}[0-9]{4}",
              "description": "Nomenclatura de Valor aduaneio e Estatístico - NCM extension code"
            },
            "salesUnit": {
              "type": "string",
              "maxLength": 6
            },
            "salesUnitIPIfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to IPI taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "salesUnitIcmsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to ICMS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "salesUnitIcmsStfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to ICMS-ST taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "salesUnitPisCofinsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert sales quantity to PIS/COFINS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnit": {
              "type": "string",
              "maxLength": 6
            },
            "purchaseUnitIPIfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to IPI taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnitIcmsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to ICMS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnitIcmsStfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to ICMS-ST taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "purchaseUnitPisCofinsfactor": {
              "type": "number",
              "format": "double",
              "description": "factor to convert purchase quantity to PIS/COFINS taxable quantity when it is by SRF Statutory Retail Price (Pauta)"
            },
            "firstUse": {
              "type": "boolean",
              "description": "When the product is new, and will be retail, firt time that it exit it is subject to IPI"
            }
          }
        }
      ]
    },
    "ItemService": {
      "allOf": [
        {
          "$ref": "#/definitions/ItemSimple"
        },
        {
          "type": "object",
          "required": [
            "cityTaxConf"
          ],
          "properties": {
            "withLaborAssignment": {
              "type": "boolean",
              "description": "Applies the \"is Labor Assignment\" tax scenario. (Cessão de mão de obra).\n"
            },
            "cityTaxConf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemService_CityTaxConf"
              }
            }
          }
        }
      ]
    },
    "Location": {
      "allOf": [
        {
          "$ref": "#/definitions/Address"
        },
        {
          "title": "Location",
          "type": "object",
          "required": [
            "companyId",
            "code",
            "type"
          ],
          "properties": {
            "companyId": {
              "description": "Company ID",
              "type": "string",
              "format": "uuid",
              "maxLength": 36
            },
            "code": {
              "type": "string",
              "maxLength": 60,
              "description": "this property identify the location, it is unique for this company"
            },
            "type": {
              "type": "string",
              "enum": [
                "ShipFrom",
                "ShipTo",
                "ServiceRendered"
              ],
              "description": "this property identify the location, it is unique for this company"
            },
            "email": {
              "type": "string",
              "maxLength": 60,
              "description": "Email"
            },
            "federalTaxId": {
              "type": "string",
              "description": "Federal tax id, CNPJ or CPF"
            },
            "stateTaxId": {
              "type": "string",
              "description": "state tax id for this location"
            },
            "secondaryStateTaxId": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "stateTaxId": {
                    "type": "string"
                  },
                  "state": {
                    "$ref": "#/definitions/StateEnum"
                  }
                }
              }
            },
            "cityTaxId": {
              "type": "string",
              "maxLength": 15,
              "description": "City Tax ID"
            },
            "suframa": {
              "type": "string",
              "pattern": "([0-9]{8,9})?"
            },
            "mainActivity": {
              "description": "Main location activity",
              "type": "string",
              "enum": [
                "commerce",
                "industry",
                "service"
              ]
            },
            "nfseProcessModel": {
              "description": "- 'edi' # City hall has web service and the integration is automatic\n- 'xml' # Create RPS specific to City, bat does not have webservice integration\n- 'rps' # Create a generic RPS, NF is by hands\n",
              "type": "string",
              "enum": [
                "edi",
                "xml",
                "rps"
              ]
            }
          }
        }
      ]
    },
    "CompanyEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "$ref": "#/definitions/EntityLocation"
        }
      ]
    },
    "EntityEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity name, official name (Razão Social)"
        },
        "federalTaxId": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'"
        }
      }
    },
    "EntityEntryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityEntry"
      }
    },
    "IcmsConfByState": {
      "type": "object",
      "required": [
        "code",
        "state"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 60,
          "description": "Identify the IcmsConfState in namespace"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "name for this configuration"
        },
        "startDate": {
          "type": "string",
          "description": "date when this configuration values starts"
        },
        "expirationDate": {
          "type": "string",
          "description": "date when this configuration values expire"
        },
        "subjectToST": {
          "type": "boolean",
          "description": "inform that the item linked to this configuration is subject to ICMS ST on this state"
        },
        "inactive": {
          "type": "boolean",
          "description": "set this configuration to Inactive"
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "On sales process inform the CST hat the item linked to this configuration is subject to for the own ICMS\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "calcMode": {
          "type": "string",
          "enum": [
            "BYMVARATE",
            "SRP",
            "MMSRP",
            "OPERATIONAMOUNT"
          ],
          "description": "how this ICMS will be calculed for itens linked to this configuration"
        },
        "discountRateForMonoPhase": {
          "type": "number",
          "format": "double",
          "description": "discount if the item is subject to monophase PIS/COFINS for transactions inside state"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "icmsBaseDiscount": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "msrp": {
          "type": "number",
          "format": "double",
          "description": "SRP or MMSRP amount base for this icms configuration"
        },
        "mvaRate": {
          "type": "number",
          "format": "double",
          "description": "ICMS mva rate to define calc base"
        },
        "msrpUnit": {
          "type": "string",
          "maxLength": 6,
          "description": "unit used to SRP amount value"
        },
        "icmsLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "Code for the ICM legal reason, this message will be placed on invoice."
        },
        "fcpRate": {
          "type": "number",
          "format": "double",
          "description": "Fundo de Combate à pobreza / Fund Against Poverty"
        },
        "icmsSTConf": {
          "type": "object",
          "properties": {
            "icmsStLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the ICM-ST legal reason, this message will be placed on invoice."
            },
            "hasReductionOfMVAForSimples": {
              "type": "boolean",
              "description": "inform that substituted is tax regime Simplified the operation MVA will be reduced"
            },
            "reductionOfMVAForSimples": {
              "type": "number",
              "format": "double",
              "description": "mva reduction when substituted is tax regime Simplified."
            },
            "reductionOfMVAForSimplesLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for MVA Reduction legal reason, this message will be placed on invoice, when destionation entity is Simplified."
            },
            "calcMode": {
              "type": "string",
              "enum": [
                "BYMVARATE",
                "SRP",
                "MSRP"
              ],
              "description": "how this ICMS-ST will be calculed for itens linked to this configuration"
            },
            "mvaRate": {
              "type": "number",
              "format": "double",
              "description": "ICMS-ST mva rate to define calc base"
            },
            "icmsStBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS rate - Redução da BC ICMS ST (%)"
            },
            "srp": {
              "type": "number",
              "format": "double",
              "description": "SRP or MSRP amount base for this ICMS-ST configuration"
            },
            "srpUnit": {
              "type": "string",
              "maxLength": 6,
              "description": "unit used to srv amount value"
            }
          }
        },
        "icmsInterStateConf": {
          "type": "array",
          "description": "the map key is state code",
          "items": {
            "$ref": "#/definitions/IcmsConfInterState"
          }
        }
      }
    },
    "IcmsConfInterState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "icmsCSTInterstate": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "The CST inform if the interstate operation is taxable or not taxable and  when not taxable inform type\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "The CST inform f this item is taxable or not taxable no target state and when not taxable inform type\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "calcMode": {
          "type": "string",
          "enum": [
            "BYMVARATE",
            "SRP",
            "MMSRP",
            "OPERATIONAMOUNT"
          ],
          "description": "how this ICMS will be calculed for itens linked to this configuration"
        },
        "discountRateForMonoPhase": {
          "type": "number",
          "format": "double",
          "description": "discount if the item is subject to monophase PIS/COFINS when operation interstate"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "ICMS rate"
        },
        "fcpRate": {
          "type": "number",
          "format": "double",
          "description": "FCP rate (Fundo de Combate à Probreza / Fund Against Poverty"
        },
        "icmsBaseDiscount": {
          "type": "number",
          "format": "double",
          "description": "ICMS discount rate"
        },
        "icmsBaseDiscountInterState": {
          "type": "number",
          "format": "double",
          "description": "ICMS interstate discount rate"
        },
        "icmsBaseDiscountInterStateForImported": {
          "type": "number",
          "format": "double",
          "description": "ICMS interstate discount rate"
        },
        "msrp": {
          "type": "number",
          "format": "double",
          "description": "SRP or MMSRP amount base for this icms configuration"
        },
        "mvaRate": {
          "type": "number",
          "format": "double",
          "description": "ICMS MVA rate to define calc base"
        },
        "msrpUnit": {
          "type": "string",
          "maxLength": 6,
          "description": "unit used to SRP amount value"
        },
        "icmsLegalReason": {
          "type": "string",
          "maxLength": 60,
          "description": "Code for the ICM legal reason, this message will be placed on invoice."
        },
        "icmsSTConf": {
          "type": "object",
          "properties": {
            "protocolType": {
              "type": "string",
              "enum": [
                "COVENANT",
                "PROTOCOL",
                "NOTHING"
              ]
            },
            "icmsStLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for the ICM-ST legal reason, this message will be placed on invoice."
            },
            "hasReductionOfMVAForSimples": {
              "type": "boolean",
              "description": "inform that substituted is tax regime Simplified the operation MVA will be reduced"
            },
            "reductionOfMVAForSimples": {
              "type": "number",
              "format": "double",
              "description": "MVA reduction when substituted is tax regime Simplified."
            },
            "reductionOfMVAForSimplesLegalReason": {
              "type": "string",
              "maxLength": 60,
              "description": "Code for MVA Reduction legal reason, this message will be placed on invoice, when destionation entity is Simplified."
            },
            "calcMode": {
              "type": "string",
              "enum": [
                "BYMVARATE",
                "SRP",
                "MSRP"
              ],
              "description": "how this ICMS-ST will be calculed for itens linked to this configuration"
            },
            "icmsStBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS rate - Redução da BC ICMS ST (%)"
            },
            "mvaRate": {
              "type": "number",
              "format": "double",
              "description": "ICMS-ST MVA rate to define calc base"
            },
            "srp": {
              "type": "number",
              "format": "double",
              "description": "SRP or MSRP amount base for this ICMS-ST configuration"
            },
            "srpUnit": {
              "type": "string",
              "maxLength": 6,
              "description": "unit used to SRP amount value"
            }
          }
        }
      }
    },
    "ProcessScenario": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxConf"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 60,
              "description": "Process name to Identify this configuration"
            },
            "description": {
              "type": "string",
              "description": "description detail about process"
            },
            "class": {
              "type": "string",
              "maxLength": 60,
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "type": {
              "type": "string",
              "enum": [
                "SALES",
                "PURCHASE",
                "SALES_RETURN",
                "PURCHASE_RETURN",
                "TRANSFER_RETURN",
                "SHIPPING",
                "SHIPPING_RETURN",
                "TRANSFER",
                "RECEIPT_AJUSTE",
                "TRANSFER_AJUSTE"
              ]
            },
            "wayType": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ],
              "description": "inform if the transaction is an operation to internalizing (receive) item or value"
            },
            "goal": {
              "type": "string",
              "enum": [
                "Normal",
                "Complementary",
                "Voided",
                "Replacement",
                "Return",
                "Adjustment"
              ],
              "description": "- 'Normal' # Normal\n- 'Complementary' # Complemento de Valores\n- 'Voided' # Anulação\n- 'Replacement' # Substituto\n- 'Return' # Devolução ou retorno\n- 'Adjustment' # Ajuste\n"
            },
            "overWriteCFOP": {
              "type": "boolean",
              "description": "inform that the configuration process overwrites the cfop configuration."
            },
            "eDocCreatorReference": {
              "type": "boolean",
              "description": "Identify  the reference place to calc.\nIdentificar o local de referencia de cálculo.\n"
            },
            "cfops": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CfopConf"
              }
            }
          }
        }
      ]
    },
    "CfopConf": {
      "allOf": [
        {
          "$ref": "#/definitions/TaxConf"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 60
            },
            "class": {
              "type": "string",
              "maxLength": 60,
              "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
            },
            "description": {
              "type": "string",
              "maxLength": 512
            },
            "wayType": {
              "type": "string",
              "enum": [
                "in",
                "out"
              ],
              "description": "inform if the transaction is an operation to internalizing item or value"
            },
            "codInState": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are within the same state."
            },
            "codOtherState": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are to another state."
            },
            "codOtherCountry": {
              "type": "integer",
              "description": "CFOP code (tax code operation) when the transactions are to another country."
            },
            "productType": {
              "type": "string",
              "enum": [
                "FOR PRODUCT",
                "FOR MERCHANDISE",
                "NO RESTRICTION"
              ],
              "description": "this field is used to define right CFOP, one operation type can be specialized to item product, item merchandise or generic"
            },
            "operationToTaxPayerOtherState": {
              "type": "boolean",
              "description": "field used to indicate an operation to ICMS tax payer"
            },
            "operationWithST": {
              "type": "boolean",
              "description": "field used to indicate an operation to items sibject to ICMS-ST"
            },
            "operationToFreeZone": {
              "type": "boolean",
              "description": "field used to indicate an operation to free zone"
            },
            "specificForProductClass": {
              "type": "string",
              "enum": [
                "OTHERS",
                "COMMUNICATION",
                "ENERGY",
                "TRANSPORT",
                "FUEL AND LUBRICANT",
                "VEHICLE",
                "ALCOHOLIC BEVERAGES",
                "WEAPONS",
                "AMMO",
                "PERFUME",
                "TOBACCO"
              ],
              "description": "field used to indicate an operation to some product class specifically"
            }
          }
        }
      ]
    },
    "TaxConf": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 40,
          "description": "main unique identificator"
        },
        "class": {
          "type": "string",
          "maxLength": 60,
          "description": "Natureza da Operação\nOperation Class\n"
        },
        "stockImpact": {
          "type": "boolean",
          "description": "Inform that the process has inventory impact."
        },
        "financialImpact": {
          "type": "boolean",
          "description": "Inform that the process has financial impact."
        },
        "cstIPI": {
          "type": "string",
          "description": "Inform if this process is subject to IPI taxation on output process\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE    \n- 'I'  # IMMUNE\n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n- 'R'  # RETURN OF IPI\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "I",
            "O",
            "OZ",
            "R"
          ]
        },
        "ipiLegalTaxClass": {
          "type": "string",
          "description": "Legal tax classificação for IPI (enquadramento)\nWhen the processo has CST IPI 52 or 54, is mandatory inform Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU=\n"
        },
        "lookupIPIFromReferredTransaction": {
          "type": "boolean",
          "description": "Busca IPI para adicionar na base de calculo de ICMS do item de uma nota referenciada, Exemplo, processo de venda para entrega futura e simples remessa de uma venda de entrega futura.\nLookup IPI tax to add to ICMS Tax base from same item of Referred Transaction\n"
        },
        "accruablePISTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to PIS taxation or exempt\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE\n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "O",
            "OZ"
          ]
        },
        "pisExemptLegalReasonCode": {
          "type": "string",
          "description": "Reference to a tax reason record ID."
        },
        "pisExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specifi reason, this field has the description"
        },
        "accruableCOFINSTaxation": {
          "type": "string",
          "description": "Inform if this item by nature is subject to COFINS taxation or exempt\n- 'T'  # TAXABLE\n- 'Z'  # TAXABLE WITH RATE=0.00\n- 'E'  # EXEMPT\n- 'H'  # SUSPENDED\n- 'N'  # NO TAXABLE    \n- 'O'  # OTHER\n- 'OZ' # OTHER AND ZERO VALUES\n",
          "enum": [
            "T",
            "Z",
            "E",
            "H",
            "N",
            "O",
            "OZ"
          ]
        },
        "cofinsExemptLegalReasonCode": {
          "type": "string",
          "maxLength": 3,
          "description": "When exempt, taxable with zero, suspended, not taxable, this field holds the official code number"
        },
        "cofinsExemptLegalReason": {
          "type": "string",
          "maxLength": 1024,
          "description": "When specifi reason, this field has the description"
        },
        "allowIPIcreditWhenInGoing": {
          "type": "boolean",
          "description": "Inform that the process allow IPI credit to Input process"
        },
        "icmsConf": {
          "type": "array",
          "description": "the map key is state code",
          "items": {
            "$ref": "#/definitions/IcmsTaxConf"
          }
        }
      }
    },
    "IcmsTaxConf": {
      "allOf": [
        {
          "$ref": "#/definitions/IcmsTaxConfBase"
        },
        {
          "type": "object",
          "properties": {
            "sameforAllDestination": {
              "type": "boolean",
              "description": "when this attribute is true, the relationShip dont need be analysed"
            },
            "relationShip": {
              "type": "array",
              "description": "the mapping key is state code / A chave do mapeamento é o código do Estado.",
              "items": {
                "$ref": "#/definitions/IcmsTaxConfBase"
              }
            }
          }
        }
      ]
    },
    "IcmsTaxConfBase": {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "icmsCSOSN": {
          "type": "string",
          "description": "when the company is tax regime Simples uses CSOSN and for the same type of transaction, CST and CSOSN cant match",
          "enum": [
            "T",
            "E",
            "N",
            "O",
            "OZ"
          ]
        },
        "icmsCST": {
          "type": "string",
          "enum": [
            "T",
            "E",
            "H",
            "D",
            "N",
            "O",
            "OZ"
          ],
          "description": "On sales process inform the CST hat the item linked to this configuration is subject to\n- 'T' # TAXABLE 00-Tributada\n- 'E' # EXEMPT 40-Isenta\n- 'H' # SUSPENDED 50-Suspensão\n- 'D' # DEFERMENT 51-Diferimento\n- 'N' # NO TAXABLE 41-Nao tributada\n- 'O' # OTHER 90-Outras\n- 'OZ' # OTHER AND ZERO VALUES 90-Outras\n"
        },
        "deferralrate": {
          "type": "number",
          "format": "double",
          "description": "Percentual deferral rate, applied over ICMS tax when CST is D DEFEREMENT"
        },
        "messageCode": {
          "type": "string",
          "maxLength": 60,
          "description": "Message to add to NF when this configuration is used"
        }
      }
    },
    "ItemSimple": {
      "required": [
        "code",
        "agast"
      ],
      "properties": {
        "companyId": {
          "description": "Company ID",
          "type": "string",
          "format": "uuid",
          "maxLength": 36
        },
        "code": {
          "type": "string",
          "description": "ERP Code",
          "maxLength": 60
        },
        "agast": {
          "type": "string",
          "description": "Agast Code",
          "maxLength": 60
        },
        "description": {
          "type": "string",
          "description": "Item Description",
          "maxLength": 60
        }
      }
    },
    "ItemService_CityTaxConf": {
      "type": "object",
      "required": [
        "cityCode",
        "serviceCode"
      ],
      "properties": {
        "hasCPOM": {
          "type": "boolean",
          "description": "inform if seller has CPOM registry on destionation city, for this service."
        },
        "cityCode": {
          "type": "string",
          "description": "The IBGE code of the related city. The city's ISS properties may be checked and set through\nthe `taxconf/iss/{cityCode}` service; (ISSConfByCity)\n"
        },
        "serviceCode": {
          "type": "string",
          "description": "The service code which this item is registered at the target city.\nThe \"tax behavior\" of this item at the target city may be checked and set through\nthe `taxconf/iss/{cityCode}/{serviceCode}` service. (ISSConfService)\n"
        },
        "isCustom": {
          "type": "boolean",
          "description": "Indicates this is a company-scoped, custom config."
        }
      }
    },
    "eInvoiceReturn_Status": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "eInvoiceReturn_Obj": {
      "type": "object",
      "properties": {
        "base64": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "eInvoiceReturn_PDF": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/eInvoiceReturn_Status"
        },
        "pdf": {
          "$ref": "#/definitions/eInvoiceReturn_Obj"
        }
      }
    },
    "eInvoiceReturn": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/eInvoiceReturn_Status"
        },
        "pdf": {
          "$ref": "#/definitions/eInvoiceReturn_Obj"
        },
        "xml": {
          "$ref": "#/definitions/eInvoiceReturn_Obj"
        }
      }
    },
    "SefazDisablementIn": {
      "type": "object",
      "required": [
        "serie",
        "init"
      ],
      "properties": {
        "model": {
          "type": "string",
          "enum": [
            "NFe",
            "NFCe"
          ]
        },
        "serie": {
          "type": "integer",
          "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)\n"
        },
        "message": {
          "type": "string",
          "maxLength": 255,
          "minLength": 15
        },
        "init": {
          "type": "number",
          "description": "First number of disable range.",
          "maxLength": 9
        },
        "end": {
          "type": "number",
          "description": "Last number of disable range.",
          "maxLength": 9
        }
      }
    },
    "SefazItPutIn": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "maxLength": 1000
        }
      }
    },
    "SefazItDeleteIn": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "maxLength": 255,
          "minLength": 15
        }
      }
    },
    "SefazItManifestIn": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "- '210200' # 'Confirmacao da Operacao',\n- '210210' # 'Ciencia da Operacao',\n- '210220' # 'Desconhecimento da Operacao',\n- '210240' # 'Operacao nao Realizada'\n",
          "enum": [
            "210200",
            "210210",
            "210220",
            "210240"
          ]
        },
        "message": {
          "type": "string",
          "maxLength": 255,
          "minLength": 15
        }
      }
    },
    "TransactionForSefazGoods": {
      "type": "object",
      "required": [
        "header",
        "lines",
        "calculatedTaxSummary"
      ],
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForSefazGoods"
        },
        "lines": {
          "type": "array",
          "maxItems": 990,
          "items": {
            "$ref": "#/definitions/LineForSefazGoods"
          }
        },
        "calculatedTaxSummary": {
          "$ref": "#/definitions/CalculatedTaxSummaryForSefazGoods"
        }
      }
    },
    "TransactionForNfse": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/HeaderForNfse"
        },
        "line": {
          "$ref": "#/definitions/LineForNfse"
        }
      }
    },
    "HeaderForSefazGoods": {
      "type": "object",
      "required": [
        "participants",
        "companyLocation"
      ],
      "properties": {
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "participants": {
          "description": "List of transaction participants, Seller, Buyer, Carrier",
          "type": "object",
          "properties": {
            "entity": {
              "$ref": "#/definitions/EntityForGoods"
            },
            "transporter": {
              "$ref": "#/definitions/EntityForGoods"
            }
          }
        },
        "nfAccessKey": {
          "type": "string",
          "description": "This is the public NF id. With this number is possible get invoice information directly from government."
        },
        "nfceQrCode": {
          "type": "string",
          "maxLength": 600,
          "minLength": 100,
          "description": "qr code printed on DANFE;"
        },
        "transactionModel": {
          "type": "string",
          "default": "55",
          "enum": [
            "01",
            "1B",
            "02",
            "2D",
            "2E",
            "04",
            "06",
            "07",
            "08",
            "8B",
            "09",
            "10",
            "11",
            "13",
            "14",
            "15",
            "16",
            "18",
            "21",
            "22",
            "26",
            "27",
            "28",
            "29",
            "55",
            "57",
            "59",
            "60",
            "65"
          ],
          "description": "- '01' # Nota Fiscal 1/1A\n- '1B' # Nota Fiscal Avulsa\n- '02' # Nota Fiscal de Venda a-Consumidor\n- '2D' # Cupom Fiscal\n- '2E' # Cupom Fiscal-Bilhete de Passagem\n- '04' # Nota Fiscal de Produtor\n- '06' # Nota Fiscal/Conta de Energia Elétrica\n- '07' # Nota Fiscal de Serviço de Transporte\n- '08' # Conhecimento de Transporte Rodoviário de-Cargas\n- '8B' # Conhecimento de Transporte de-Cargas Avulso\n- '09' # Conhecimento de Transporte Aquaviário de-Cargas\n- '10' # Conhecimento Aéreo\n- '11' # Conhecimento de Transporte Ferroviário de-Cargas\n- '13' # Bilhete de Passagem Rodoviário\n- '14' # Bilhete de Passagem Aquaviário\n- '15' # Bilhete de Passagem e-Nota de-Bagagem\n- '16' # Bilhete de Passagem Ferroviário\n- '18' # Resumo de Movimento Diário\n- '21' # Nota Fiscal de Serviço de-Comunicação\n- '22' # Nota Fiscal de Serviço de Telecomunicação\n- '26' # Conhecimento de Transporte Multimodal de-Cargas\n- '27' # Nota Fiscal De Transporte Ferroviário De-Carga\n- '28' # Nota Fiscal/Conta de Fornecimento de Gás-Canalizado\n- '29' # Nota Fiscal/Conta de Fornecimento de Água-Canalizada\n- '55' # Nota Fiscal Eletrônica (NF-e)\n- '57' # Conhecimento de Transporte Eletrônico (CT-e)\n- '59' # Cupom Fiscal Eletrônico (CF-e-SAT)\n- '60' # Cupom Fiscal Eletrônico (CF-e-ECF)\n- '65' # Nota Fiscal Eletrônica ao-Consumidor Final (NFC-e)\n"
        },
        "transactionClass": {
          "type": "string",
          "description": "Natureza da Opreração - 'Describe kind of this transaction, summary"
        },
        "currency": {
          "type": "string",
          "default": "BRL",
          "description": "currency code"
        },
        "companyLocation": {
          "type": "string",
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        },
        "transactionDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format, create transaction date"
        },
        "shippingDate": {
          "type": "string",
          "description": "This string is the transaction date in ISO 8601 format, when products were shipped, can be empty or absent"
        },
        "additionalInfo": {
          "$ref": "#/definitions/AdditionalInformation"
        },
        "tpImp": {
          "type": "string",
          "description": "how the document will be printed\n- '0' # without DANFE;\n- '1' # DANFe Letter;\n- '2' # DANFe Landscape;\n- '3' # DANFe Simplified;\n- '4' # DANFe NFC-e;\n- '5' # DANFe NFC-e e-mail\n",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5"
          ]
        },
        "idDest": {
          "description": "This indicator inform transaction target place, when is AUTOMATIC the company address and entity address are analyzed to identify type of transaction target place\n1- same state; 2 - interstate; 3-with exterior. Exist some cases where is necessary force this situation like when buyer from another state buy something in loco, the address are from different states, but transaction no. \nIdentificador de Local de destino da operação, na opção AUTOMATIC endereços da Companhia e da entidade destino são analisados para\nsaber se é uma operação dentro do mesmo estado, interestadual ou com o exterior. Há situações onde é necessário forçar este indicador como por exemplo \nQuando uma pessoa com endereço em outro estado, compra uma mercadoria de forma presencial, é uma operação interna apesar dos endereços dos envolvidos estarem em estados distintos.\n- 0 # AUTOMATIC - DEFAULT\n- 1 # Interna;\n- 2 # Interestadual;\n- 3 # Exterior)\n",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "default": 0
        },
        "indPres": {
          "type": "string",
          "description": "Presence indicator\n- '0' # Not applicable\n- '1' # Presential;\n- '2' # Remote, internet;\n- '3' # Remote, phone;\n- '4' # NFC-e home delivery;\n- '9' # Remote, others\n",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "9"
          ]
        },
        "invoiceNumber": {
          "type": "integer",
          "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)"
        },
        "invoiceSerial": {
          "type": "integer",
          "description": "Invoice number, sequential unique by invoice serial (Número da nota fiscal)\n"
        },
        "defaultLocations": {
          "$ref": "#/definitions/DefaultLocations"
        },
        "transport": {
          "description": "Shipment",
          "$ref": "#/definitions/Transport"
        },
        "nfRef": {
          "description": "Transactions or other invoices referenced",
          "type": "array",
          "maxItems": 500,
          "items": {
            "$ref": "#/definitions/NRef"
          }
        },
        "payment": {
          "$ref": "#/definitions/Payment"
        },
        "purchaseInfo": {
          "$ref": "#/definitions/PurchaseInfo"
        },
        "export": {
          "$ref": "#/definitions/ExportInfo"
        }
      }
    },
    "LineForSefazGoods": {
      "type": "object",
      "required": [
        "lineCode",
        "itemCode",
        "numberOfItems",
        "lineAmount",
        "itemDescription",
        "taxDetails"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This is unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "maxLength": 60,
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states."
        },
        "avalaraGoodsAndServicesType": {
          "type": "string",
          "description": "AGAST CODE for itemCode"
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal 11 integers and 1 to 4 decimals captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "returnedPercentageAmount": {
          "type": "number",
          "format": "double",
          "description": "when is return operation this field inform the percentage of returned itens. This decimal max 3 integers and 2 decimals, v >=0.00 and v <= 100.00"
        },
        "lineUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "This decimal 11 integers and 1 to 10 decimals captures the unit price of this line."
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "In its simplest form lineAmount = (item price * numberOfItems). If taxIncluded is 'true', lineAmount = (item price * numberOfItems + tax)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Discount conditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "discount unconditional, This decimal 13 integers and 0 to 2 decimals"
        },
        "operationTypeReceiptMap": {
          "type": "string",
          "maxLength": 60,
          "description": "Mapping table used to discover the CFOP when execute the Tax receipt in funciotn of CFOP Received and Item Type\nthis property is used only if eDocCreator=others and eDocCreatorPerspective=false\n"
        },
        "legalReason": {
          "type": "object",
          "description": "Legal Reason for this tax scenario",
          "properties": {
            "id": {
              "type": "string",
              "description": "Internal ID"
            },
            "name": {
              "type": "string",
              "description": "Short name to this message"
            }
          }
        },
        "cfop": {
          "type": "integer",
          "description": "Fiscal Operation Code of transport service"
        },
        "hasStockImpact": {
          "type": "boolean",
          "description": "return if this transaction has stock impact for this process or CFOP"
        },
        "hasFinantialImpact": {
          "type": "boolean",
          "description": "return if this transaction has finantial impact for this process or CFOP"
        },
        "freightAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "insuranceAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "otherCostAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal 13 integers and 0 to 2 decimals"
        },
        "indTotType": {
          "type": "boolean",
          "default": true,
          "description": "The item value will compose the invoice total value."
        },
        "referencedItem": {
          "type": "object",
          "description": "order number, information used for B2B control process",
          "properties": {
            "refNFe": {
              "type": "string",
              "maxLength": 44,
              "pattern": "[0-9]{44}"
            },
            "lineCode": {
              "type": "integer",
              "description": "This identifier for this line in the transaction"
            }
          }
        },
        "orderNumber": {
          "type": "string",
          "minLength": 1,
          "maxLength": 15,
          "description": "order number, information used for B2B control process"
        },
        "orderItemNumber": {
          "type": "string",
          "pattern": "[0-9]{1,6}",
          "description": "number of the item from order number, information used for B2B control process"
        },
        "fciNumber": {
          "type": "string",
          "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
          "description": "Gloal Unique identifier (Importation form)"
        },
        "recopiNumber": {
          "type": "string",
          "maxLength": 20,
          "pattern": "[0-9]{20}",
          "description": "RECOPI number"
        },
        "infAdProd": {
          "type": "string",
          "maxLength": 500,
          "description": "additional information about product (referenced standard, complementary info, etc)"
        },
        "vehicle": {
          "$ref": "#/definitions/Vehicle"
        },
        "medicine": {
          "$ref": "#/definitions/Medicine"
        },
        "weapon": {
          "$ref": "#/definitions/Weapon"
        },
        "fuel": {
          "$ref": "#/definitions/Fuel"
        },
        "entityIsIcmsSubstitute": {
          "type": "boolean",
          "description": "Inform that for this item the Entity referenced is ICMS Substitute"
        },
        "isTransportIcmsWithheld": {
          "type": "boolean",
          "description": "Inform that this item has ICMS withheld for transport value service."
        },
        "icmsTaxRelief": {
          "type": "object",
          "required": [
            "reasonCode"
          ],
          "properties": {
            "reasonCode": {
              "type": "string",
              "enum": [
                "1",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "16"
              ],
              "description": "When item transaction subject to desoneration, this is the reason code\n- '1' # Táxi;\n- '3' # Produtor Agropecuário;\n- '4' # Frotista/Locadora;\n- '5' # Diplomático/Consular;\n- '6' # Utilitários e Motocicletas da Amazônia Ocidental e Áreas de Livre Comércio (Resolução 714/88 e 790/94 – CONTRAN e suas alterações);\n- '7' # SUFRAMA;\n- '8' # Venda a órgão Público;\n- '9' # Outros\n- '10' # Deficiente Condutor\n- '11' # Deficiente não condutor\n- '12' # Fomento agropecuário\n- '16' # Olimpíadas Rio 2016\n"
            },
            "taxBaseDiscount": {
              "type": "number",
              "format": "double",
              "description": "ICMS Tax base rate discount  (desconto na base do ICMS referetne a desoneração)"
            },
            "taxAmount": {
              "type": "number",
              "format": "double",
              "description": "Amount for Icms Relief (desoneração)"
            }
          }
        },
        "export": {
          "description": "Exportation detail",
          "type": "array",
          "maxItems": 500,
          "items": {
            "type": "object",
            "properties": {
              "drawbackNumber": {
                "type": "string",
                "maxLength": 11,
                "pattern": "[0-9]{0,11}"
              },
              "indExport": {
                "type": "object",
                "description": "indirect exportation",
                "required": [
                  "registerNumber",
                  "accessKey",
                  "quantity"
                ],
                "properties": {
                  "registerNumber": {
                    "type": "string",
                    "maxLength": 12,
                    "pattern": "[0-9]{0,12}",
                    "description": "Exportation register number"
                  },
                  "accessKey": {
                    "type": "string",
                    "maxLength": 44,
                    "pattern": "[0-9]{44}",
                    "description": "invoice access key received to export"
                  },
                  "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "This decimal 11 integers and 0 to 4 decimals, quantity exported in real"
                  }
                }
              }
            }
          }
        },
        "di": {
          "description": "Import declaration",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "required": [
              "diNumber",
              "registerDateDI",
              "clearanceSite",
              "clearanceState",
              "transportDIType",
              "intermediateType",
              "adi"
            ],
            "properties": {
              "customsValue": {
                "type": "number",
                "format": "double",
                "description": "customs value, valor aduaneiro (II Block of NFe)"
              },
              "diNumber": {
                "type": "string",
                "maxLength": 12,
                "minLength": 1,
                "description": "Import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
              },
              "registerDateDI": {
                "type": "string",
                "description": "Register date of import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)"
              },
              "clearanceSite": {
                "type": "string",
                "maxLength": 60,
                "minLength": 1,
                "description": "Clerance Site\nLocal do desembaraço aduaneiro\n"
              },
              "clearanceState": {
                "$ref": "#/definitions/StateEnum",
                "description": "Clerance Site State\nEstado onde ocorrreu o desembaraço aduaneiro\n"
              },
              "clearanceDate": {
                "type": "string",
                "description": "Clerance date"
              },
              "transportDIType": {
                "description": "- '1' # Maritima\n- '2' # Fluvial\n- '3' # Lacustre\n- '4' # Aerea\n- '5' # Postal\n- '6' # Ferroviaria\n- '7' # Rodoviaria\n- '8' # Conduto\n- '9' # Meios Proprios\n- '10' # Entrada/Saida Ficta\n",
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "10"
                ]
              },
              "afrmmValue": {
                "type": "number",
                "format": "double",
                "description": "Aditional amount to freight to renew merchant marine, This decimal 13 integers and 2 decimals\n[Valor Adicional ao frete para renovação de marinha mercante]\n"
              },
              "intermediateType": {
                "description": "- '1' # On One's Own [1-por conta propria]\n- '2' # On Behalf And Order [2-por conta e ordem]\n- '3' # Order [3-encomenda]\n",
                "type": "string",
                "enum": [
                  "1",
                  "2",
                  "3"
                ]
              },
              "buyerFederalTaxID": {
                "type": "string",
                "pattern": "[0-9]{14}",
                "description": "Buyer federal tax id\nCNPJ do comprador ou encomendante\n"
              },
              "buyerState": {
                "$ref": "#/definitions/StateEnum",
                "description": "Buyer sate\nEstado do comprador ou encomendante\n"
              },
              "exporterCode": {
                "type": "string",
                "maxLength": 60,
                "minLength": 1,
                "description": "Exporter code"
              },
              "adi": {
                "type": "array",
                "maxItems": 100,
                "description": "aditional import declaration",
                "items": {
                  "type": "object",
                  "required": [
                    "addNumber",
                    "sequentialNumber",
                    "manufacturerCode"
                  ],
                  "properties": {
                    "addNumber": {
                      "type": "integer",
                      "description": "aditional sequence number (1 to 100)"
                    },
                    "sequentialNumber": {
                      "type": "integer",
                      "description": "sequential item number for this adi, sequence number (1 to 999)"
                    },
                    "manufacturerCode": {
                      "type": "string",
                      "maxLength": 60,
                      "minLength": 1,
                      "description": "Manufatorer erp internal code"
                    },
                    "adiDiscount": {
                      "type": "number",
                      "format": "double",
                      "description": "This decimal 13 integers and 2 decimals, aditional adi discount"
                    },
                    "drawbackNumber": {
                      "type": "string",
                      "pattern": "[0-9]{0,11}",
                      "minLength": 1,
                      "description": "Drawback number"
                    }
                  }
                }
              }
            }
          }
        },
        "taxDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxDetailForSefaz"
          }
        },
        "extend": {
          "$ref": "#/definitions/AgastExtendForSefaz"
        }
      }
    },
    "CalculatedTaxSummaryForSefazGoods": {
      "type": "object",
      "required": [
        "subtotal",
        "taxByType"
      ],
      "properties": {
        "numberOfLines": {
          "type": "integer",
          "description": "Count of lines"
        },
        "taxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line taxed discounts"
        },
        "untaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "sum of all line untaxed discounts"
        },
        "subtotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute"
        },
        "totalTax": {
          "type": "number",
          "format": "double",
          "description": "sum of all line tax attribute"
        },
        "grandTotal": {
          "type": "number",
          "format": "double",
          "description": "sum of all line lineAmount attribute + sum of all line tax attribute not VAT - sum of all line lineTaxedDiscount attribute"
        },
        "taxByType": {
          "type": "object",
          "properties": {
            "icms": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsStSd": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsPartOwn": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsPartDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDifaFCP": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDifaDest": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDifaRemet": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsRf": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsDeson": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "icmsCredsn": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "pis": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "pisSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "cofins": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "cofinsSt": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "ipi": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "ipiReturned": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "ii": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "iof": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "aproxtribState": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            },
            "aproxtribFed": {
              "$ref": "#/definitions/TaxByTypeSummaryForSefazGoods"
            }
          }
        }
      }
    },
    "TaxDetailForSefaz": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "string",
          "enum": [
            "icms",
            "icmsSt",
            "icmsStSd",
            "icmsPartOwn",
            "icmsPartDest",
            "icmsDifaFCP",
            "icmsDifaDest",
            "icmsDifaRemet",
            "icmsRf",
            "icmsDeson",
            "icmsCredsn",
            "pis",
            "pisSt",
            "cofins",
            "cofinsSt",
            "ipi",
            "ipiReturned",
            "ii",
            "iof",
            "aproxtribCity",
            "aproxtribState",
            "aproxtribFed",
            "aproxtrib"
          ],
          "description": "Tax identificator"
        },
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        },
        "legalReason": {
          "type": "string",
          "description": "Legal Reason for this tax scenario"
        },
        "source": {
          "$ref": "#/definitions/CSTTableAEnum"
        },
        "cstB": {
          "$ref": "#/definitions/CSTTableBEnum"
        },
        "cst": {
          "type": "string"
        },
        "modBC": {
          "type": "string"
        },
        "pMVA": {
          "type": "number",
          "format": "double",
          "description": "Percent of Value-added margin (%)"
        },
        "pRedBC": {
          "type": "number",
          "format": "double",
          "description": "calc base percent of discount"
        },
        "pBCOp": {
          "type": "number",
          "format": "double",
          "description": "percent of calc base of own icms"
        },
        "ufst": {
          "$ref": "#/definitions/StateEnum"
        },
        "calcMode": {
          "$ref": "#/definitions/CalcModelEnum"
        },
        "legalTaxClass": {
          "type": "integer",
          "description": "Legal tax classificação for IPI (enquadramento tributário)"
        },
        "legalTaxClassDC": {
          "type": "integer",
          "description": "Legal tax classificação for IPI (enquadramento) for Drinks and Cigarettes"
        },
        "cnpjProd": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'\nFederal tax ID of real manufacturer, nly for exportation\n"
        },
        "sealCode": {
          "type": "string",
          "maxLength": 60,
          "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
        },
        "sealQuantity": {
          "type": "string",
          "pattern": "[0-9]{1,12}",
          "description": "Seal Code for ipi tax control (código do selo para controle de IPI)"
        },
        "icmsInterPartRate": {
          "type": "number",
          "format": "double",
          "description": "percent of icms apportionment between two states"
        },
        "icmsSesonReason": {
          "$ref": "#/definitions/ICMSSesonReason"
        },
        "perQuantityReturned": {
          "type": "number",
          "format": "double",
          "description": "percent of merchandise returned"
        }
      }
    },
    "AgastExtendForSefaz": {
      "type": "object",
      "properties": {
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, NCM or LC 116"
        },
        "ex": {
          "type": "integer",
          "description": "hsCode Exception for IPI tax"
        },
        "cest": {
          "type": "string",
          "pattern": "[0-9]{7}",
          "description": "tax substitution code - Codigo especificador da Substuicao Tributaria"
        },
        "cean": {
          "type": "string",
          "pattern": "[0-9]{0}|[0-9]{8}|[0-9]{12,14}",
          "description": "GTIN NUMBER"
        },
        "nve": {
          "type": "string",
          "pattern": "[A-Z]{2}[0-9]{4}",
          "description": "Nomenclatura de Valor aduaneio e Estatístico - NCM extension code"
        },
        "unit": {
          "type": "string",
          "maxLength": 6,
          "description": "Sales Unit"
        },
        "unitTaxable": {
          "type": "string",
          "maxLength": 6,
          "description": "Sales Taxable Unit"
        },
        "nFCI": {
          "type": "string",
          "pattern": "[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}",
          "description": "Importation content form number (Número de controle da FCI - Ficha de Conteúdo de Importação)"
        },
        "goal": {
          "type": "string",
          "enum": [
            "Normal",
            "Complementary",
            "Voided",
            "Replacement",
            "Return",
            "Adjustment"
          ],
          "description": "- 'Normal' # Normal\n- 'Complementary' # Complemento de Valores\n- 'Voided' # Anulação\n- 'Replacement' # Substituto\n- 'Return' # Devolução ou retorno\n- 'Adjustment' # Ajuste\n"
        },
        "icmsSt": {
          "type": "number",
          "format": "double"
        },
        "ipi": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TaxByTypeSummaryForSefazGoods": {
      "type": "object",
      "required": [
        "tax"
      ],
      "description": "summary of all taxes",
      "properties": {
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "sum of all lines calcBase"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "sum of referenced tax value"
        }
      }
    },
    "HeaderForNfse": {
      "type": "object",
      "properties": {
        "documentCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored"
        },
        "companyLocation": {
          "type": "string",
          "maxLength": 64,
          "description": "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity"
        },
        "rpsNumber": {
          "type": "integer",
          "description": "Provisional receipt services, sequencial number maintained by the client application, unique by serie"
        },
        "rpsSerie": {
          "type": "string",
          "description": "set name identifier for rps number sequency.",
          "default": "0"
        },
        "discriminationIn": {
          "type": "string",
          "maxLength": 1000,
          "minLength": 1,
          "description": "Service discrimination, free description about service"
        },
        "entity": {
          "$ref": "#/definitions/EntityForNfse"
        },
        "defaultLocations": {
          "$ref": "#/definitions/EntityLocationForNfse"
        },
        "payment": {
          "type": "object",
          "properties": {
            "terms": {
              "$ref": "#/definitions/PaymentTerms"
            },
            "installments": {
              "type": "array",
              "description": "installments",
              "items": {
                "$ref": "#/definitions/InstallmentCompleteForNfse"
              }
            }
          }
        }
      }
    },
    "LineForNfse": {
      "type": "object",
      "required": [
        "itemCode"
      ],
      "properties": {
        "lineCode": {
          "type": "integer",
          "description": "This string is a unique identifier for this line in the transaction"
        },
        "itemCode": {
          "type": "string",
          "description": "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU."
        },
        "numberOfItems": {
          "type": "number",
          "format": "double",
          "default": 1,
          "description": "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1"
        },
        "lineAmount": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems)."
        },
        "itemDescription": {
          "type": "string",
          "description": "This string captures the description of the item represented by this line, will be used LC 116"
        },
        "lineTaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Conditional discount"
        },
        "lineUntaxedDiscount": {
          "type": "number",
          "format": "double",
          "description": "Unconditional discount"
        },
        "withLaborAssignment": {
          "type": "boolean",
          "description": "Service w/labor assignment\nServiço com cessão de mão de obra\n"
        },
        "taxDeductions": {
          "type": "object",
          "properties": {
            "iss": {
              "type": "number",
              "format": "double",
              "description": "Deduction amount not taxable by ISS . Example constructions materials included in a service invoice"
            }
          }
        },
        "lineNetValue": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the total cost of this line. In its simplest form lineNetValue = (lineAmount - discountTaxable - sum of whithholdings)."
        },
        "cst": {
          "type": "string",
          "maxLength": 2,
          "enum": [
            "01",
            "02",
            "03",
            "04",
            "05",
            "21",
            "22",
            "23",
            "24",
            "25",
            "40"
          ],
          "description": "- '01' # ORIGIN MODE\n- '02' # ORIGIN MODE BUT EXEMPT\n- '03' # ORIGIN MODE BUT IMMUNE\n- '04' # ORIGIN MODE BUT SUSPENDED FOR LEGAL REASON\n- '05' # ORIGIN MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '21' # DESTINATION MODE\n- '22' # DESTINATION MODE BUT EXEMPT\n- '23' # DESTINATION MODE BUT IMMUNE\n- '24' # DESTINATION MODE BUT SUSPENDED\n- '25' # DESTINATION MODE BUT SUSPENDED\n- '40' # FOREIGN IMMUNE MODE\n"
        },
        "cstRf": {
          "type": "string",
          "maxLength": 2,
          "enum": [
            "61",
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72"
          ],
          "description": "- '61' # WITHHOLD NORMAL MODE\n- '62' # WITHHOLD NORMAL MODE BUT EXEMPT\n- '63' # WITHHOLD NORMAL MODE BUT IMMUNE\n- '64' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR LEGAL REASON\n- '65' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON\n- '66' # WITHHOLD FORCED MODE\n- '67' # WITHHOLD FORCED MODE BUT EXEMPT\n- '68' # WITHHOLD FORCED MODE BUT IMMUNE\n- '69' # WITHHOLD FORCED MODE BUT SUSPENDED FOR LEGAL REASON\n- '70' # WITHHOLD FORCED MODE BUT SUSPENDED FOR ADMINISTRATIVE PROCESS\n- '71' # NO WITHHOLD MODE\n- '72' # NO WITHHOLD FOREIGN MODE\n"
        },
        "taxDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxDetailForNfse"
          }
        },
        "extend": {
          "$ref": "#/definitions/AgastExtendForNfse"
        }
      }
    },
    "EntityForNfse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 60,
          "description": "SERVICE BUYER NAME OFFICIAL"
        },
        "email": {
          "type": "string",
          "maxLength": 60,
          "description": "Entity Email"
        },
        "cnpjcpf": {
          "type": "string",
          "pattern": "([!-ÿ]{0}|[!-ÿ]{5,20})?",
          "description": "CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'"
        },
        "cityTaxId": {
          "type": "string",
          "maxLength": 15,
          "description": "City Tax ID"
        },
        "stateTaxId": {
          "type": "string",
          "description": "State Tax ID"
        },
        "suframa": {
          "type": "string",
          "pattern": "[0-9]{8,9}",
          "description": "Suframa ID"
        },
        "phone": {
          "type": "string",
          "pattern": "[0-9]{6,14}",
          "description": "Entity Phone"
        },
        "adminProcess": {
          "type": "string",
          "maxLength": 30,
          "description": "PROCESS NUMBER TO ISS SUSPENDED FOR ADMINISTRATIVE PROCESS"
        },
        "build": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "maxLength": 15,
              "description": "Business code. Código da obra OBRA"
            },
            "art": {
              "type": "string",
              "maxLength": 15,
              "description": "technical note. Anota\\u00e7\\u00e3o de Responsabilidade T\\u00e9cnica-ART, estabelece que todos os contratos referentes à  execu\\u00e7\\u00e3o de servi\\u00e7os ou obras de Engenharia, Agronomia, Geologia, Geografia ou Meteorologia dever\\u00e3o ser objeto de anota\\u00e7\\u00e3o no Conselho Regional de Engenharia e Agronomia"
            },
            "cei": {
              "type": "string",
              "maxLength": 15,
              "description": "Número CEI da Obra"
            },
            "number": {
              "type": "string",
              "maxLength": 15,
              "description": "Número de Matrícula da Obra"
            }
          }
        }
      }
    },
    "EntityLocationForNfse": {
      "type": "object",
      "required": [
        "zipcode"
      ],
      "properties": {
        "street": {
          "type": "string",
          "maxLength": 60,
          "description": "Street Name"
        },
        "neighborhood": {
          "type": "string",
          "maxLength": 60,
          "description": "Neighborhood Name"
        },
        "zipcode": {
          "type": "string",
          "description": "Zip Code"
        },
        "cityCode": {
          "type": "string",
          "pattern": "[0-9]{7}|0",
          "description": "City Code",
          "default": "0"
        },
        "cityName": {
          "type": "string",
          "maxLength": 60,
          "description": "City Name"
        },
        "state": {
          "type": "string",
          "description": "State Code",
          "pattern": "^([A-Z]{2,3})$"
        },
        "countryCode": {
          "type": "string",
          "pattern": "[0-9]{1,4}",
          "description": "Country Code",
          "default": "0"
        },
        "country": {
          "type": "string",
          "maxLength": 3,
          "description": "Use ISO 3166-1 alpha-3 codes",
          "pattern": "^([A-Z]{3})$"
        },
        "number": {
          "type": "string",
          "maxLength": 60,
          "description": "House number"
        },
        "complement": {
          "type": "string",
          "maxLength": 60,
          "description": "Any other information about the address (Room, Suite, Floor, etc))."
        }
      }
    },
    "InstallmentCompleteForNfse": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "installment Due Date"
        },
        "netAmount": {
          "type": "number",
          "format": "double",
          "description": "Net amount due for this installment, grossValue - ∑ (withhold amounts)"
        }
      }
    },
    "TaxDetailForNfse": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "string",
          "enum": [
            "aproxtribCity",
            "aproxtribFed",
            "pis",
            "pisRf",
            "cofins",
            "cofinsRf",
            "csll",
            "csllRf",
            "irrf",
            "inss",
            "inssRf",
            "iss",
            "issRf",
            "irpj"
          ],
          "description": "Tax identificator\n- 'aproxtribCity'\n- 'aproxtribFed'\n- 'pis'\n- 'pisRf'\n- 'cofins'\n- 'cofinsRf'\n- 'csll'\n- 'csllRf'\n- 'irrf'\n- 'inss'\n- 'inssRf'\n- 'iss'\n- 'issRf'\n- 'irpj'\n"
        },
        "calcBase": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax, calc base"
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures the tax rate for this tax.3.00 (3%)"
        },
        "tax": {
          "type": "number",
          "format": "double",
          "description": "This decimal captures how much of the lineAmount was taxable by this tax"
        }
      }
    },
    "AgastExtendForNfse": {
      "type": "object",
      "properties": {
        "hsCode": {
          "type": "string",
          "maxLength": 8,
          "description": "harmonized code, LC 116"
        },
        "issDueatDestination": {
          "type": "boolean",
          "description": "for service items with City Jurisdiction, inform where the ISS tax is due"
        }
      }
    },
    "IssConfByCity": {
      "type": "object",
      "required": [
        "cityCode"
      ],
      "properties": {
        "cityCode": {
          "description": "City Code (IBGE)",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/StateEnum"
        }
      }
    },
    "IssConfService": {
      "type": "object",
      "required": [
        "cityCode",
        "serviceCode"
      ],
      "properties": {
        "companyId": {
          "type": "string",
          "description": "Company code for custom AGAST, standard AGAST does't use this code."
        },
        "inheritedFrom": {
          "type": "string",
          "description": "Reference to agastServiceCode, do keep traceability."
        },
        "cityCode": {
          "description": "City Code (IBGE)",
          "type": "integer",
          "format": "int64"
        },
        "serviceCode": {
          "description": "Service Code in City",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "serviceAgasts": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "relationship to ServiceAgast, where we have the federal confguration"
          }
        },
        "issTaxation": {
          "description": "- 'T' # TAXABLE - TRIBUTÁVEL INCLUSIVE PARA EXPORTAÇÃO'\n- 'E' # TAXABLE WITH EXEMPTION FOR EXPORTS - ISENTO PARA SERVIÇOS PRESTADOS AO EXTERIOR (DEFAULT)\n- 'F' # EXEMPT\n- 'A' # SUSPENDED FOR ADMINISTRATIVE REASON\n- 'L' # SUSPENDED FOR LEGAL DECISION\n- 'I' # IMMUNE\n",
          "type": "string",
          "enum": [
            "T",
            "E",
            "F",
            "A",
            "L",
            "I"
          ]
        },
        "issWhDestOtherCities": {
          "type": "boolean"
        },
        "issWhDestSameCity": {
          "type": "boolean"
        },
        "issWhOriginUnregSeller": {
          "type": "boolean"
        },
        "taxRate": {
          "$ref": "#/definitions/IssConfService_TaxRate"
        }
      }
    },
    "IbptConf": {
      "type": "object",
      "properties": {
        "code": {
          "description": "IBPT Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpbtConfItem"
          }
        }
      }
    },
    "CsvIbptList": {
      "type": "array",
      "items": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "IssConfService_TaxRate": {
      "type": "object",
      "properties": {
        "ISS": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        },
        "ISS_RF": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        },
        "ISS_CPOM": {
          "$ref": "#/definitions/IssConfService_TaxRateItem"
        }
      }
    },
    "IssConfService_TaxRateItem": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "string"
        },
        "rateType": {
          "type": "string"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "isExempt": {
          "type": "boolean"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "zone1": {
          "type": "integer",
          "format": "int32"
        },
        "zone2": {
          "type": "integer",
          "format": "int32"
        },
        "period": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string"
            }
          }
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "IpbtConfItem": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/StateEnum"
        },
        "federalTax": {
          "type": "number",
          "format": "double"
        },
        "importTax": {
          "type": "number",
          "format": "double"
        },
        "stateTax": {
          "type": "number",
          "format": "double"
        },
        "cityTax": {
          "type": "number",
          "format": "double"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "AcaoRota": {
      "type": "object",
      "properties": {
        "Descricao": {
          "type": "string"
        },
        "RouteAction": {
          "type": "string"
        }
      }
    },
    "AliquotaBasicaPISCOFINS": {
      "type": "object",
      "properties": {
        "IndIncidenciaTributaria": {
          "type": "string"
        },
        "AliquotaBasicaPIS": {
          "type": "number",
          "format": "double"
        },
        "AliquotaBasicaCOFINS": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Anp": {
      "type": "object",
      "properties": {
        "CodigoANP": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ApuracaoAjuste": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "DataInicial",
        "DataFinal",
        "CodigoImposto",
        "CodigoAjusteApur",
        "Descricao",
        "ValorImposto"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data final"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 4,
          "description": "Código do Imposto"
        },
        "CodigoAjusteApur": {
          "$ref": "#/definitions/CodigoAjusteApuracao"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição Complementar do ajuste da apuração"
        },
        "ValorImposto": {
          "type": "number",
          "format": "double",
          "description": "Valor do Ajuste da Apuração - [15 inteiros e 2 decimais]"
        },
        "Documentos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApuracaoAjusteDocumentacao"
          }
        },
        "Processos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApuracaoAjusteProcesso"
          }
        }
      }
    },
    "ApuracaoAjusteDocumentacao": {
      "type": "object",
      "required": [
        "ApuracaoAjuste",
        "IDCabecalhoDocFiscal",
        "ValorAjuste"
      ],
      "properties": {
        "ApuracaoAjuste": {
          "$ref": "#/definitions/ApuracaoAjuste"
        },
        "IDCabecalhoDocFiscal": {
          "type": "integer",
          "format": "int32",
          "description": "Chave primária de 'CabecalhoDocFiscal.'"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "ValorAjuste": {
          "type": "number",
          "format": "double",
          "description": "Valor do Ajuste para operação/item - [13 inteiros e 2 decimais]"
        }
      }
    },
    "ApuracaoAjustePISCOFINS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoImposto": {
          "type": "string"
        },
        "TipoAjuste": {
          "type": "integer",
          "format": "int32"
        },
        "IndicadorAjuste": {
          "type": "integer",
          "format": "int32"
        },
        "CodAjustePISCOFINS": {
          "$ref": "#/definitions/CodigoAjustePISCOFINS"
        },
        "DataReferencia": {
          "type": "string",
          "format": "date-time"
        },
        "TipoCreditoPISCOFINS": {
          "$ref": "#/definitions/TipoCreditoPISCOFINS"
        },
        "CodigoContribuicao": {
          "$ref": "#/definitions/CodigoContribuicao"
        },
        "ValorAjuste": {
          "type": "number",
          "format": "double"
        },
        "NumeroDocumento": {
          "type": "string"
        },
        "DescricaoAjuste": {
          "type": "string"
        },
        "CodigoSituacao": {
          "type": "integer",
          "format": "int32"
        },
        "DetBase": {
          "type": "number",
          "format": "double"
        },
        "DetAliquota": {
          "type": "number",
          "format": "double"
        },
        "CodigoContaContabil": {
          "type": "string"
        },
        "InformacaoComplementar": {
          "type": "string"
        }
      }
    },
    "ApuracaoAjusteProcesso": {
      "type": "object",
      "required": [
        "ApuracaoAjuste",
        "NumeroDocArrecadacao",
        "NumeroProcesso"
      ],
      "properties": {
        "ApuracaoAjuste": {
          "$ref": "#/definitions/ApuracaoAjuste"
        },
        "NumeroDocArrecadacao": {
          "type": "string",
          "maxLength": 30,
          "description": "No. Documento de arrecadacao estadual"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 30,
          "description": "no. Processo que o ajuste está vinculado"
        },
        "IndicadorOrigemProcesso": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da origem do processo"
        },
        "DescricaoProcesso": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição resumida do processo que embasou o lançamento"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição Complementar"
        }
      }
    },
    "ApuracaoConsolidacaoCreditoPISCOFINS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "CodigoCredito": {
          "type": "string"
        },
        "CodigoImposto": {
          "type": "string"
        },
        "ValorBaseCredito": {
          "type": "number",
          "format": "double"
        },
        "AliquotaImposto": {
          "type": "number",
          "format": "double"
        },
        "AliquotaQuantidadeReais": {
          "type": "number",
          "format": "double"
        },
        "QuantidadeBaseCredito": {
          "type": "number",
          "format": "double"
        },
        "ValorCreditoApurado": {
          "type": "number",
          "format": "double"
        },
        "ValorAjusteAcrescimo": {
          "type": "number",
          "format": "double"
        },
        "ValorAjusteReducao": {
          "type": "number",
          "format": "double"
        },
        "ValorCredDiferidoPeriodo": {
          "type": "number",
          "format": "double"
        },
        "ValorCreditoDisponivel": {
          "type": "number",
          "format": "double"
        },
        "ValorCreditoUtilizado": {
          "type": "number",
          "format": "double"
        },
        "SaldoCreditoDisponivel": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ApuracaoContribuicaoPrevidenciaria": {
      "type": "object",
      "required": [
        "AtividadeContribuicaoPrevidenciaria",
        "DataIniApu",
        "DataFinApu",
        "VlrRecTotEst",
        "VlrRecAtivEstab",
        "VlrRecDemaisAtivEstab",
        "VlrBCContrPrev",
        "VlrContApuRec"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "AtividadeContribuicaoPrevidenciaria": {
          "$ref": "#/definitions/AtividadeContribuicaoPrevidenciaria"
        },
        "DataIniApu": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial Apuracao"
        },
        "DataFinApu": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final Apuracao"
        },
        "CodCtaCont": {
          "type": "string",
          "maxLength": 60,
          "description": "Conta Contabil"
        },
        "VlrRecTotEst": {
          "type": "number",
          "format": "double",
          "description": "Vlr Rec Tot Estab - [13 inteiros e 2 decimais]"
        },
        "VlrRecAtivEstab": {
          "type": "number",
          "format": "double",
          "description": "Vlr Rec Ativ Estab - [13 inteiros e 2 decimais]"
        },
        "VlrRecDemaisAtivEstab": {
          "type": "number",
          "format": "double",
          "description": "Vlr Rec Demais Ativ Estab - [13 inteiros e 2 decimais]"
        },
        "VlrExclusoes": {
          "type": "number",
          "format": "double",
          "description": "Vlr Exclusao - [13 inteiros e 2 decimais]"
        },
        "VlrBCContrPrev": {
          "type": "number",
          "format": "double",
          "description": "Vlr Bc Contr Prev - [13 inteiros e 2 decimais]"
        },
        "VlrContApuRec": {
          "type": "number",
          "format": "double",
          "description": "Vlr Cont Apu Rec - [13 inteiros e 2 decimais]"
        },
        "InfoCompl": {
          "type": "string",
          "maxLength": 255,
          "description": "Info Compl"
        }
      }
    },
    "ApuracaoDetalheContribuicaoPISCOFINS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "CodigoContribuicao": {
          "$ref": "#/definitions/CodigoContribuicao"
        },
        "CodigoImposto": {
          "type": "string"
        },
        "ValorReceitaBruta": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseContribuicao": {
          "type": "number",
          "format": "double"
        },
        "AliquotaImposto": {
          "type": "number",
          "format": "double"
        },
        "QuantidadeBase": {
          "type": "number",
          "format": "double"
        },
        "AliquotaQuantidadeReais": {
          "type": "number",
          "format": "double"
        },
        "ValorContribuicaoApurada": {
          "type": "number",
          "format": "double"
        },
        "ValorAjusteAcrescimo": {
          "type": "number",
          "format": "double"
        },
        "ValorAjusteReducao": {
          "type": "number",
          "format": "double"
        },
        "ValorContDifPeriodo": {
          "type": "number",
          "format": "double"
        },
        "ValorContDifPeriodoAnt": {
          "type": "number",
          "format": "double"
        },
        "ValorTotalContribuicao": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ApuracaoDetalheCreditoPISCOFINS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "CodigoCredito": {
          "type": "string"
        },
        "NaturezaBC": {
          "type": "string"
        },
        "CodigoImposto": {
          "type": "string"
        },
        "CodigoSituacaoTrib": {
          "type": "string"
        },
        "AliquotaImposto": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseTotal": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseCumulativa": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseNCumulativa": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseCredito": {
          "type": "number",
          "format": "double"
        },
        "AliquotaQuantidadeReais": {
          "type": "number",
          "format": "double"
        },
        "QuantidadeBaseTotal": {
          "type": "number",
          "format": "double"
        },
        "QuantidadeBase": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ApuracaoImposto": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "CodigoImposto",
        "CodigoApuracao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data final"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 4,
          "description": "Código do Imposto"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "CodigoApuracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Código de Apuração"
        },
        "ValorApurado": {
          "type": "number",
          "format": "double",
          "description": "Valor apurado para cada código de apuração - [15 inteiros e 2 decimais]"
        },
        "IndicadorApuracao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de período de apuração do IPI"
        },
        "CodigoP8P9": {
          "type": "string",
          "maxLength": 3,
          "description": "Código da apuração considerado nos livros de apuração P8 e P9"
        }
      }
    },
    "ApuracaoImpostoIPI": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "CodigoImposto",
        "CodigoAjusteIPI",
        "TipoAjuste",
        "ValorAjuste",
        "DescricaoAjuste"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data final"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 4,
          "description": "Código do Imposto"
        },
        "CodigoAjusteIPI": {
          "$ref": "#/definitions/CodigoAjusteIPI"
        },
        "TipoAjuste": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Tipo de Ajuste"
        },
        "ValorAjuste": {
          "type": "number",
          "format": "double",
          "description": "Valor do Ajuste da Apuração - [15 inteiros e 2 decimais]"
        },
        "DescricaoAjuste": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição Resumida do Ajuste"
        },
        "OrigemDocumento": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da origem do documento vinculado ao ajuste"
        },
        "NumeroDocumento": {
          "type": "string",
          "maxLength": 30,
          "description": "Número do documento / processo / declaração ao qual o ajuste está vinculado, se houver"
        }
      }
    },
    "ApuracaoInformacaoAdicional": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "CodigoImposto"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data final"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 4,
          "description": "Código do Imposto"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "CodigoInformacaoAdicional": {
          "$ref": "#/definitions/CodigoInformacaoAdicional"
        },
        "ValorInfAdicional": {
          "type": "number",
          "format": "double",
          "description": "Valor referente à informação adicional - [13 inteiros e 2 decimais]"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição Complementar da Informação Adicional"
        }
      }
    },
    "ApuracaoReceitaPISCOFINS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "RecTribMercadoInterno": {
          "type": "number",
          "format": "double"
        },
        "RecNaoTribMercadoInterno": {
          "type": "number",
          "format": "double"
        },
        "RecExportacao": {
          "type": "number",
          "format": "double"
        },
        "RecCumulativa": {
          "type": "number",
          "format": "double"
        },
        "RecTotal": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Arquivo": {
      "type": "object",
      "properties": {
        "NomeArquivo": {
          "type": "string"
        },
        "Extensao": {
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "ContentLength": {
          "type": "integer",
          "format": "int32"
        },
        "ModeloArquivoDigitalHistorico": {
          "$ref": "#/definitions/ModeloArquivoDigitalHistorico"
        },
        "IDCalculoEstimativaIRPJCSLL": {
          "type": "integer",
          "format": "int32"
        },
        "IDComposicaoCustosECF": {
          "type": "integer",
          "format": "int32"
        },
        "IDLancamentoParteALALURLACS": {
          "type": "integer",
          "format": "int32"
        },
        "IDBaseCalculoLucroPresumidoIRPJCSLL": {
          "type": "integer",
          "format": "int32"
        },
        "IDCalculoLucroPresumidoIRPJCSLL": {
          "type": "integer",
          "format": "int32"
        },
        "IDLancamentoBaseCalculoLucroArbitradoIRPJCSLL": {
          "type": "integer",
          "format": "int32"
        },
        "IDLancamentoCalculoLucroArbitradoIRPJCSLL": {
          "type": "integer",
          "format": "int32"
        },
        "IDCalculoImuneIsentasIRPJCSLL": {
          "type": "integer",
          "format": "int32"
        },
        "IDCalculoRealIRPJCSLL": {
          "type": "integer",
          "format": "int32"
        },
        "IDCalculoIsencaoReducaoImpostoSobreLucroRealIRPJ": {
          "type": "integer",
          "format": "int32"
        },
        "IDDemonstracaoLucroExploracaoIRPJ": {
          "type": "integer",
          "format": "int32"
        },
        "IDDemonstracaoReceitasIncentivadas": {
          "type": "integer",
          "format": "int32"
        },
        "IDCalculoIsencaoReducaoLucroPresumido": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ArquivoDigital": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "TipoGeracao": {
          "type": "string"
        },
        "Nome": {
          "type": "string"
        },
        "NomePadraoArquivo": {
          "type": "string"
        },
        "TotalBytes": {
          "type": "integer",
          "format": "int32"
        },
        "CriaTelaGeracao": {
          "type": "integer",
          "format": "int32"
        },
        "NomeTela": {
          "type": "string"
        },
        "IDImagemMenu": {
          "type": "integer",
          "format": "int32"
        },
        "IDImagemTela": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "integer",
          "format": "int32"
        },
        "Origem": {
          "type": "integer",
          "format": "int32"
        },
        "Encoding": {
          "type": "string"
        },
        "FlagAuditoria": {
          "type": "integer",
          "format": "int32"
        },
        "Parametros": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalParametro"
          }
        },
        "Registros": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalRegistro"
          }
        }
      }
    },
    "ArquivoDigitalAgregacao": {
      "type": "object",
      "properties": {
        "ArquivoDigitalRegistro": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "ArquivoDigitalTabelaCampo": {
          "$ref": "#/definitions/ArquivoDigitalTabelaCampo"
        },
        "Tipo": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ArquivoDigitalCampoLayout": {
      "type": "object",
      "properties": {
        "ArquivoDigitalRegistro": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "Nome": {
          "type": "string"
        },
        "Tipo": {
          "type": "integer",
          "format": "int32"
        },
        "Comprimento": {
          "type": "integer",
          "format": "int32"
        },
        "Decimais": {
          "type": "integer",
          "format": "int32"
        },
        "Formato": {
          "type": "string"
        },
        "Indice": {
          "type": "integer",
          "format": "int32"
        },
        "Classificacao": {
          "type": "integer",
          "format": "int32"
        },
        "Observacao": {
          "type": "string"
        },
        "NomeCampoQuery": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalCodigoFinalidade": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalCriterio": {
      "type": "object",
      "properties": {
        "ArquivoDigitalRegistro": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "Indice": {
          "type": "integer",
          "format": "int32"
        },
        "Criterio": {
          "type": "integer",
          "format": "int32"
        },
        "GrupoCriterio": {
          "type": "integer",
          "format": "int32"
        },
        "ArquivoDigitalTabelaCampo": {
          "$ref": "#/definitions/ArquivoDigitalTabelaCampo"
        },
        "Condicao": {
          "type": "integer",
          "format": "int32"
        },
        "TextoValor": {
          "type": "string"
        },
        "ArquivoDigitalParametro": {
          "$ref": "#/definitions/ArquivoDigitalParametro"
        },
        "NomeCampoQueryPai": {
          "type": "string"
        },
        "ArquivoDigitalFormula": {
          "$ref": "#/definitions/ArquivoDigitalFormula"
        }
      }
    },
    "ArquivoDigitalFormula": {
      "type": "object",
      "properties": {
        "ArquivoDigitalRegistro": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "Nome": {
          "type": "string"
        },
        "Formula": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalFuncao": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Exemplo": {
          "type": "string"
        },
        "TipoBD": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ArquivoDigitalIndicadorLucroPrejuizo": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalMotivoInventario": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalParametro": {
      "type": "object",
      "properties": {
        "ArquivoDigital": {
          "$ref": "#/definitions/ArquivoDigital"
        },
        "Nome": {
          "type": "string"
        },
        "Tipo": {
          "type": "integer",
          "format": "int32"
        },
        "Requerido": {
          "type": "integer",
          "format": "int32"
        },
        "Multiplo": {
          "type": "integer",
          "format": "int32"
        },
        "NomeTabela": {
          "type": "string"
        },
        "NomeCampoDescricao": {
          "type": "string"
        },
        "NomeCampoValor": {
          "type": "string"
        },
        "Indice": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ArquivoDigitalPeriodoApuracao": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalQualificacaoPessoaJuridica": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalRegistro": {
      "type": "object",
      "properties": {
        "ArquivoDigital": {
          "$ref": "#/definitions/ArquivoDigital"
        },
        "ArquivoDigitalRegistroPai": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "DataEfetividade": {
          "type": "string",
          "format": "date-time"
        },
        "Nivel": {
          "type": "string"
        },
        "Nome": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "Tipo": {
          "type": "integer",
          "format": "int32"
        },
        "Separador": {
          "type": "string"
        },
        "IDTabelaOrigem": {
          "type": "integer",
          "format": "int32"
        },
        "Query": {
          "type": "string"
        },
        "QueryEditada": {
          "type": "integer",
          "format": "int32"
        },
        "Selecionado": {
          "type": "integer",
          "format": "int32"
        },
        "LocalDelimitado": {
          "type": "integer",
          "format": "int32"
        },
        "TipoArquivo": {
          "type": "string"
        },
        "LimiteLinhasPorArquivo": {
          "type": "integer",
          "format": "int32"
        },
        "CamposLayout": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalCampoLayout"
          }
        },
        "Formulas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalFormula"
          }
        },
        "Agregacoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalAgregacao"
          }
        },
        "Tabelas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalTabela"
          }
        },
        "Filhos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalRegistro"
          }
        },
        "Criterios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalCriterio"
          }
        },
        "Relacionamentos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalRelacionamento"
          }
        }
      }
    },
    "ArquivoDigitalRelacionamento": {
      "type": "object",
      "properties": {
        "ArquivoDigitalRegistro": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "Indice": {
          "type": "integer",
          "format": "int32"
        },
        "Continuacao": {
          "type": "boolean"
        },
        "TipoRelacionamento": {
          "type": "integer",
          "format": "int32"
        },
        "CampoCriterio": {
          "$ref": "#/definitions/ArquivoDigitalTabelaCampo"
        },
        "TextoValor": {
          "type": "string"
        },
        "CampoCriterioReferencia": {
          "$ref": "#/definitions/ArquivoDigitalTabelaCampo"
        },
        "Alias": {
          "type": "string"
        },
        "AliasTabelaCriterio": {
          "type": "string"
        },
        "AliasTabelaCriterioReferencia": {
          "type": "string"
        }
      }
    },
    "ArquivoDigitalTabela": {
      "type": "object",
      "properties": {
        "ArquivoDigitalRegistro": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "Nome": {
          "type": "string"
        },
        "Campos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArquivoDigitalTabelaCampo"
          }
        }
      }
    },
    "ArquivoDigitalTabelaCampo": {
      "type": "object",
      "properties": {
        "ArquivoDigitalTabela": {
          "$ref": "#/definitions/ArquivoDigitalTabela"
        },
        "Nome": {
          "type": "string"
        },
        "Selecionado": {
          "type": "boolean"
        },
        "Ordenacao": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ArrecadacaoReferenciado": {
      "type": "object",
      "required": [
        "CabecalhoDocFiscal",
        "InfoComplementar",
        "NumeroDocArrecadacao"
      ],
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "InfoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "NumeroDocArrecadacao": {
          "type": "string",
          "maxLength": 30,
          "description": "Número do Documento de Arrecadação"
        },
        "ModeloDocArrecadacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Código do modelo do documento de arreacadação"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "CodigoAutenticacao": {
          "type": "string",
          "maxLength": 50,
          "description": "Código completo da autenticação bancária"
        },
        "ValorDocArrecadacao": {
          "type": "number",
          "format": "double",
          "description": "Valor do total do documento de arrecadação (principal, atualização monetária, juros e multa) - [15 inteiros e 2 decimais]"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de vencimento do documento de arrecadação"
        },
        "DataPagamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de pagamento do documento de arrecadação ou data do vencimento, no cao de ICMS antecipado a recolher"
        }
      }
    },
    "AtividadeContribuicaoPrevidenciaria": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        },
        "AliquotaContPrev": {
          "type": "number",
          "format": "double"
        },
        "DataInicioEscritura": {
          "type": "string",
          "format": "date-time"
        },
        "DataTerminoEscritura": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AtividadeIncentivadaPJ": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "BeneficioFiscal",
        "IndicadorProjeto",
        "AtoConcessorio",
        "InicioVigencia",
        "FimVigencia"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "BeneficioFiscal": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo de Benefício Fiscal"
        },
        "IndicadorProjeto": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador de Projeto"
        },
        "AtoConcessorio": {
          "type": "string",
          "maxLength": 30,
          "description": "Ato concessório: natureza e número"
        },
        "InicioVigencia": {
          "type": "string",
          "format": "date-time",
          "description": "Início da Vigência"
        },
        "FimVigencia": {
          "type": "string",
          "format": "date-time",
          "description": "Fim da Vigência"
        }
      }
    },
    "AtivoImobilizadoPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "ClasseDocumentoPISCOFINS",
        "IdentBemImobilizado",
        "DataInicialPeriodo",
        "IndicadorUtilizacaoBem",
        "ValorTotal",
        "ValorParcela",
        "CodigoSituacaoPIS",
        "CodigoSituacaoCOFINS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ClasseDocumentoPISCOFINS": {
          "$ref": "#/definitions/ClasseDocumentoPISCOFINS"
        },
        "IdentBemImobilizado": {
          "type": "string",
          "maxLength": 2,
          "description": "Identificação dos Bens/Grupo de Bens Incorporados ao Ativo Imobilizado"
        },
        "DataInicialPeriodo": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial do Período de Apuração"
        },
        "IndicadorOrigemCredito": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da origem do crédito"
        },
        "IndicadorUtilizacaoBem": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Utilização dos Bens Incorporados ao Ativo Imobilizado"
        },
        "ValorTotal": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operação - [15 inteiros e 2 decimais]"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double",
          "description": "Valor da Parcela da Operação - [15 inteiros e 2 decimais]"
        },
        "IndicadorNumeroParcelas": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador de Número de Parcelas – Para base de crédito = “10”"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do PIS (Percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do COFINS (Percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor do COFINS - [15 inteiros e 2 decimais]"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "DescricaoBemImobilizado": {
          "type": "string",
          "maxLength": 2000,
          "description": "Descrição Complementar do Bem"
        },
        "ProcessosReferenciados": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AtivoImobilizadoPISCOFINSProcessoReferenciado"
          }
        }
      }
    },
    "AtivoImobilizadoPISCOFINSProcessoReferenciado": {
      "type": "object",
      "required": [
        "AtivoImobilizadoPISCOFINS",
        "NumeroProcesso",
        "OrigemProcesso"
      ],
      "properties": {
        "AtivoImobilizadoPISCOFINS": {
          "$ref": "#/definitions/AtivoImobilizadoPISCOFINS"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 20,
          "description": "Identificação do processo ou ato concessório"
        },
        "OrigemProcesso": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Origem do processo"
        }
      }
    },
    "AtivosExterior": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Pais",
        "TipoAtivoExteriorECF",
        "DataInicial"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "TipoAtivoExteriorECF": {
          "$ref": "#/definitions/TipoAtivoExteriorECF"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "Discriminacao": {
          "type": "string",
          "maxLength": 500,
          "description": "Discriminação"
        },
        "ValorAnterior": {
          "type": "number",
          "format": "double",
          "description": "Valor no final do período anterior (valor recuperado da escrituração anterior) - [17 inteiros e 2 decimais]"
        },
        "ValorAtual": {
          "type": "number",
          "format": "double",
          "description": "Valor no final do período atual - [17 inteiros e 2 decimais]"
        }
      }
    },
    "AtribuicaoAliquotas": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Imposto": {
          "$ref": "#/definitions/Imposto"
        },
        "IDEstabFiscal": {
          "type": "integer",
          "format": "int32"
        },
        "EstadoOrigem": {
          "$ref": "#/definitions/Estado"
        },
        "EstadoDestino": {
          "$ref": "#/definitions/Estado"
        },
        "UFOrigem": {
          "type": "string"
        },
        "UFDestino": {
          "type": "string"
        },
        "ClasseImpostoItem": {
          "$ref": "#/definitions/ClasseImposto"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "ClasseImpostoParceiro": {
          "$ref": "#/definitions/ClasseImposto"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "ClassificacaoFiscal": {
          "$ref": "#/definitions/ClassificacaoFiscal"
        },
        "Aliquota": {
          "type": "number",
          "format": "double"
        },
        "FlagAliquotaSuspensa": {
          "type": "string"
        },
        "PorcentualCalculoTributa": {
          "type": "number",
          "format": "double"
        },
        "PorcentualCalculoIsento": {
          "type": "number",
          "format": "double"
        },
        "PorcentualCalculoOutros": {
          "type": "number",
          "format": "double"
        },
        "DataEfetivacao": {
          "type": "string",
          "format": "date-time"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "PercentualFundoCombatePobreza": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "AtribuicaoAliquotasMarkUp": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "EstadoOrigem": {
          "$ref": "#/definitions/Estado"
        },
        "EstadoDestino": {
          "$ref": "#/definitions/Estado"
        },
        "UFOrigem": {
          "type": "string"
        },
        "UFDestino": {
          "type": "string"
        },
        "ClasseImpostoItem": {
          "$ref": "#/definitions/ClasseImposto"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "ClasseImpostoParceiro": {
          "$ref": "#/definitions/ClasseImposto"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "ClassificacaoFiscal": {
          "$ref": "#/definitions/ClassificacaoFiscal"
        },
        "DataEfetividade": {
          "type": "string",
          "format": "date-time"
        },
        "AliquotaMarkUp": {
          "type": "number",
          "format": "double"
        },
        "FlagAliquotaSuspensa": {
          "type": "string"
        }
      }
    },
    "AtribuicaoAliquotasRetencao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Imposto": {
          "$ref": "#/definitions/Imposto"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "ClasseImpostoItem": {
          "$ref": "#/definitions/ClasseImposto"
        },
        "ClasseImpostoParceiro": {
          "$ref": "#/definitions/ClasseImposto"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "Aliquota": {
          "type": "number",
          "format": "double"
        },
        "FlagAliquotaSuspensa": {
          "type": "boolean"
        },
        "FlagAcumulativo": {
          "type": "boolean"
        },
        "TipoRetencao": {
          "type": "string"
        },
        "TetoMaximoRetido": {
          "type": "number",
          "format": "double"
        },
        "ValorMinimoRetencao": {
          "type": "number",
          "format": "double"
        },
        "ValorMaximoRetencao": {
          "type": "number",
          "format": "double"
        },
        "DataEfetivacao": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AtribuicaoCFOPEntrada": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CFOPEmitente": {
          "$ref": "#/definitions/CFOP"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "CFOP": {
          "$ref": "#/definitions/CFOP"
        },
        "AtribuicaoCFOPEntradaTexto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AtribuicaoCFOPEntradaTexto"
          }
        }
      }
    },
    "AtribuicaoCFOPEntradaTexto": {
      "type": "object",
      "properties": {
        "AtribuicaoCFOPEntrada": {
          "$ref": "#/definitions/AtribuicaoCFOPEntrada"
        },
        "InformacaoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        }
      }
    },
    "AtribuicaoCFOPSaida": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string"
        },
        "Destino": {
          "type": "integer",
          "format": "int32"
        },
        "OrigemItem": {
          "$ref": "#/definitions/OrigemItem"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "CFOP": {
          "$ref": "#/definitions/CFOP"
        },
        "GrupoTributacaoParceiro": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "GrupoTributacaoItem": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "AtribuicaoCFOPSaidaTexto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AtribuicaoCFOPSaidaTexto"
          }
        }
      }
    },
    "AtribuicaoCFOPSaidaTexto": {
      "type": "object",
      "properties": {
        "AtribuicaoCFOPSaida": {
          "$ref": "#/definitions/AtribuicaoCFOPSaida"
        },
        "InformacaoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        }
      }
    },
    "AtribuicaoCodigoEnquadramentoIPI": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PerfilTributacao": {
          "$ref": "#/definitions/PerfilTributacao"
        },
        "ClassificacaoFiscal": {
          "$ref": "#/definitions/ClassificacaoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "GrupoTributacaoParceiro": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "GrupoTributacaoItem": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "CodigoEnquadraIPI": {
          "type": "string"
        },
        "CodigoSituacaoIPI": {
          "type": "string"
        }
      }
    },
    "AtribuicaoPerfilContabil": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "IDEstabFiscal": {
          "type": "integer",
          "format": "int32"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "GrupoTributacaoParceiro": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "GrupoTributacaoItem": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "IDPerfilContabilizacao": {
          "type": "integer",
          "format": "int32"
        },
        "DataEfetividade": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AtribuicaoPerfilTributacao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "IDEstabFiscal": {
          "type": "integer",
          "format": "int32"
        },
        "PerfilTributacao": {
          "$ref": "#/definitions/PerfilTributacao"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "GrupoTributacaoParceiro": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "GrupoTributacaoItem": {
          "$ref": "#/definitions/GrupoTributacao"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "TipoDestino": {
          "type": "string"
        },
        "DataEfetividade": {
          "type": "string",
          "format": "date-time"
        },
        "FlagIPIPreco": {
          "type": "boolean"
        },
        "FlagCreditoIPI": {
          "type": "boolean"
        },
        "FlagCreditoICMS": {
          "type": "boolean"
        },
        "FlagFreteCusto": {
          "type": "boolean"
        },
        "FlagFreteNota": {
          "type": "boolean"
        },
        "FlagSeguroCusto": {
          "type": "boolean"
        },
        "FlagSeguroNota": {
          "type": "boolean"
        },
        "FlagDespesas": {
          "type": "boolean"
        },
        "FlagDespesaNota": {
          "type": "boolean"
        },
        "FlagICMSPreco": {
          "type": "boolean"
        },
        "FlagPISPreco": {
          "type": "boolean"
        },
        "FlagCOFINSPreco": {
          "type": "boolean"
        },
        "FlagCreditoPIS": {
          "type": "boolean"
        },
        "FlagCreditoCOFINS": {
          "type": "boolean"
        },
        "AtribuicaoPerfilTributacaoTexto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AtribuicaoPerfilTributacaoTexto"
          }
        }
      }
    },
    "AtribuicaoPerfilTributacaoTexto": {
      "type": "object",
      "properties": {
        "AtribuicaoPerfilTributacao": {
          "$ref": "#/definitions/AtribuicaoPerfilTributacao"
        },
        "InformacaoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        }
      }
    },
    "AtribuicaoSerieDocumento": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "TipoDocumento": {
          "type": "string"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "SerieDocumento": {
          "$ref": "#/definitions/SerieDocumento"
        }
      }
    },
    "AuditLog": {
      "type": "object",
      "properties": {
        "TableName": {
          "type": "string"
        },
        "Data": {
          "type": "string",
          "format": "date-time"
        },
        "Usuario": {
          "$ref": "#/definitions/Usuario"
        }
      }
    },
    "Auditoria": {
      "type": "object",
      "properties": {
        "NomeAuditoria": {
          "type": "string"
        },
        "NomeProcedure": {
          "type": "string"
        }
      }
    },
    "BaseCalculoIncentivosFiscais": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 3,
          "description": "Periodo Apuração"
        },
        "BaseCalculoIncentivos": {
          "type": "number",
          "format": "double",
          "description": "Base de Cálculo - [17 inteiros e 2 decimais]"
        },
        "PercentuaIncentivolFINOR": {
          "type": "number",
          "format": "double",
          "description": "Percentual do incentivo FINOR (até 6%) - [6 inteiros e 2 decimais]"
        },
        "ValorIncentivoFINOR": {
          "type": "number",
          "format": "double",
          "description": "Valor líquido do incentivo - [17 inteiros e 2 decimais]"
        },
        "PercentualFINAM": {
          "type": "number",
          "format": "double",
          "description": "Percentual do incentivo FINAM (até 6%) - [6 inteiros e 2 decimais]"
        },
        "ValorIncentivoIncentivoFINAM": {
          "type": "number",
          "format": "double",
          "description": "Valor líquido do incentivo - [17 inteiros e 2 decimais]"
        },
        "ValorTotalIncentivos": {
          "type": "number",
          "format": "double",
          "description": "Total dos Icentivos - [17 inteiros e 2 decimais]"
        }
      }
    },
    "BaseCalculoLucroArbitradoIrpjCsll": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioValidade": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimValidade": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "BaseCalculoLucroPresumidoIRPJCSLL": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "BemCIAP": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "CodigoBem",
        "TipoBem",
        "DescricaoBem",
        "PlanoConta",
        "CentroCusto",
        "Funcao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoBem": {
          "type": "string",
          "maxLength": 60,
          "description": "Código individualizado do bem ou componente adotado no controle patrimonial do estabelecimento informante"
        },
        "TipoBem": {
          "type": "string",
          "maxLength": 1,
          "description": "Identificação do tipo de mercadoria"
        },
        "DescricaoBem": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição do bem ou componente (modelo, marca e outras características necessárias à sua individualização)"
        },
        "BemPrincipal": {
          "$ref": "#/definitions/BemCIAP"
        },
        "NumParcelaTotal": {
          "type": "integer",
          "format": "int32",
          "description": "Número total de parcelas a serem apropriadas, segundo a legislação de cada unidade federada"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "VidaUtil": {
          "type": "integer",
          "format": "int32",
          "description": "Vida útil estimada do bem, em número de meses"
        },
        "Funcao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição sucinta da função do bem na atividade do estabelecimento"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS da operação própria na entrada do bem ou componente - [15 inteiros e 2 decimais]"
        },
        "ValorICMSST": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS da operação por Substituição Tributária na entrada do bem ou componente - [15 inteiros e 2 decimais]"
        },
        "ValorICMSFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS sobre frete do Conhecimento de Transporte na entrada do bem ou componente - [15 inteiros e 2 decimais]"
        },
        "ValorICMSDif": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS - diferencial de aliquota conforme Documento de Arrecadação, na entrada do bem ou componente - [15 inteiros e 2 decimais]"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double",
          "description": "Valor da parcela de ICMS passível de apropriação - [15 inteiros e 2 decimais]"
        }
      }
    },
    "Bens": {
      "type": "object",
      "required": [
        "Companhia",
        "PlanoConta",
        "PlanoContaAcumulada"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Usuario": {
          "$ref": "#/definitions/Usuario"
        },
        "NumeroCadastroBem": {
          "type": "string",
          "maxLength": 20,
          "description": "Número do Cadastro do Bem"
        },
        "NaturezaBem": {
          "type": "string",
          "maxLength": 1,
          "description": "Natureza do Bem"
        },
        "NumeroCadastroBemPrincipal": {
          "type": "string",
          "maxLength": 20,
          "description": "Número de Cadastro do Bem Principal"
        },
        "IdentificacaoBem": {
          "type": "string",
          "maxLength": 45,
          "description": "Identificação do Bem"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "PlanoContaAcumulada": {
          "$ref": "#/definitions/PlanoConta"
        },
        "DataAquisicao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Aquisição"
        },
        "TipoDocumento": {
          "type": "string",
          "maxLength": 3,
          "description": "Tipo do Documento de Aquisição"
        },
        "Serie": {
          "type": "string",
          "maxLength": 3,
          "description": "Série do Documento"
        },
        "SubSerie": {
          "type": "string",
          "maxLength": 5,
          "description": "Subserie do Documento"
        },
        "NumeroDocumento": {
          "type": "string",
          "maxLength": 12,
          "description": "Número do Documento"
        },
        "ValorAquisicao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Aquisição do Bem - [15 inteiros e 2 decimais]"
        },
        "ValorReais": {
          "type": "number",
          "format": "double",
          "description": "Valor em Reais - [15 inteiros e 2 decimais]"
        },
        "NumeroArquivamento": {
          "type": "string",
          "maxLength": 12,
          "description": "Número de Arquivamento"
        },
        "DataInicioDepreciacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de início de Depreciação"
        },
        "TaxaDepreciacao": {
          "type": "number",
          "format": "double",
          "description": "Taxa de Depreciação/Amortização/Exaustão - [15 inteiros e 2 decimais]"
        },
        "DepreciacaoAcumuladaInicioPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Depreciação Acumulada no Início de Período - [15 inteiros e 2 decimais]"
        },
        "DepreciacaoLancadaCursoPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Depreciação Lançada no Curso do Período - [15 inteiros e 2 decimais]"
        },
        "DataBaixa": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Baixa"
        }
      }
    },
    "CadastroBaseCalculoLucroPresumidoIRPJCSLL": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioVal": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimVal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        },
        "Percentual": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CadastroCalculoEstimativaIRPJCSLL": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioVal": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimVal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "CadastroCalculoImuneIsentasIRPJCSLL": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioVal": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimVal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "CadastroCalculoLucroPresumidoIRPJCSLL": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioVal": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimVal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "CadastroOrigemAplicacaoRecursosImunesIsentas": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataIniVal": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimVal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "CalculoEstimativaIRPJCSLL": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CalculoImuneIsentasIRPJCSLL": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CalculoIsencaoReducaoImpostoSobreLucroRealIRPJ": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "Tipo",
        "Codigo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 3,
          "description": "Periodo Apuração"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 5,
          "description": "Tipo"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 50,
          "description": "Código de acordo com tabela publicada no Sped."
        },
        "Registro": {
          "type": "string",
          "maxLength": 5,
          "description": "Registro"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição de acordo com tabela publicada no Sped."
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor - [17 inteiros e 2 decimais]"
        }
      }
    },
    "CalculoIsencaoReducaoLucroPresumido": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "Tipo",
        "Codigo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 3,
          "description": "Periodo Apuração"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 5,
          "description": "Tipo"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 50,
          "description": "Código de acordo com tabela publicada no Sped."
        },
        "Registro": {
          "type": "string",
          "maxLength": 5,
          "description": "Registro"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição de acordo com tabela publicada no Sped."
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor - [17 inteiros e 2 decimais]"
        }
      }
    },
    "CalculoLucroArbitradoIrpjCsll": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioValidade": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimValidade": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "CalculoLucroPresumidoIRPJCSLL": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CalculoLucroRealIRPJCSLL": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioVal": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimVal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "CalculoRealIRPJCSLL": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CampoAdicional": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "ArqDigitalRegistro",
        "Sequencia",
        "Nome",
        "Descricao",
        "Tipo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ArqDigitalRegistro": {
          "$ref": "#/definitions/ArquivoDigitalRegistro"
        },
        "Sequencia": {
          "type": "integer",
          "format": "int32",
          "description": "Sequencia do Campo Adicional no registro"
        },
        "Nome": {
          "type": "string",
          "maxLength": 50,
          "description": "Nome do Campo Adicional"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição do Campo Adicional"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo do Campo Adicional"
        },
        "LivroContabil": {
          "type": "string",
          "maxLength": 1,
          "description": "Livro Contábil do qual o campo faz parte"
        }
      }
    },
    "CamposLog": {
      "type": "object",
      "properties": {
        "NoXML": {
          "type": "string"
        },
        "CamposPadroes": {
          "type": "string"
        },
        "CamposCliente": {
          "type": "string"
        }
      }
    },
    "CentroCusto": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "DataAtualizacaoSistContabil",
        "Descricao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 28,
          "description": "Código do Centro de Custo"
        },
        "DataAtualizacaoSistContabil": {
          "type": "string",
          "format": "date-time",
          "description": "Data da inclusão / alteração"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 45,
          "description": "Descrição da  Centro de Custo"
        }
      }
    },
    "CEST": {
      "type": "object",
      "properties": {
        "NCM": {
          "type": "string"
        },
        "GrupoNCM": {
          "type": "string"
        },
        "CodigoCEST": {
          "type": "string"
        },
        "DescricaoCEST": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "Grupo": {
          "type": "string"
        },
        "DescricaoGrupo": {
          "type": "string"
        }
      }
    },
    "CFOP": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        },
        "IndCIAP": {
          "type": "string"
        },
        "IdentCampoDAPI_MG": {
          "type": "string"
        },
        "PercentualBaseIsenta": {
          "type": "number",
          "format": "double"
        },
        "PercentualBaseOutras": {
          "type": "number",
          "format": "double"
        },
        "IndCalculoReceita": {
          "type": "boolean"
        }
      }
    },
    "CIAP": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time"
        },
        "DataFim": {
          "type": "string",
          "format": "date-time"
        },
        "SaldoInicial": {
          "type": "number",
          "format": "double"
        },
        "SomaParcela": {
          "type": "number",
          "format": "double"
        },
        "ValorSaidaTributada": {
          "type": "number",
          "format": "double"
        },
        "ValorSaida": {
          "type": "number",
          "format": "double"
        },
        "IndiceParticipacao": {
          "type": "number",
          "format": "double"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorOutrosCreditos": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CIAPOutrosCreditos": {
      "type": "object",
      "required": [
        "BemCIAP",
        "DataCredito",
        "DataInicio",
        "DataFim",
        "NumeroParcela",
        "ValorParcela",
        "ValorSaidaTributada",
        "ValorSaida",
        "IndParticipacao",
        "ValorOutrosCreditos",
        "Companhia",
        "EstabFiscal"
      ],
      "properties": {
        "BemCIAP": {
          "$ref": "#/definitions/BemCIAP"
        },
        "DataCredito": {
          "type": "string",
          "format": "date-time",
          "description": "Data para apresentação do crédito"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial do período de apuração a que se refere a apropriação"
        },
        "DataFim": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final  do período de apuração a que se refere a apropriação"
        },
        "NumeroParcela": {
          "type": "number",
          "format": "double",
          "description": "Número da parcela do ICMS que está sendo apropriada - [0 inteiros e 3 decimais]"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double",
          "description": "Valor da parcela de ICMS passível de apropriação – antes da aplicação da participação percentual do valor das saídas tributadas/exportação sobre as saídas totais - [15 inteiros e 2 decimais]"
        },
        "ValorSaidaTributada": {
          "type": "number",
          "format": "double",
          "description": "Valor do somatório das saídas tributadas e saídas para exportação no período indicado neste registro - [15 inteiros e 2 decimais]"
        },
        "ValorSaida": {
          "type": "number",
          "format": "double",
          "description": "Valor total das saídas no período indicado neste registro - [15 inteiros e 2 decimais]"
        },
        "IndParticipacao": {
          "type": "number",
          "format": "double",
          "description": "Indice de participação do valor do somatório das saídas tributadas e saídas para exportação no valor total das saídas - [13 inteiros e 4 decimais]"
        },
        "ValorOutrosCreditos": {
          "type": "number",
          "format": "double",
          "description": "Valor de outros créditos de ICMS a ser apropriado na apuração - [15 inteiros e 2 decimais]"
        },
        "Movimentacao": {
          "$ref": "#/definitions/Movimentacao"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        }
      }
    },
    "ClasseConsumo": {
      "type": "object",
      "properties": {
        "TipoConsumo": {
          "type": "string"
        },
        "CodigoClasseConsumo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ClasseDocumentoPISCOFINS": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "CodBaseCalcCredPISCOF": {
          "type": "string"
        }
      }
    },
    "ClasseImposto": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ClassificacaoFiscal": {
      "type": "object",
      "properties": {
        "CodigoClassificacaoFiscal": {
          "type": "string"
        },
        "CodigoExTipi": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "AliquotaIPI": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CNAE": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "CodigoAglutinacao": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "Descricao",
        "Nivel",
        "Tipo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 28,
          "description": "Código de Aglutinação."
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição do código de aglutinação"
        },
        "Nivel": {
          "type": "integer",
          "format": "int32",
          "description": "Nível de Aglutinação"
        },
        "CodigoAglutinacaoSuperior": {
          "$ref": "#/definitions/CodigoAglutinacao"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo do Código de Aglutinação 1 - Balanço 2 - Resultado"
        },
        "IndicadorGrupoBalanco": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Grupo do Balanço. Somente quando IND_TIPO igual a 1"
        },
        "IndicadorValor": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da situação do valor informado. Somente quando IND_TIPO igual a 2"
        }
      }
    },
    "CodigoAglutinacaoCentroCusto": {
      "type": "object",
      "required": [
        "Companhia",
        "PlanoConta",
        "CodigoAglutinacao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "CodigoAglutinacao": {
          "$ref": "#/definitions/CodigoAglutinacao"
        }
      }
    },
    "CodigoAjusteApuracao": {
      "type": "object",
      "properties": {
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "Codigo": {
          "type": "string"
        },
        "TipoApuracao": {
          "type": "string"
        },
        "ReflexoApuracao": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataVigenciaDE": {
          "type": "string",
          "format": "date-time"
        },
        "DataVigenciaATE": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CodigoAjusteBeneficio": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataVigenciaDE": {
          "type": "string",
          "format": "date-time"
        },
        "DataVigenciaATE": {
          "type": "string",
          "format": "date-time"
        },
        "Versao": {
          "type": "string"
        }
      }
    },
    "CodigoAjusteIPI": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "TipoAjuste": {
          "type": "string"
        },
        "DescricaoComplementar": {
          "type": "string"
        }
      }
    },
    "CodigoAjustePISCOFINS": {
      "type": "object",
      "properties": {
        "CodigoImposto": {
          "type": "string"
        },
        "CodigoAjuste": {
          "type": "string"
        },
        "DescricaoAjuste": {
          "type": "string"
        }
      }
    },
    "CodigoContribuicao": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "CodigoInformacaoAdicional": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "CodigoReceita": {
      "type": "object",
      "properties": {
        "CodReceita": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DescricaoResumida": {
          "type": "string"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "VarCodReceita": {
          "type": "string"
        },
        "Periodicidade": {
          "type": "string"
        }
      }
    },
    "CodigoReceitaIrCsllRetidoFonte": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioValidade": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimValidade": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CodigoRelacionamento": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ComercioEletronico": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Pais",
        "HomeOK",
        "ServidorOK",
        "DataInicial"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "HomeOK": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Homepage Disponível"
        },
        "ServidorOK": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Disponibilidade de Servidor"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        }
      }
    },
    "Companhia": {
      "type": "object",
      "properties": {
        "CodigoCIA": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "CaminhoAuditoria": {
          "type": "string"
        }
      }
    },
    "Complemento": {
      "type": "object",
      "properties": {
        "Composicao": {
          "$ref": "#/definitions/Composicao"
        },
        "Tipo": {
          "type": "string"
        },
        "CodigoComposicao": {
          "type": "string"
        },
        "CodigoComplemento": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "CompOperPer": {
      "type": "object",
      "required": [
        "ConsOperPer",
        "Composicao",
        "Complemento",
        "SituacaoTributariaPIS",
        "SituacaoTributariaCOFINS",
        "Tipo",
        "CodigoComposicao",
        "CodigoComplemento",
        "CodigoSituacaoPIS",
        "CodigoSituacaoCOFINS"
      ],
      "properties": {
        "ConsOperPer": {
          "$ref": "#/definitions/ConsOperPer"
        },
        "Composicao": {
          "$ref": "#/definitions/Composicao"
        },
        "Complemento": {
          "$ref": "#/definitions/Complemento"
        },
        "SituacaoTributariaPIS": {
          "$ref": "#/definitions/SituacaoTributariaPIS"
        },
        "SituacaoTributariaCOFINS": {
          "$ref": "#/definitions/SituacaoTributariaCOFINS"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 20,
          "description": "Receita, Deduções Geral ou Deduções Específica"
        },
        "CodigoComposicao": {
          "type": "string",
          "maxLength": 5,
          "description": "Código do tipo de detalhamento, conforme Tabelas 7.1.1 e/ou 7.1.2"
        },
        "CodigoComplemento": {
          "type": "string",
          "maxLength": 60,
          "description": "Código das Tabelas 7.1.3 (Receitas – Visão Analítica/Referenciada) e/ou 7.1.4 (Deduções e exclusões – Visão Analítica/Referenciada), objeto de complemento neste registro"
        },
        "ValorOperacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operacao - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoPIS": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do PIS (Percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do COFINS (Percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor do COFINS - [15 inteiros e 2 decimais]"
        },
        "ContaContabil": {
          "$ref": "#/definitions/ContaContabil"
        },
        "InformacaoComplementar": {
          "type": "string",
          "maxLength": 2000,
          "description": "Informacao Complementar"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 20,
          "description": "Identificação do processo ou ato concessório"
        },
        "OrigemProcesso": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Origem do processo"
        }
      }
    },
    "Composicao": {
      "type": "object",
      "properties": {
        "Tipo": {
          "type": "string"
        },
        "CodigoComposicao": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ComposicaoCustosECF": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataIniApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "MetodoAvaliaEstoque": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ComposicaoCustosL210": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataIniValid": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimValid": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "CondicaoPagamento": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "NumeroParcelas": {
          "type": "integer",
          "format": "int32"
        },
        "DiaFixo": {
          "type": "integer",
          "format": "int32"
        },
        "FlagDataEmissao": {
          "type": "boolean"
        },
        "FlagDataEntradaSaida": {
          "type": "boolean"
        },
        "DiaSemana1": {
          "type": "integer",
          "format": "int32"
        },
        "DiaSemana2": {
          "type": "integer",
          "format": "int32"
        },
        "AposProximaData": {
          "type": "integer",
          "format": "int32"
        },
        "Parcelas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CondicaoPagamentoParcela"
          }
        }
      }
    },
    "CondicaoPagamentoParcela": {
      "type": "object",
      "properties": {
        "CondicaoPagamento": {
          "$ref": "#/definitions/CondicaoPagamento"
        },
        "Parcela": {
          "type": "integer",
          "format": "int32"
        },
        "Dias": {
          "type": "integer",
          "format": "int32"
        },
        "Percentual": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConglomeradosEconomicos": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoContabilDe": {
          "type": "string",
          "format": "date-time"
        },
        "PeriodoContabilAte": {
          "type": "string",
          "format": "date-time"
        },
        "PeriodoContabilConsolidadoDe": {
          "type": "string",
          "format": "date-time"
        },
        "PeriodoContabilConsolidadoAte": {
          "type": "string",
          "format": "date-time"
        },
        "ConglomeradosEconomicosSaldoConta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosSaldoConta"
          }
        },
        "ConglomeradosEconomicosPlanoConta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosPlanoConta"
          }
        },
        "ConglomeradosEconomicosEmpresa": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosEmpresa"
          }
        }
      }
    },
    "ConglomeradosEconomicosEmpresa": {
      "type": "object",
      "properties": {
        "ConglomeradosEconomicos": {
          "$ref": "#/definitions/ConglomeradosEconomicos"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "CodigoEmpresa": {
          "type": "string"
        },
        "NomeEmpresa": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "Evento": {
          "type": "string"
        },
        "PercentualParticipacao": {
          "type": "number",
          "format": "double"
        },
        "PercentualConsolidacao": {
          "type": "number",
          "format": "double"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time"
        },
        "ConglomeradosEconomicosEmpresaEvento": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosEmpresaEvento"
          }
        }
      }
    },
    "ConglomeradosEconomicosEmpresaEvento": {
      "type": "object",
      "properties": {
        "ConglomeradosEconomicosEmpresa": {
          "$ref": "#/definitions/ConglomeradosEconomicosEmpresa"
        },
        "Evento": {
          "type": "integer",
          "format": "int32"
        },
        "DataEvento": {
          "type": "string",
          "format": "date-time"
        },
        "ConglomeradosEconomicosEmpresaEventoParticipante": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosEmpresaEventoParticipante"
          }
        }
      }
    },
    "ConglomeradosEconomicosEmpresaEventoParticipante": {
      "type": "object",
      "properties": {
        "ConglomeradosEconomicosEmpresa": {
          "$ref": "#/definitions/ConglomeradosEconomicosEmpresa"
        },
        "ConglomeradosEconomicosEmpresaEvento": {
          "$ref": "#/definitions/ConglomeradosEconomicosEmpresaEvento"
        },
        "CondicaoEmpresa": {
          "type": "integer",
          "format": "int32"
        },
        "PercentualEmpresa": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConglomeradosEconomicosPlanoConta": {
      "type": "object",
      "properties": {
        "ConglomeradosEconomicos": {
          "$ref": "#/definitions/ConglomeradosEconomicos"
        },
        "ConglomeradosEconomicosPlanoContaSuperior": {
          "$ref": "#/definitions/ConglomeradosEconomicosPlanoConta"
        },
        "NaturezaConta": {
          "$ref": "#/definitions/NaturezaConta"
        },
        "CodigoConta": {
          "type": "string"
        },
        "NomeConta": {
          "type": "string"
        },
        "IndicadorTipoConta": {
          "type": "string"
        },
        "Nivel": {
          "type": "integer",
          "format": "int32"
        },
        "ConglomeradosEconomicosPlanoContaEmpresa": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosPlanoContaEmpresa"
          }
        }
      }
    },
    "ConglomeradosEconomicosPlanoContaEmpresa": {
      "type": "object",
      "properties": {
        "CodigoConta": {
          "type": "string"
        },
        "ConglomeradosEconomicosPlanoConta": {
          "$ref": "#/definitions/ConglomeradosEconomicosPlanoConta"
        },
        "ConglomeradosEconomicosEmpresa": {
          "$ref": "#/definitions/ConglomeradosEconomicosEmpresa"
        }
      }
    },
    "ConglomeradosEconomicosSaldoConta": {
      "type": "object",
      "properties": {
        "ConglomeradosEconomicos": {
          "$ref": "#/definitions/ConglomeradosEconomicos"
        },
        "ConglomeradosEconomicosPlanoConta": {
          "$ref": "#/definitions/ConglomeradosEconomicosPlanoConta"
        },
        "ValorAglutinado": {
          "type": "number",
          "format": "double"
        },
        "ValorEliminado": {
          "type": "number",
          "format": "double"
        },
        "ValorConsolidado": {
          "type": "number",
          "format": "double"
        },
        "IndicadorAglutinado": {
          "type": "string"
        },
        "IndicadorEliminado": {
          "type": "string"
        },
        "IndicadorConsolidado": {
          "type": "string"
        },
        "ConglomeradosEconomicosSaldoContaEmpresa": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosSaldoContaEmpresa"
          }
        }
      }
    },
    "ConglomeradosEconomicosSaldoContaEmpresa": {
      "type": "object",
      "properties": {
        "ConglomeradosEconomicosEmpresa": {
          "$ref": "#/definitions/ConglomeradosEconomicosEmpresa"
        },
        "ConglomeradosEconomicosSaldoConta": {
          "$ref": "#/definitions/ConglomeradosEconomicosSaldoConta"
        },
        "ValorEliminado": {
          "type": "number",
          "format": "double"
        },
        "IndicadorEliminado": {
          "type": "string"
        },
        "ConglomeradosEconomicosSaldoContaEmpresaContrapartes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConglomeradosEconomicosSaldoContaEmpresaContrapartes"
          }
        }
      }
    },
    "ConglomeradosEconomicosSaldoContaEmpresaContrapartes": {
      "type": "object",
      "properties": {
        "ConglomeradosEconomicosEmpresa": {
          "$ref": "#/definitions/ConglomeradosEconomicosEmpresa"
        },
        "ConglomeradosEconomicosSaldoContaEmpresa": {
          "$ref": "#/definitions/ConglomeradosEconomicosSaldoContaEmpresa"
        },
        "ConglomeradosEconomicosPlanoConta": {
          "$ref": "#/definitions/ConglomeradosEconomicosPlanoConta"
        },
        "ValorEliminado": {
          "type": "number",
          "format": "double"
        },
        "IndicadorEliminado": {
          "type": "string"
        }
      }
    },
    "ConhecimentoTransporte": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ConsolidacaoApuracaoPISCOFINS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "CodigoImposto": {
          "type": "string"
        },
        "ValorTotContribNCum": {
          "type": "number",
          "format": "double"
        },
        "ValorTotCredDesc": {
          "type": "number",
          "format": "double"
        },
        "ValorTotCredDescAnterior": {
          "type": "number",
          "format": "double"
        },
        "ValorTotContNCumDevida": {
          "type": "number",
          "format": "double"
        },
        "ValorRetidoNCum": {
          "type": "number",
          "format": "double"
        },
        "ValorOutrasDedNCum": {
          "type": "number",
          "format": "double"
        },
        "ValorContribNCumRec": {
          "type": "number",
          "format": "double"
        },
        "ValorTotContCumDevida": {
          "type": "number",
          "format": "double"
        },
        "ValorRetidoCum": {
          "type": "number",
          "format": "double"
        },
        "ValorOutrasDedCum": {
          "type": "number",
          "format": "double"
        },
        "ValorContribCumRec": {
          "type": "number",
          "format": "double"
        },
        "ValorTotalContribRec": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConsOperPer": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicialPeriodo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicialPeriodo": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial do Período da Operacao"
        },
        "InformacaoComplementar": {
          "type": "string",
          "maxLength": 2000,
          "description": "Informação Complementar"
        },
        "ComposicoesOperacaoPeriodo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompOperPer"
          }
        },
        "ConsolidacoesOperacaoPeriodoProcessoReferenciado": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsOperPerProcRef"
          }
        }
      }
    },
    "ConsOperPerProcRef": {
      "type": "object",
      "required": [
        "ConsOperPer",
        "NumeroProcesso",
        "OrigemProcesso"
      ],
      "properties": {
        "ConsOperPer": {
          "$ref": "#/definitions/ConsOperPer"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 20,
          "description": "Identificação do processo ou ato concessório"
        },
        "OrigemProcesso": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Origem do processo"
        }
      }
    },
    "ContabilFolhaPagamento": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Provento",
        "PlanoConta"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Provento": {
          "$ref": "#/definitions/Provento"
        },
        "Lotacao": {
          "$ref": "#/definitions/Lotacao"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        }
      }
    },
    "Contabilista": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Nome",
        "CPF",
        "CRC",
        "Municipio"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Nome": {
          "type": "string",
          "maxLength": 60,
          "description": "Nome do contabilista/escritório de contabilidade."
        },
        "CPF": {
          "type": "string",
          "maxLength": 11,
          "description": "Número de inscrição do contabilista no CPF."
        },
        "CRC": {
          "type": "string",
          "maxLength": 11,
          "description": "Número de inscrição do contabilista no Conselho Regional de Contabilidade."
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "Número de inscrição do escritório de contabilidade no CNPJ."
        },
        "CEP": {
          "type": "integer",
          "format": "int32",
          "description": "Código de Endereçamento Postal do Contabilista"
        },
        "Endereco": {
          "type": "string",
          "maxLength": 60,
          "description": "Logradouro e endereço do imóvel do Contabilista"
        },
        "Numero": {
          "type": "string",
          "maxLength": 15,
          "description": "Número do imóvel do Contabilista"
        },
        "Complemento": {
          "type": "string",
          "maxLength": 60,
          "description": "Dados complementares do endereço do Contabilista"
        },
        "Bairro": {
          "type": "string",
          "maxLength": 60,
          "description": "Bairro em que o imóvel do Contabilista está situado."
        },
        "Telefone": {
          "type": "string",
          "maxLength": 10,
          "description": "Número do telefone do Contabilista"
        },
        "Fax": {
          "type": "string",
          "maxLength": 10,
          "description": "Número do fax do Contabilista"
        },
        "Email": {
          "type": "string",
          "maxLength": 50,
          "description": "Endereço do correio eletrônico do Contabilista"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "RG": {
          "type": "string",
          "maxLength": 12,
          "description": "Nùmero do RG do Contabilista"
        },
        "CP": {
          "type": "string",
          "maxLength": 15,
          "description": "Caixa Postal"
        },
        "CEPCP": {
          "type": "string",
          "maxLength": 15,
          "description": "Código do Endereçamento Postal da caixa postal"
        },
        "DTInicioServico": {
          "type": "string",
          "format": "date-time",
          "description": "Data de início da prestação do serviço de contabilidade"
        },
        "DTFinalServico": {
          "type": "string",
          "format": "date-time",
          "description": "Data de termino da prestação do serviço de contabilidade"
        }
      }
    },
    "ContaContabil": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "DataAtualizacaoSistContabil",
        "Descricao",
        "IndicadorTipoConta",
        "Nivel",
        "NaturezaConta"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 28,
          "description": "Código da Conta analítica / Grupo de Contas"
        },
        "DataAtualizacaoSistContabil": {
          "type": "string",
          "format": "date-time",
          "description": "Data da inclusão / alteração"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição da  Conta analítica / Grupo de Contas"
        },
        "IndicadorTipoConta": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do Tipo de Conta"
        },
        "Nivel": {
          "type": "integer",
          "format": "int32",
          "description": "Nível da conta analítica / grupo de contas"
        },
        "ContaContabilSuperior": {
          "$ref": "#/definitions/ContaContabil"
        },
        "NaturezaConta": {
          "$ref": "#/definitions/NaturezaConta"
        },
        "GrupoContabil": {
          "$ref": "#/definitions/GrupoContabil"
        },
        "DataEfetividadeDe": {
          "type": "string",
          "format": "date-time",
          "description": "Data de início de efetividade da conta contábil"
        },
        "DataEfetividadeAte": {
          "type": "string",
          "format": "date-time",
          "description": "Data de término de efetividade da conta contábil"
        }
      }
    },
    "ContaContabilReferencial": {
      "type": "object",
      "required": [
        "Companhia",
        "PlanoConta",
        "PlanoContaReferenciado",
        "EntidadeResponsavel"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "PlanoContaReferenciado": {
          "$ref": "#/definitions/PlanoContaReferenciado"
        },
        "EntidadeResponsavel": {
          "$ref": "#/definitions/EntidadeResponsavel"
        }
      }
    },
    "ContaContabilSubConta": {
      "type": "object",
      "required": [
        "Companhia",
        "PlanoConta",
        "SubConta",
        "NaturezaSubConta",
        "GrupoContaSubContas"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "SubConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "NaturezaSubConta": {
          "$ref": "#/definitions/NaturezaSubConta"
        },
        "GrupoContaSubContas": {
          "type": "string",
          "maxLength": 6,
          "description": "Grupo Contábil Sub Contas"
        }
      }
    },
    "ContaParteBLALURLACS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Tributo": {
          "type": "string"
        },
        "CodigoContaParteB": {
          "type": "string"
        },
        "DescricaoContaParteB": {
          "type": "string"
        },
        "DataApuracaoContaParteB": {
          "type": "string",
          "format": "date-time"
        },
        "CodigoLancamentoParteA": {
          "type": "string"
        },
        "DescricaoLancamentoParteA": {
          "type": "string"
        },
        "DataLimiteUso": {
          "type": "string",
          "format": "date-time"
        },
        "SaldoInicial": {
          "type": "number",
          "format": "double"
        },
        "IndicadorSaldoInicial": {
          "type": "string"
        },
        "CNPJSituacaoEspecial": {
          "type": "string"
        }
      }
    },
    "Contrato": {
      "type": "object",
      "properties": {
        "NumeroContrato": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "ContratoArquivoDigital": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContratoArquivoDigital"
          }
        },
        "Companhia": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Companhia"
          }
        }
      }
    },
    "ContratoArquivoDigital": {
      "type": "object",
      "properties": {
        "ModeloArquivoDigital": {
          "$ref": "#/definitions/ModeloArquivoDigital"
        }
      }
    },
    "ContribuicaoDiferidaAnteriorPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "CodigoImposto",
        "CodigoContribuicao",
        "PeriodoApuracao",
        "DataRecebimentoReceita",
        "ValorContribuicaoApuracaoAnterior"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 6,
          "description": "Código do Imposto"
        },
        "CodigoContribuicao": {
          "$ref": "#/definitions/CodigoContribuicao"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Apuração da Contribuição– Mês/Ano (MMAAAA)"
        },
        "DataRecebimentoReceita": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Recebimento da Receita"
        },
        "ValorContribuicaoApuracaoAnterior": {
          "type": "number",
          "format": "double",
          "description": "Valor Contribuição Apurada, diferida em Períodos Anteriores - [13 inteiros e 2 decimais]"
        },
        "NaturezaCreditoDiferido": {
          "type": "string",
          "maxLength": 2,
          "description": "Natureza do Crédito Diferido"
        },
        "ValorCreditoDescontar": {
          "type": "number",
          "format": "double",
          "description": "Valor Crédito a Descontar vinculado à contribuição diferida - [13 inteiros e 2 decimais]"
        }
      }
    },
    "ContribuicaoExtemporaneaPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Parceiro",
        "DataOperacao",
        "ValorOperacao",
        "CodigoSituacaoPIS",
        "ValorBasePIS",
        "AliquotaPIS",
        "ValorPIS",
        "CodigoSituacaoCOFINS",
        "ValorBaseCOFINS",
        "AliquotaCOFINS",
        "ValorCOFINS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DataOperacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Operação"
        },
        "ValorOperacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operação - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Base de Cálculo do Crédito de PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS - [2 inteiros e 3 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito de PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Base de Cálculo do Crédito de COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do COFINS - [2 inteiros e 3 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito de COFINS - [15 inteiros e 2 decimais]"
        },
        "IDPlanoConta": {
          "type": "integer",
          "format": "int32",
          "description": "Chave primária de 'PlanoConta.'"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 2000,
          "description": "Descrição complementar do Documento/Operação"
        }
      }
    },
    "ContribuicaoPrevidenciariaConsolidada": {
      "type": "object",
      "required": [
        "PerRefEscrit",
        "VlrTotContrApu",
        "VlrTotContrDev",
        "CodRecContrPrev"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "PerRefEscrit": {
          "type": "string",
          "maxLength": 6,
          "description": "Codigo Per Ref Escrit"
        },
        "VlrTotContrApu": {
          "type": "number",
          "format": "double",
          "description": "Valor Total Contr Apu - [13 inteiros e 2 decimais]"
        },
        "VlrTotAjReduc": {
          "type": "number",
          "format": "double",
          "description": "Valor Total Aj Reduc - [13 inteiros e 2 decimais]"
        },
        "VlrTotAjAcres": {
          "type": "number",
          "format": "double",
          "description": "Valor Total Aj Acres - [13 inteiros e 2 decimais]"
        },
        "VlrTotContrDev": {
          "type": "number",
          "format": "double",
          "description": "Valor Total Contr Dev - [13 inteiros e 2 decimais]"
        },
        "CodRecContrPrev": {
          "type": "string",
          "maxLength": 6,
          "description": "Codigo Rec Contr Prev"
        }
      }
    },
    "ContribuicaoRetidaFontePISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "IndicadorNatRetencao",
        "DataRetencao",
        "ValorBaseRetencao",
        "ValorTotalRetido",
        "CNPJ",
        "ValorRetidoPIS",
        "ValorRetidoCOFINS",
        "IndicadorCondPJDec"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "IndicadorNatRetencao": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador Natureza da Retenção"
        },
        "DataRetencao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Retenção"
        },
        "ValorBaseRetencao": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retenção - [15 inteiros e 2 decimais]"
        },
        "ValorTotalRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Total Retido - [15 inteiros e 2 decimais]"
        },
        "CodigoReceita": {
          "type": "string",
          "maxLength": 10,
          "description": "Código da Receita"
        },
        "IndicadorNatReceita": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Natureza da Receita"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ: Fonte Pagadora Responsável pela Retenção/Recolhimento; Pessoa Jurídica Beneficiária da Retenção/Recolhimento"
        },
        "ValorRetidoPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor PIS Retido - [15 inteiros e 2 decimais]"
        },
        "ValorRetidoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor COFINS Retido - [15 inteiros e 2 decimais]"
        },
        "IndicadorCondPJDec": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Condição da Pessoa Jurídica Declarante"
        }
      }
    },
    "ContribuicaoSocialExtemporaneaPISCOFINS": {
      "type": "object",
      "required": [
        "PeriodoEscrituracao",
        "Companhia",
        "CodigoImposto",
        "PeriodoApuracaoContribuicaoExtemporanea",
        "CodigoContribuicao",
        "ValorContribuicaoApurada",
        "ValorCreditoDescontar",
        "ValorOutrasDeducoes"
      ],
      "properties": {
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período Escrituração"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 6,
          "description": "Código Imposto"
        },
        "PeriodoApuracaoContribuicaoExtemporanea": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Apuração do Crédito"
        },
        "CodigoContribuicao": {
          "$ref": "#/definitions/CodigoContribuicao"
        },
        "DataRecolhimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Recolhimento"
        },
        "ValorContribuicaoApurada": {
          "type": "number",
          "format": "double",
          "description": "Valor da Contribuição Apurada - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoDescontar": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito do imposto a Descontar, da Contribuição Social Extemporânea - [13 inteiros e 2 decimais]"
        },
        "ValorOutrasDeducoes": {
          "type": "number",
          "format": "double",
          "description": "Valor de Outras Deduções - [13 inteiros e 2 decimais]"
        },
        "ValorMulta": {
          "type": "number",
          "format": "double",
          "description": "Valor da Multa - [13 inteiros e 2 decimais]"
        },
        "ValorJuros": {
          "type": "number",
          "format": "double",
          "description": "Valor dos Juros - [13 inteiros e 2 decimais]"
        }
      }
    },
    "ControleEstoque": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Item",
        "UnidadeMedida"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Usuario": {
          "$ref": "#/definitions/Usuario"
        },
        "NaturezaTipoDoc": {
          "type": "string",
          "maxLength": 1,
          "description": "Natureza do Tipo de Documento"
        },
        "TipoDocumento": {
          "type": "string",
          "maxLength": 3,
          "description": "Tipo de Documento"
        },
        "Serie": {
          "type": "string",
          "maxLength": 3,
          "description": "Sério do Documento"
        },
        "SubSerie": {
          "type": "string",
          "maxLength": 5,
          "description": "Subserie do Documento"
        },
        "NumeroDocumento": {
          "type": "string",
          "maxLength": 12,
          "description": "Número do Documento"
        },
        "DataMovimentacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Movimentação"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição da Operação"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "Quantidade": {
          "type": "number",
          "format": "double",
          "description": "Quantidade - [15 inteiros e 2 decimais]"
        },
        "TipoMovimentacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo de Movimentação"
        },
        "CustoUnitario": {
          "type": "number",
          "format": "double",
          "description": "Custo Unitário - [13 inteiros e 4 decimais]"
        },
        "ValorTotal": {
          "type": "number",
          "format": "double",
          "description": "Valor Total - [15 inteiros e 2 decimais]"
        }
      }
    },
    "ConversaoMoeda": {
      "type": "object",
      "properties": {
        "MoedaOrigem": {
          "$ref": "#/definitions/Moeda"
        },
        "MoedaDestino": {
          "$ref": "#/definitions/Moeda"
        },
        "DataEfetividade": {
          "type": "string",
          "format": "date-time"
        },
        "Operacao": {
          "type": "integer",
          "format": "int32"
        },
        "Taxa": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CorrecaoApontamentoEstoque": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Item",
        "Parceiro",
        "PeriodoEscrituracao",
        "DataEstoque",
        "TipoEstoque"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Periodo da Escrituração"
        },
        "DataEstoque": {
          "type": "string",
          "format": "date-time",
          "description": "Data do estoque escriturado sendo corrigido"
        },
        "QuantidadePositiva": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de correção positiva - [16 inteiros e 3 decimais]"
        },
        "QuantidadeNegativa": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de correção negativa - [16 inteiros e 3 decimais]"
        },
        "TipoEstoque": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo de estoque"
        }
      }
    },
    "CorrecaoApontamentoRegistroFilho": {
      "type": "object",
      "required": [
        "CorrecaoApontamentoRegistroPai",
        "Item"
      ],
      "properties": {
        "CorrecaoApontamentoRegistroPai": {
          "$ref": "#/definitions/CorrecaoApontamentoRegistroPai"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "QtdCorPos": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de correçao positiva de apontamento - [16 inteiros e 3 decimais]"
        },
        "QtdCorNeg": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de correçao negativa de apontamento - [16 inteiros e 3 decimais]"
        },
        "ItemSubstituido": {
          "$ref": "#/definitions/Item"
        }
      }
    },
    "CorrecaoApontamentoRegistroPai": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Item",
        "PeriodoEscrituracao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "CodigoOPOS": {
          "type": "string",
          "maxLength": 30,
          "description": "Código da Ordem de Produção/Serviço"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Periodo da Escrituração"
        },
        "DataIniAp": {
          "type": "string",
          "format": "date-time",
          "description": "Data inicial do periodo apuração"
        },
        "DataFimAp": {
          "type": "string",
          "format": "date-time",
          "description": "Data final do periodo apuração"
        },
        "QtdCorPos": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de correção positiva - [16 inteiros e 3 decimais]"
        },
        "QtdCorNeg": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de correção negativa - [16 inteiros e 3 decimais]"
        },
        "Origem": {
          "type": "integer",
          "format": "int32",
          "description": "Origem da correção"
        },
        "CorrecaoApontamentoRegistroFilho": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CorrecaoApontamentoRegistroFilho"
          }
        }
      }
    },
    "CreditoDescontoContribuicaoSocialExtemporaneaPISCOFINS": {
      "type": "object",
      "required": [
        "ContribuicaoSocialExtemporaneaPISCOFINS",
        "PeriodoApuracaoCredito",
        "IndicadorOrigemCredito",
        "TipoCreditoPISCOFINS",
        "ValorCredito"
      ],
      "properties": {
        "ContribuicaoSocialExtemporaneaPISCOFINS": {
          "$ref": "#/definitions/ContribuicaoSocialExtemporaneaPISCOFINS"
        },
        "PeriodoApuracaoCredito": {
          "type": "integer",
          "format": "int32",
          "description": "Período de Apuração do Crédito (MM/AAAA)"
        },
        "IndicadorOrigemCredito": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador da origem do crédito: 01 – Crédito decorrente de operações próprias; 02 – Crédito transferido por pessoa jurídica sucedida"
        },
        "TipoCreditoPISCOFINS": {
          "$ref": "#/definitions/TipoCreditoPISCOFINS"
        },
        "ValorCredito": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito a Descontar - [13 inteiros e 2 decimais]"
        }
      }
    },
    "CreditoExtemporaneoPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "DataOperacao",
        "ValorOperacao",
        "CFOP",
        "NaturezaBaseCalculoCreditoPISCOFINS",
        "IndicadorOrigemCredito",
        "CodigoSituacaoPIS",
        "ValorBasePIS",
        "AliquotaPIS",
        "ValorPIS",
        "CodigoSituacaoCOFINS",
        "ValorBaseCOFINS",
        "AliquotaCOFINS",
        "ValorCOFINS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "CodigoModelo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do Modelo do Documento Fiscal"
        },
        "NumeroSerie": {
          "type": "string",
          "maxLength": 4,
          "description": "Série do Documento Fiscal"
        },
        "SubSerie": {
          "type": "integer",
          "format": "int32",
          "description": "Subsérie do Documento Fiscal"
        },
        "NumeroDocumento": {
          "type": "string",
          "maxLength": 9,
          "description": "Número do Documento Fiscal"
        },
        "DataOperacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Operação"
        },
        "ChaveNFE": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave da Nota Fiscal Eletrônica"
        },
        "ValorOperacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operação - [15 inteiros e 2 decimais]"
        },
        "CFOP": {
          "type": "integer",
          "format": "int32",
          "description": "Código Fiscal de Operação e Prestação"
        },
        "NaturezaBaseCalculoCreditoPISCOFINS": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Base de Cálculo do Crédito"
        },
        "IndicadorOrigemCredito": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Origem do Crédito"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Base de Cálculo do Crédito de PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS - [2 inteiros e 3 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito de PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Base de Cálculo do Crédito de COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do COFINS - [2 inteiros e 3 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito de COFINS - [15 inteiros e 2 decimais]"
        },
        "IDPlanoConta": {
          "type": "integer",
          "format": "int32",
          "description": "Chave primária de 'PlanoConta.'"
        },
        "IDCentroCusto": {
          "type": "integer",
          "format": "int32",
          "description": "Chave primária de 'CentroCusto.'"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 2000,
          "description": "Descrição complementar do Documento/Operação"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Mês/Ano da Escrituração em que foi registrado o Documento/Operação"
        },
        "ParcelaCreditoTributadaPIS": {
          "type": "number",
          "format": "double",
          "description": "Parcela do Crédito de PIS, vinculada a Receita Tributada no Mercado Interno - [15 inteiros e 2 decimais]"
        },
        "ParcelaCreditoNaoTributadaPIS": {
          "type": "number",
          "format": "double",
          "description": "Parcela do Crédito de PIS, vinculada a Receita não-Tributada no M. Interno - [15 inteiros e 2 decimais]"
        },
        "ParcelaCreditoExportacaoPIS": {
          "type": "number",
          "format": "double",
          "description": "Parcela do Crédito do PIS, vinculada a Receita de Exportação - [15 inteiros e 2 decimais]"
        },
        "ParcelaCreditoTributadaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Parcela do Crédito de COFINS, vinculada a Receita Tributada no Mercado Interno - [15 inteiros e 2 decimais]"
        },
        "ParcelaCreditoNaoTributadaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Parcela do Crédito de COFINS, vinculada a Receita não-Tributada no M. Interno - [15 inteiros e 2 decimais]"
        },
        "ParcelaCreditoExportacaoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Parcela do Crédito do COFINS, vinculada a Receita de Exportação - [15 inteiros e 2 decimais]"
        }
      }
    },
    "CreditoFiscalPISCOFINS": {
      "type": "object",
      "required": [
        "PeriodoEscrituracao",
        "CodigoImposto",
        "PeriodoApuracaoCredito",
        "IndicadorOrigemCredito",
        "TipoCreditoPISCOFINS",
        "ValorCreditoApuracao",
        "ValorCreditoDescontoPeriodoAnterior"
      ],
      "properties": {
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período Escrituração"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 6,
          "description": "Código Imposto"
        },
        "PeriodoApuracaoCredito": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Apuração do Crédito"
        },
        "IndicadorOrigemCredito": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador da origem do crédito"
        },
        "CNPJCedCredito": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da pessoa jurídica cedente do crédito"
        },
        "TipoCreditoPISCOFINS": {
          "$ref": "#/definitions/TipoCreditoPISCOFINS"
        },
        "ValorCreditoApuracao": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito apurado na Escrituração Fiscal Digital ou em demonstrativo DACON de períodos anteriores. - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoExtemporaneoApuracao": {
          "type": "number",
          "format": "double",
          "description": "Valor de Crédito Extemporâneo Apurado (Registro 1101), referente a Período Anterior, Informado no Campo 02 – PER_APU_CRED - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoDescontoPeriodoAnterior": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito utilizado mediante Desconto, em Período(s) Anterior(es). - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoPedidoRessarcimentoPeriodoAnterior": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito utilizado mediante Pedido de Ressarcimento, em Período(s) Anterior(es). - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoDeclaracaoCompensacaoPeriodoAnterior": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito utilizado mediante Declaração de Compensação Intermediária (Crédito de Exportação), em Período(s) Anterior(es). - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoDescontadoEFD": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito descontado neste período de escrituração. - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoPedidoRessarcimentoEFD": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito objeto de Pedido de Ressarcimento (PER) neste período de escrituração. - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoDeclaracaoCompensacaoEFD": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito utilizado mediante Declaração de Compensação Intermediária neste período de escrituração. - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoTransferidosCisaoFusaoIncorporacao": {
          "type": "number",
          "format": "double",
          "description": "Valor do crédito transferido em evento de cisão, fusão ou incorporação. - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoOutras": {
          "type": "number",
          "format": "double",
          "description": "Valor do crédito utilizado por outras formas. - [13 inteiros e 2 decimais]"
        }
      }
    },
    "CreditoFiscalPISCOFINSControle": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "ApuracaoConsolidacaoCreditoPISCOFINS": {
          "$ref": "#/definitions/ApuracaoConsolidacaoCreditoPISCOFINS"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "CodigoCredito": {
          "type": "string"
        },
        "CodigoImposto": {
          "type": "string"
        },
        "ValorCreditoApurado": {
          "type": "number",
          "format": "double"
        },
        "SaldoCreditoDisponivel": {
          "type": "number",
          "format": "double"
        },
        "AliquotaImposto": {
          "type": "number",
          "format": "double"
        },
        "Detalhes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditoFiscalPISCOFINSDetalhe"
          }
        }
      }
    },
    "CreditoFiscalPISCOFINSDetalhe": {
      "type": "object",
      "properties": {
        "CreditoFiscalPISCOFINSControle": {
          "$ref": "#/definitions/CreditoFiscalPISCOFINSControle"
        },
        "PeriodoEscrituracao": {
          "type": "string"
        },
        "ValorUtilizadoEscrituracao": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CreditoUtilizado": {
      "type": "object",
      "properties": {
        "ExtraApuracao": {
          "$ref": "#/definitions/ExtraApuracao"
        },
        "TipoUtilizacaoCredito": {
          "$ref": "#/definitions/TipoUtilizacaoCredito"
        },
        "NumeroDocumento": {
          "type": "string"
        },
        "Credito": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CRetencaoFontePISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "IndicadorNaturezaRetencao",
        "DataRetencao",
        "ValorBaseRetencao",
        "ValorTotalRetido",
        "CNPJ",
        "ValorRetidoPIS",
        "ValorRetidoCOFINS",
        "IndicadorCondPJDec"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "IndicadorNaturezaRetencao": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador Natureza da Retenção"
        },
        "DataRetencao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Retenção"
        },
        "ValorBaseRetencao": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retenção - [15 inteiros e 2 decimais]"
        },
        "ValorTotalRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Total Retido - [15 inteiros e 2 decimais]"
        },
        "CodigoReceita": {
          "type": "string",
          "maxLength": 10,
          "description": "Código da Receita"
        },
        "IndicadorNatReceita": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Natureza da Receita"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ: Fonte Pagadora Responsável pela Retenção/Recolhimento; Pessoa Jurídica Beneficiária da Retenção/Recolhimento"
        },
        "ValorRetidoPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor PIS Retido - [15 inteiros e 2 decimais]"
        },
        "ValorRetidoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor COFINS Retido - [15 inteiros e 2 decimais]"
        },
        "IndicadorCondPJDec": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Condição da Pessoa Jurídica Declarante"
        }
      }
    },
    "CupomFiscalReferenciado": {
      "type": "object",
      "required": [
        "CabecalhoDocFiscal",
        "InfoComplementar",
        "CodigoModeloReferenciado",
        "NumeroDocReferenciado"
      ],
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "InfoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "CodigoModeloReferenciado": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo do documento fiscal referenciado"
        },
        "NumeroDocReferenciado": {
          "type": "integer",
          "format": "int32",
          "description": "Número do documento fiscal referenciado"
        },
        "SerieFabricacaoECF": {
          "type": "string",
          "maxLength": 20,
          "description": "Número de série de fabricação do ECF"
        },
        "NumeroCaixaECF": {
          "type": "integer",
          "format": "int32",
          "description": "Número do caixa atribuído ao ECF"
        },
        "DataEmissao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da emissão do documento fiscal referenciado"
        }
      }
    },
    "DaconCategoria": {
      "type": "object",
      "required": [
        "CodCategoria",
        "DesCategoria"
      ],
      "properties": {
        "CodCategoria": {
          "type": "integer",
          "format": "int32",
          "description": "Código da DACON Categoria"
        },
        "DesCategoria": {
          "type": "string",
          "maxLength": 80,
          "description": "Descrição da DACON Categoria"
        }
      }
    },
    "DaconCategoriaProdutoAliquotas": {
      "type": "object",
      "properties": {
        "DaconCategoria": {
          "$ref": "#/definitions/DaconCategoria"
        },
        "CodigoProduto": {
          "type": "integer",
          "format": "int32"
        },
        "AliquotaPis": {
          "type": "number",
          "format": "double"
        },
        "AliquotaCofins": {
          "type": "number",
          "format": "double"
        },
        "Descricao": {
          "type": "string"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        }
      }
    },
    "DaconContasContabeis": {
      "type": "object",
      "required": [
        "Companhia",
        "FichaTipo",
        "FichaLinha",
        "PlanoConta"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "FichaTipo": {
          "type": "string",
          "maxLength": 10,
          "description": "Tipo da ficha"
        },
        "FichaLinha": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo da linha"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        }
      }
    },
    "DadosSucessoras": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "CNPJ",
        "Nome"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da Sucessora"
        },
        "Nome": {
          "type": "string",
          "maxLength": 255,
          "description": "Nome Empresarial"
        },
        "Percentual": {
          "type": "number",
          "format": "double",
          "description": "Percentual do patrimônio líquido da empresa sucedida destinado à(s) pessoa(s) jurídica(s) resultante(s) do evento - [3 inteiros e 2 decimais]"
        }
      }
    },
    "DataImportLog": {
      "type": "object",
      "properties": {
        "Job": {
          "$ref": "#/definitions/Job"
        },
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "FinishDate": {
          "type": "string",
          "format": "date-time"
        },
        "Status": {
          "type": "integer",
          "format": "int32"
        },
        "Entity": {
          "type": "string"
        },
        "XMLMessage": {
          "type": "string"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "Details": {
          "type": "string"
        },
        "Activity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataImportLogAuto": {
      "type": "object",
      "properties": {
        "Job": {
          "$ref": "#/definitions/Job"
        },
        "RequestDate": {
          "type": "string",
          "format": "date-time"
        },
        "Folder": {
          "type": "string"
        },
        "FolderGuid": {
          "type": "string"
        },
        "NumberFiles": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataLog": {
      "type": "object",
      "properties": {
        "Usuario": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "DataHora": {
          "type": "string",
          "format": "date-time"
        },
        "Evento": {
          "type": "string"
        },
        "Entidade": {
          "type": "string"
        },
        "IdRegistro": {
          "type": "integer",
          "format": "int32"
        },
        "Tabela": {
          "type": "string"
        }
      }
    },
    "DebitoImposto": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "CodigoReceita": {
          "$ref": "#/definitions/CodigoReceita"
        },
        "DataApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "ValorDebito": {
          "type": "number",
          "format": "double"
        },
        "BalancoReducao": {
          "type": "string"
        },
        "DivisaoQuotas": {
          "type": "string"
        },
        "QuantidadeQuotas": {
          "type": "integer",
          "format": "int32"
        },
        "Scpinc": {
          "type": "string"
        }
      }
    },
    "DeclaracaoPaisPais": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "NomeMultinacional"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "MoedaECF": {
          "$ref": "#/definitions/MoedaECF"
        },
        "NomeMultinacional": {
          "type": "string",
          "maxLength": 255,
          "description": "Razão Social"
        },
        "EntidadeControladora": {
          "type": "string",
          "maxLength": 1,
          "description": "Nome do Grupo Multinacional"
        },
        "NomeControladora": {
          "type": "string",
          "maxLength": 255,
          "description": "Nome Controladora"
        },
        "JurisdicaoControladora": {
          "$ref": "#/definitions/JurisdicaoECF"
        },
        "TINControladora": {
          "type": "string",
          "maxLength": 255,
          "description": "TIN Controladora"
        },
        "EntidadeResponsavelEntrega": {
          "type": "string",
          "maxLength": 2,
          "description": "Entidade Responsável Entrega"
        },
        "ModalidadeEntrega": {
          "type": "string",
          "maxLength": 2,
          "description": "Modalidade de Entrega"
        },
        "NomeEntidadeSubstituta": {
          "type": "string",
          "maxLength": 255,
          "description": "Nome Entidade Substituta"
        },
        "JurisdicaoSubstituta": {
          "$ref": "#/definitions/JurisdicaoECF"
        },
        "TINSubstituta": {
          "type": "string",
          "maxLength": 255,
          "description": "TIN Substituta"
        },
        "DataInicialSocietario": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Início do Perído Societário"
        },
        "DataFimSocietario": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final do Período Societério"
        },
        "Idioma": {
          "type": "string",
          "maxLength": 2,
          "description": "Idioma"
        },
        "DeclaracaoPaisPaisDeclaracoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeclaracaoPaisPaisDeclaracao"
          }
        },
        "DeclaracaoPaisPaisObservacoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeclaracaoPaisPaisObservacao"
          }
        }
      }
    },
    "DeclaracaoPaisPaisDeclaracao": {
      "type": "object",
      "required": [
        "JurisdicaoECF",
        "DeclaracaoPaisPais"
      ],
      "properties": {
        "JurisdicaoECF": {
          "$ref": "#/definitions/JurisdicaoECF"
        },
        "DeclaracaoPaisPais": {
          "$ref": "#/definitions/DeclaracaoPaisPais"
        },
        "ReceitasPartesNaoRelacionadasMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Receitas Provenientes de Partes não Relacionadas em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "ReceitasPartesNaoRelacionadasReais": {
          "type": "number",
          "format": "double",
          "description": "Provenientes de Partes não Relacionadas em Reais - [0 inteiros e 19 decimais]"
        },
        "ReceitasPartesRelacionadasMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Provenientes de Partes Relacionadas em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "ReceitasPartesRelacionadasReais": {
          "type": "number",
          "format": "double",
          "description": "Receitas Provenientes de Partes Relacionadas em Reais - [0 inteiros e 19 decimais]"
        },
        "ReceitaTotalMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Receita Total em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "ReceitaTotalReais": {
          "type": "number",
          "format": "double",
          "description": "Receita Total em Reais - [0 inteiros e 19 decimais]"
        },
        "LucroPrejuizoAntesIRMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Lucro ou Prejuízo antes do IR em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "LucroPrejuizoAntesIRReais": {
          "type": "number",
          "format": "double",
          "description": "Lucro ou Prejuízo antes do IR em Reais - [0 inteiros e 19 decimais]"
        },
        "ImpostoRendaPagoMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Imposto de Renda Pago em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "ImpostoRendaPagoReais": {
          "type": "number",
          "format": "double",
          "description": "Imposto de Renda Pago em Reais - [0 inteiros e 19 decimais]"
        },
        "ImpostoRendaDevidoMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "mposto de Renda Devido em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "ImpostoRendaDevidoReais": {
          "type": "number",
          "format": "double",
          "description": "Imposto de Renda Devido em Reais - [0 inteiros e 19 decimais]"
        },
        "CapitalSocialMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Capital Social em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "CapitalSocialReais": {
          "type": "number",
          "format": "double",
          "description": "Capital Social em Reais - [0 inteiros e 19 decimais]"
        },
        "LucrosAcumuladosMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Lucros Acumulados em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "LucrosAcumuladosReais": {
          "type": "number",
          "format": "double",
          "description": "Lucros Acumulados em Reais - [0 inteiros e 19 decimais]"
        },
        "AtivosTangiveisMoedaEstrangeira": {
          "type": "number",
          "format": "double",
          "description": "Ativos Tangíveis em Moeda Estrangeira - [0 inteiros e 19 decimais]"
        },
        "AtivosTangiveisReais": {
          "type": "number",
          "format": "double",
          "description": "Ativos Tangíveis em Reais - [0 inteiros e 19 decimais]"
        },
        "NumeroEmpregados": {
          "type": "number",
          "format": "double",
          "description": "Número de Empregados - [0 inteiros e 7 decimais]"
        },
        "DeclaracaoPaisPaisEntidades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeclaracaoPaisPaisEntidade"
          }
        }
      }
    },
    "DeclaracaoPaisPaisEntidade": {
      "type": "object",
      "required": [
        "DeclaracaoPaisPaisDeclaracao",
        "JurisdicaoECFDiferente"
      ],
      "properties": {
        "DeclaracaoPaisPaisDeclaracao": {
          "$ref": "#/definitions/DeclaracaoPaisPaisDeclaracao"
        },
        "JurisdicaoECFDiferente": {
          "$ref": "#/definitions/JurisdicaoECF"
        },
        "JurisdicaoECFEmissaoTIN": {
          "$ref": "#/definitions/JurisdicaoECF"
        },
        "JurisdicaoECFEmissaoNI": {
          "$ref": "#/definitions/JurisdicaoECF"
        },
        "Nome": {
          "type": "string",
          "maxLength": 255,
          "description": "Nome"
        },
        "TIN": {
          "type": "string",
          "maxLength": 255,
          "description": "TIN"
        },
        "NumeroIdentificacao": {
          "type": "string",
          "maxLength": 255,
          "description": "Número de Identificação"
        },
        "TipoNIdentificacao": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo Número de Identificação"
        },
        "TipoEndereco": {
          "type": "string",
          "maxLength": 7,
          "description": "Tipo do Endereço"
        },
        "Endereco": {
          "type": "string",
          "maxLength": 150,
          "description": "Endereço"
        },
        "Telefone": {
          "type": "string",
          "maxLength": 15,
          "description": "Telefone"
        },
        "Email": {
          "type": "string",
          "maxLength": 150,
          "description": "Email"
        },
        "PesquisaDesenvolvimento": {
          "type": "string",
          "maxLength": 1,
          "description": "Pesquisa e Desenvolvimento"
        },
        "GestaoPropriedadeIntelectual": {
          "type": "string",
          "maxLength": 1,
          "description": "Gestão de Propriedade Intelectua"
        },
        "Compras": {
          "type": "string",
          "maxLength": 1,
          "description": "Compras"
        },
        "ManufaturaProducao": {
          "type": "string",
          "maxLength": 1,
          "description": "Manufatura ou Produção"
        },
        "VendasMarketingDistribuicao": {
          "type": "string",
          "maxLength": 1,
          "description": "Vendas, Marketing ou Distribuição"
        },
        "ServicosAdminGestaoSuporte": {
          "type": "string",
          "maxLength": 1,
          "description": "Serviços Administrativos, de Gestão ou de Suporte"
        },
        "ServicosPartesNaoRelacionadas": {
          "type": "string",
          "maxLength": 1,
          "description": "Prestação de Serviços a Partes não Relacionadas"
        },
        "DepartamentoFinanceiroGrupo": {
          "type": "string",
          "maxLength": 1,
          "description": "Departamento Financeiro do Grupo"
        },
        "ServicosFinanceirosRegulament": {
          "type": "string",
          "maxLength": 1,
          "description": "Serviços Financeiros Regulamentados"
        },
        "Seguro": {
          "type": "string",
          "maxLength": 1,
          "description": "Seguro"
        },
        "GestaoOutrosInstrCapital": {
          "type": "string",
          "maxLength": 1,
          "description": "Gestão de Ação e Outros Instrumentos de Capital"
        },
        "Inativa": {
          "type": "string",
          "maxLength": 1,
          "description": "Inativa"
        },
        "Outros": {
          "type": "string",
          "maxLength": 1,
          "description": "Outros"
        },
        "DescricaoAtividadeEconomica": {
          "type": "string",
          "maxLength": 1,
          "description": "Descrição da Atividade Econômica Desempenhada"
        },
        "Observacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Observação"
        }
      }
    },
    "DeclaracaoPaisPaisObservacao": {
      "type": "object",
      "required": [
        "DeclaracaoPaisPais",
        "JurisdicaoECF"
      ],
      "properties": {
        "DeclaracaoPaisPais": {
          "$ref": "#/definitions/DeclaracaoPaisPais"
        },
        "JurisdicaoECF": {
          "$ref": "#/definitions/JurisdicaoECF"
        },
        "ReceitasPartesNaoRelacionadas": {
          "type": "string",
          "maxLength": 1,
          "description": "Receitas Provenientes de Partes não Relacionadas"
        },
        "ReceitasPartesRelacionadas": {
          "type": "string",
          "maxLength": 1,
          "description": "Receitas Provenientes de Partes Relacionadas"
        },
        "ReceitaTotal": {
          "type": "string",
          "maxLength": 1,
          "description": "Receita Total"
        },
        "LucroPrejuizoAntesIR": {
          "type": "string",
          "maxLength": 1,
          "description": "Lucri e Prejuízo antes do IR"
        },
        "ImpostoRendaPago": {
          "type": "string",
          "maxLength": 1,
          "description": "Imposto de Renda Pago"
        },
        "ImpostoRendaDevido": {
          "type": "string",
          "maxLength": 1,
          "description": "Imposto de Renda Devido"
        },
        "CapitalSocial": {
          "type": "string",
          "maxLength": 1,
          "description": "Capital Social"
        },
        "LucrosAcumulados": {
          "type": "string",
          "maxLength": 1,
          "description": "Lucros Acumulados"
        },
        "AtivosTangiveis": {
          "type": "string",
          "maxLength": 1,
          "description": "Ativos Tangíveis"
        },
        "NumeroEmpregados": {
          "type": "string",
          "maxLength": 1,
          "description": "Número de Empregados"
        },
        "Observacao": {
          "type": "string",
          "maxLength": 4000,
          "description": "Observações"
        }
      }
    },
    "DeducaoDARF": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "CodigoReceita": {
          "$ref": "#/definitions/CodigoReceita"
        },
        "DataApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time"
        },
        "Referencia": {
          "type": "string"
        },
        "ValorPrincipal": {
          "type": "number",
          "format": "double"
        },
        "ValorMulta": {
          "type": "number",
          "format": "double"
        },
        "ValorJuros": {
          "type": "number",
          "format": "double"
        },
        "ValorDeduzido": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DeducaoDiversasPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "IndicadorOrigemDeducao",
        "IndicadorNaturezaDeducao",
        "DataInicialPeriodo",
        "ValorBase",
        "ValorDeducaoPIS",
        "ValorDeducaoCOFINS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "IndicadorOrigemDeducao": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador de origem de deduções diversas"
        },
        "IndicadorNaturezaDeducao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Natureza da dedução"
        },
        "DataInicialPeriodo": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial do Período de Apuração"
        },
        "ValorBase": {
          "type": "number",
          "format": "double",
          "description": "Valor Base de Cálculo para Dedução - [15 inteiros e 2 decimais]"
        },
        "ValorDeducaoPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor a Deduzir – PIS - [15 inteiros e 2 decimais]"
        },
        "ValorDeducaoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor a Deduzir - COFINS - [15 inteiros e 2 decimais]"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da P. Jurídica relacionada à operação que ensejou o Valor a Deduzir"
        },
        "InformacaoComplementar": {
          "type": "string",
          "maxLength": 90,
          "description": "Inf. Complementar do Documento/Operação que ensejou o Valor a Deduzir"
        }
      }
    },
    "DemonstracaoContabil": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoAglutinacao": {
          "$ref": "#/definitions/CodigoAglutinacao"
        },
        "CodigoAglutinacaoSuperior": {
          "$ref": "#/definitions/CodigoAglutinacao"
        },
        "SequenciaEstrutura": {
          "type": "integer",
          "format": "int32"
        },
        "DataPeriodo": {
          "type": "string"
        },
        "TipoDemonstracao": {
          "type": "string"
        },
        "NivelAglutinacao": {
          "type": "integer",
          "format": "int32"
        },
        "IndicadorGrupoBalanco": {
          "type": "string"
        },
        "IndicadorValor": {
          "type": "string"
        },
        "IndicadorDebitoCredito": {
          "type": "string"
        },
        "ValorAglutinacao": {
          "type": "number",
          "format": "double"
        },
        "IndicadorDebitoCreditoInicial": {
          "type": "string"
        },
        "ValorAglutinacaoInicial": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DemonstracaoContabilReferencial": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ContaReferen": {
          "type": "string"
        },
        "ContaReferenSuperior": {
          "type": "string"
        },
        "SequenciaEstrutura": {
          "type": "integer",
          "format": "int32"
        },
        "DataPeriodo": {
          "type": "string"
        },
        "TipoDemonstracao": {
          "type": "string"
        },
        "Nivel": {
          "type": "integer",
          "format": "int32"
        },
        "TipoConta": {
          "type": "string"
        },
        "CodigoNatureza": {
          "type": "string"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "ValorInicial": {
          "type": "number",
          "format": "double"
        },
        "IndicadorDebitoCreditoInicial": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        },
        "IndicadorDebitoCredito": {
          "type": "string"
        },
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        }
      }
    },
    "DemonstracaoLucroExploracaoIRPJ": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "Tipo",
        "Codigo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 3,
          "description": "Periodo Apuração"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 5,
          "description": "Tipo"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 50,
          "description": "Código de acordo com tabela publicada no Sped."
        },
        "Registro": {
          "type": "string",
          "maxLength": 5,
          "description": "Registro"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição de acordo com tabela publicada no Sped."
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor - [17 inteiros e 2 decimais]"
        }
      }
    },
    "DemonstracaoReceitasIncentivadas": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "Tipo",
        "Codigo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 3,
          "description": "Periodo Apuração"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 5,
          "description": "Tipo"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 50,
          "description": "Código de acordo com tabela publicada no Sped."
        },
        "Registro": {
          "type": "string",
          "maxLength": 5,
          "description": "Registro"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição de acordo com tabela publicada no Sped."
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor - [17 inteiros e 2 decimais]"
        }
      }
    },
    "DemonstrativoLivroCaixa": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataEntradaSaida",
        "Documento",
        "Historico",
        "SaldoFinal"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataEntradaSaida": {
          "type": "string",
          "format": "date-time",
          "description": "Data Entrada/Saída"
        },
        "Documento": {
          "type": "string",
          "maxLength": 255,
          "description": "Número do Documento Data de Entrada ou Saída dos Recursos"
        },
        "Historico": {
          "type": "string",
          "maxLength": 255,
          "description": "Histórico"
        },
        "ValorEntrada": {
          "type": "number",
          "format": "double",
          "description": "Valor de Entrada dos recursos - [17 inteiros e 2 decimais]"
        },
        "ValorSaida": {
          "type": "number",
          "format": "double",
          "description": "Valor de Saída dos recursos - [17 inteiros e 2 decimais]"
        },
        "SaldoFinal": {
          "type": "number",
          "format": "double",
          "description": "Saldo Final - [17 inteiros e 2 decimais]"
        }
      }
    },
    "DescontoContribuicaoExtemporaneoPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "PeriodoEscrituracao",
        "IndicadorOrigemCredito",
        "TipoCreditoPISCOFINS",
        "ValorCredito"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Apuração do Crédito (MMAAAA)"
        },
        "IndicadorOrigemCredito": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador de Origem de Crédito"
        },
        "TipoCreditoPISCOFINS": {
          "$ref": "#/definitions/TipoCreditoPISCOFINS"
        },
        "ValorCredito": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito a Descontar - [15 inteiros e 2 decimais]"
        }
      }
    },
    "DescricaoComplementarSubApuracao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "IndicadorSubApuracao": {
          "type": "integer",
          "format": "int32"
        },
        "DescricaoComplementar": {
          "type": "string"
        }
      }
    },
    "DescricaoContribuicaoExtemporaneaPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "PeriodoEscrituracao",
        "IndicadorOrigemCredito",
        "TipoCreditoPISCOFINS",
        "ValorCredito"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Apuração do Crédito (MMAAAA)"
        },
        "IndicadorOrigemCredito": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador de Origem de Crédito"
        },
        "TipoCreditoPISCOFINS": {
          "$ref": "#/definitions/TipoCreditoPISCOFINS"
        },
        "ValorCredito": {
          "type": "number",
          "format": "double",
          "description": "Valor do Crédito a Descontar - [15 inteiros e 2 decimais]"
        }
      }
    },
    "DesmontagemItemDestino": {
      "type": "object",
      "required": [
        "DesmontagemItemOrigem"
      ],
      "properties": {
        "DesmontagemItemOrigem": {
          "$ref": "#/definitions/DesmontagemItemOrigem"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "QtdDestino": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de destino - entrada de estoque - [16 inteiros e 3 decimais]"
        }
      }
    },
    "DesmontagemItemOrigem": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Item",
        "PeriodoEscrituracao",
        "QtdOrigem"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "CodigoDocOS": {
          "type": "string",
          "maxLength": 30,
          "description": "Código da Ordem de Serviço"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período da Escrituração"
        },
        "DataIniOS": {
          "type": "string",
          "format": "date-time",
          "description": "Data de início da Ordem de Serviço"
        },
        "DataFimOS": {
          "type": "string",
          "format": "date-time",
          "description": "Data da conclusão da Ordem de Serviço"
        },
        "QtdOrigem": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de origem - saída de Estoque - [16 inteiros e 3 decimais]"
        },
        "DesmontagemItemDestino": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DesmontagemItemDestino"
          }
        }
      }
    },
    "DetalhamentoContribuicaoSocialExtemporaneaPISCOFINS": {
      "type": "object",
      "required": [
        "ContribuicaoSocialExtemporaneaPISCOFINS",
        "CNPJEstabelecimento",
        "CSTImposto",
        "DataOperacao",
        "AliquotaImposto",
        "ValorOperacao",
        "ValorBaseCalculo",
        "ValorImposto"
      ],
      "properties": {
        "ContribuicaoSocialExtemporaneaPISCOFINS": {
          "$ref": "#/definitions/ContribuicaoSocialExtemporaneaPISCOFINS"
        },
        "CNPJEstabelecimento": {
          "type": "string",
          "maxLength": 14,
          "description": "Número de inscrição do estabelecimento no CNPJ (Campo 04 do Registro 0140)"
        },
        "CSTImposto": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS/PASEP ou COFINS"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DataOperacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Operação (ddmmaaaa)"
        },
        "AliquotaImposto": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do imposto - [3 inteiros e 4 decimais]"
        },
        "ContaContabil": {
          "type": "string",
          "maxLength": 60,
          "description": "Código da conta analítica contábil debitada/creditada"
        },
        "ValorOperacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operação - [13 inteiros e 2 decimais]"
        },
        "ValorBaseCalculo": {
          "type": "number",
          "format": "double",
          "description": "Base de cálculo do imposto - [12 inteiros e 3 decimais]"
        },
        "ValorImposto": {
          "type": "number",
          "format": "double",
          "description": "Valor do imposto - [13 inteiros e 2 decimais]"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição complementar do Documento/Operação"
        }
      }
    },
    "DetalheApuracaoContribuicaoPrevidenciario": {
      "type": "object",
      "required": [
        "ApuracaoContribuicaoPrevidenciaria",
        "NumeroCampo",
        "DetalheValor"
      ],
      "properties": {
        "ApuracaoContribuicaoPrevidenciaria": {
          "$ref": "#/definitions/ApuracaoContribuicaoPrevidenciaria"
        },
        "NumeroCampo": {
          "type": "string",
          "maxLength": 2,
          "description": "Num Campo"
        },
        "CodigoTipoDetalhe": {
          "type": "string",
          "maxLength": 8,
          "description": "Codigo Tipo Det"
        },
        "DetalheValor": {
          "type": "number",
          "format": "double",
          "description": "Det Valor - [13 inteiros e 2 decimais]"
        },
        "InformacaoComplementar": {
          "type": "string",
          "maxLength": 255,
          "description": "Informacao Complementar"
        }
      }
    },
    "DetalheExportacaoComercialExportadora": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "CNPJ",
        "CodigoNCM"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da Comercial Exportadora"
        },
        "CodigoNCM": {
          "type": "string",
          "maxLength": 8,
          "description": "Código NCM, conforme tabela do Sped"
        },
        "ValorCompra": {
          "type": "number",
          "format": "double",
          "description": "Valor da compra - [17 inteiros e 2 decimais]"
        },
        "ValorExportacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da exportação - [17 inteiros e 2 decimais]"
        }
      }
    },
    "DoacoesEleitorais": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "CNPJ",
        "TipoBeneficiario",
        "FormaDoacao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ do beneficiário"
        },
        "TipoBeneficiario": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo de Beneficiário"
        },
        "FormaDoacao": {
          "type": "string",
          "maxLength": 2,
          "description": "Forma de Doação"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor - [17 inteiros e 2 decimais]"
        }
      }
    },
    "DocFiscalEmitidoECF": {
      "type": "object",
      "required": [
        "Reducao",
        "EquipamentoECF",
        "CodigoModelo",
        "NumeroDocumento",
        "DataEmissao"
      ],
      "properties": {
        "Reducao": {
          "$ref": "#/definitions/Reducao"
        },
        "EquipamentoECF": {
          "$ref": "#/definitions/EquipamentoECF"
        },
        "CodigoModelo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo do documento fiscal"
        },
        "NumeroDocumento": {
          "type": "integer",
          "format": "int32",
          "description": "Número do documento fiscal (COO)"
        },
        "DataEmissao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da emissão do documento fiscal"
        },
        "SituacaoDocumento": {
          "type": "integer",
          "format": "int32",
          "description": "Código da situação do documento fiscal"
        },
        "ValorDocumento": {
          "type": "number",
          "format": "double",
          "description": "Valor total do documento fiscal - [15 inteiros e 2 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da COFINS - [15 inteiros e 2 decimais]"
        },
        "CPFCNPJAdquirente": {
          "type": "string",
          "maxLength": 14,
          "description": "CPF ou CNPJ do adquirente"
        },
        "NomeAdquirente": {
          "type": "string",
          "maxLength": 60,
          "description": "Nome do adquirente"
        },
        "ChaveEletronica": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave eletrônica"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocFiscalEmitidoECFItem"
          }
        }
      }
    },
    "DocFiscalEmitidoECFItem": {
      "type": "object",
      "required": [
        "DocFiscalEmitidoECF",
        "NumeroItem",
        "Item",
        "CodigoTotalizador",
        "EquipamentoECF",
        "Reducao"
      ],
      "properties": {
        "DocFiscalEmitidoECF": {
          "$ref": "#/definitions/DocFiscalEmitidoECF"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número Item"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "QuantidadeItem": {
          "type": "number",
          "format": "double",
          "description": "Quantidade do item - [14 inteiros e 3 decimais]"
        },
        "QuantidadeCancelada": {
          "type": "number",
          "format": "double",
          "description": "Quantidade cancelada, no caso de cancelamento parcial de item - [14 inteiros e 3 decimais]"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "ValorItem": {
          "type": "number",
          "format": "double",
          "description": "Valor do item - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoICMS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária"
        },
        "CFOP": {
          "type": "integer",
          "format": "int32",
          "description": "Código Fiscal de Operação e Prestação"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS - Carga tributária efetiva em percentual - [3 inteiros e 2 decimais]"
        },
        "BaseCalculoICMS": {
          "type": "number",
          "format": "double",
          "description": "Base de Calculo ICMS - [15 inteiros e 2 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS - [14 inteiros e 4 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da COFINS - [15 inteiros e 2 decimais]"
        },
        "ObservacaoLancamentoFiscal": {
          "$ref": "#/definitions/ObservacaoLancamentoFiscal"
        },
        "CodigoTotalizador": {
          "type": "string",
          "maxLength": 10,
          "description": "Código do totalizador"
        },
        "EquipamentoECF": {
          "$ref": "#/definitions/EquipamentoECF"
        },
        "Reducao": {
          "$ref": "#/definitions/Reducao"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em percentual) - [2 inteiros e 3 decimais]"
        },
        "QuantidadePautadaPIS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo PIS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em reais) - [13 inteiros e 4 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo da COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do COFINS (em percentual) - [3 inteiros e 2 decimais]"
        },
        "QuantidadePautadaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo COFINS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota da COFINS (em reais) - [13 inteiros e 4 decimais]"
        },
        "CodigoContaAnaliticaContabil": {
          "type": "string",
          "maxLength": 50,
          "description": "Código da conta analítica contábil debitada/creditada"
        },
        "NaturezaReceita": {
          "type": "string",
          "maxLength": 3,
          "description": "Natureza Receita"
        }
      }
    },
    "DocFiscalEmitidoECFItemReport": {
      "type": "object",
      "required": [
        "DocFiscalEmitidoECF",
        "Item",
        "NumeroItem",
        "CodigoTotalizador"
      ],
      "properties": {
        "DocFiscalEmitidoECF": {
          "$ref": "#/definitions/DocFiscalEmitidoECF"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número Item"
        },
        "ValorItem": {
          "type": "number",
          "format": "double",
          "description": "Valor do item - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoICMS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária"
        },
        "CFOP": {
          "type": "integer",
          "format": "int32",
          "description": "Código Fiscal de Operação e Prestação"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS - Carga tributária efetiva em percentual - [3 inteiros e 2 decimais]"
        },
        "BaseCalculoICMS": {
          "type": "number",
          "format": "double",
          "description": "Base de Calculo ICMS - [15 inteiros e 2 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS - [14 inteiros e 4 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da COFINS - [15 inteiros e 2 decimais]"
        },
        "CodigoTotalizador": {
          "type": "string",
          "maxLength": 10,
          "description": "Código do totalizador"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorPautadoPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em reais) - [13 inteiros e 4 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo da COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do COFINS (em percentual) - [3 inteiros e 2 decimais]"
        },
        "ValorPautadoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota da COFINS (em reais) - [13 inteiros e 4 decimais]"
        },
        "NaturezaReceita": {
          "type": "string",
          "maxLength": 3,
          "description": "Natureza Receita"
        }
      }
    },
    "DocumentoFiscal": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Parceiro",
        "TipoOperacao",
        "NFEmitidaEstab",
        "CodigoModelo",
        "CodigoSituacao",
        "NumeroDocumento",
        "DataEmissaoNotaFiscal",
        "TipoFrete",
        "TipoPagamento"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Transportadora": {
          "$ref": "#/definitions/Parceiro"
        },
        "EstadoVeiculo": {
          "$ref": "#/definitions/Estado"
        },
        "GrupoTensao": {
          "$ref": "#/definitions/GrupoTensao"
        },
        "TipoOperacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo de Operação"
        },
        "NFEmitidaEstab": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se NF entrada foi emitida pelo próprio estabelecimento"
        },
        "CodigoModelo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo do documento fiscal (conforme tabela 'Modelo Doc Fiscal' em anexo)"
        },
        "CodigoSituacao": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da situação do documento fiscal"
        },
        "NumeroSerie": {
          "type": "string",
          "maxLength": 4,
          "description": "Serie Documento Fiscal"
        },
        "SubSerie": {
          "type": "integer",
          "format": "int32",
          "description": "Sub Serie Documento Fiscal"
        },
        "NumeroDocumento": {
          "type": "integer",
          "format": "int32",
          "description": "Número Documento Fiscal"
        },
        "ChaveNFE": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave da Nota Fiscal Eletrônica"
        },
        "DataEmissaoNotaFiscal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Emissão Nota Fiscal"
        },
        "DataESNotaFiscal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Entrada ou Saída da Nota Fiscal"
        },
        "ValorDocFiscal": {
          "type": "number",
          "format": "double",
          "description": "Valor total do documento fiscal - [15 inteiros e 2 decimais]"
        },
        "DescontoZonaFranca": {
          "type": "number",
          "format": "double",
          "description": "Desconto Zona Franca Manaus - [15 inteiros e 2 decimais]"
        },
        "DescontoLivreComercio": {
          "type": "number",
          "format": "double",
          "description": "Desconto Livre Comércio - [15 inteiros e 2 decimais]"
        },
        "ValorMercadorias": {
          "type": "number",
          "format": "double",
          "description": "Valor Total das mercadorias constantes no documento fiscal - [15 inteiros e 2 decimais]"
        },
        "TipoFrete": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Tipo de Frete"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor do frete indicado no documento fiscal - [15 inteiros e 2 decimais]"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double",
          "description": "Valor Seguro - [15 inteiros e 2 decimais]"
        },
        "ValorDespesas": {
          "type": "number",
          "format": "double",
          "description": "Valor de outras despesas acessórias - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double",
          "description": " - [15 inteiros e 2 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS - [15 inteiros e 2 decimais]"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS Substituição Tributária - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSRed": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS não tributado em função da redução da base de cálculo ICMS - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor base de Cálculo ICMS Substituição Tributária - [15 inteiros e 2 decimais]"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor total IPI - [15 inteiros e 2 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor total PIS - [15 inteiros e 2 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor total COFINS - [15 inteiros e 2 decimais]"
        },
        "ValorPISSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor total PIS retido por Substituição Tributária - [15 inteiros e 2 decimais]"
        },
        "ValorCOFINSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor total COFINS retido por Substituição Tributária - [15 inteiros e 2 decimais]"
        },
        "ValorServicos": {
          "type": "number",
          "format": "double",
          "description": "Valor total dos Serviços - [15 inteiros e 2 decimais]"
        },
        "ValorIRFonte": {
          "type": "number",
          "format": "double",
          "description": "Valor do Imposto de Renda - Retido na Fonte - [15 inteiros e 2 decimais]"
        },
        "ValorPrevidencia": {
          "type": "number",
          "format": "double",
          "description": "Valor destacado para retenção da Previdência Social - [15 inteiros e 2 decimais]"
        },
        "PlacaVeiculo": {
          "type": "string",
          "maxLength": 7,
          "description": "Placa de identificação do veículo automotor"
        },
        "VolumeTransportado": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de volumes transportados - [15 inteiros e 2 decimais]"
        },
        "PesoBrutoVolume": {
          "type": "number",
          "format": "double",
          "description": "Peso bruto dos volumes transportados (em Kg) - [15 inteiros e 2 decimais]"
        },
        "PesoLiquidoVolume": {
          "type": "number",
          "format": "double",
          "description": "Peso líquido dos volumes transportados (em Kg) - [15 inteiros e 2 decimais]"
        },
        "TipoConsumo": {
          "type": "string",
          "maxLength": 15,
          "description": "Tipo de Consumo"
        },
        "CodigoClasseConsumo": {
          "type": "integer",
          "format": "int32",
          "description": "Classe de Consumo"
        },
        "Status": {
          "type": "string",
          "maxLength": 15,
          "description": "Identificação do modelo de uma NF de serviço"
        },
        "ChaveCTE": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave do Conhecimento de Transporte Eletrônico"
        },
        "ChaveCTEref": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave do Conhecimento de Transporte Eletrônico de referëncia, quando tipo de conhecimento for  '1'  ou ' 2'"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double",
          "description": "Valor Total do desconto comercial - [15 inteiros e 2 decimais]"
        },
        "ValorISSQN": {
          "type": "number",
          "format": "double",
          "description": "Valor do ISSQN - [15 inteiros e 2 decimais]"
        },
        "InscEstadualSubst": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual do Substituto Tributário"
        },
        "ViaTransporte": {
          "type": "string",
          "maxLength": 15,
          "description": "Via de Transporte"
        },
        "EspecieVolume": {
          "type": "string",
          "maxLength": 10,
          "description": "Espécie de Volume"
        },
        "ModalidadeFrete": {
          "type": "string",
          "maxLength": 3,
          "description": "Modalidade do Frete"
        },
        "TipoFatura": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo da Fatura"
        },
        "AliquotaIRFonte": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do IRRF - [2 inteiros e 3 decimais]"
        },
        "ValorBaseIRFonte": {
          "type": "number",
          "format": "double",
          "description": "Base de Cálculo do IRRF - [15 inteiros e 2 decimais]"
        },
        "TipoPagamento": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo de Pagamento"
        },
        "TipoLigacao": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo de Ligação"
        },
        "AtivoFixoIndDoc": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se documento fiscal se refere a ativo permanente"
        },
        "DataExecucaoServico": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Execução do Serviço"
        },
        "LocalExecucaoServico": {
          "type": "string",
          "maxLength": 1,
          "description": "Local de Execução do Serviço"
        },
        "LocalRecolhimentoISS": {
          "type": "integer",
          "format": "int32",
          "description": "Local de Recolhimento do ISSQN"
        },
        "SituacaoNota": {
          "type": "string",
          "enum": [
            "DocumentoCancelado",
            "DocumentoRegularExtemporaneo",
            "DocumentoRegular",
            "DocumentoCanceladoExtemporaneo",
            "NFeDenegada",
            "NFeNumeracao",
            "DocumentoFiscalComplementar",
            "DocumentoFiscalComplementarExtemporaneo",
            "DocumentoFiscalEmitidoRegimeEspecialNormaEspecífica",
            "NFeInutilizada",
            "ErroEstrutural"
          ]
        },
        "CodigoObra": {
          "type": "string",
          "maxLength": 15,
          "description": "Código da obra utilizado em obrigações municipais"
        },
        "ModeloNFServico": {
          "type": "string",
          "maxLength": 15,
          "description": "Modelo de Nota fiscal de serviço"
        },
        "MunicipioExecucaoServico": {
          "type": "integer",
          "format": "int32",
          "description": "Municipio execução de serviço"
        },
        "DataCancelamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de cancelamento"
        },
        "MotivoCancelamento": {
          "type": "string",
          "maxLength": 255,
          "description": "Motivo do cancelamento"
        },
        "CodigoObraFilial": {
          "type": "string",
          "maxLength": 255,
          "description": "Código Obra Filial"
        },
        "CodigoCEI": {
          "type": "string",
          "maxLength": 255,
          "description": "Código CEI"
        },
        "IndicadorNaturezaFrete": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Natureza Frete"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "CFOPEmitente": {
          "$ref": "#/definitions/CFOP"
        },
        "ValorFCP": {
          "type": "number",
          "format": "double",
          "description": "Valor Total FCP UF Destino - [15 inteiros e 2 decimais]"
        },
        "ValorICMSUFDest": {
          "type": "number",
          "format": "double",
          "description": "Valor Total ICMS Interestadual UF Destino - [15 inteiros e 2 decimais]"
        },
        "ValorICMSUFRemet": {
          "type": "number",
          "format": "double",
          "description": "Valor Total ICMS Interestadual UF Remetente - [15 inteiros e 2 decimais]"
        },
        "IndicadorOperacaoConsumidorFinal": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador Operação Consumidor"
        },
        "IndicadorInscricaoEstadualDestinatario": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador Inscrição Estadual Destinatário"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Escrituração"
        },
        "CodigoReferenciaIntegracao": {
          "type": "string",
          "maxLength": 50,
          "description": "Código Referência Integração"
        },
        "PaisEmbarque": {
          "$ref": "#/definitions/Pais"
        },
        "EstadoEmbarque": {
          "$ref": "#/definitions/Estado"
        },
        "LocalEmbarque": {
          "type": "string",
          "maxLength": 60,
          "description": "Local de Embarque"
        },
        "LocalDespacho": {
          "type": "string",
          "maxLength": 60,
          "description": "Local do Despacho"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalItem"
          }
        },
        "ObservacaoDocumentoLancamentoFiscal": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservacaoDocumentoLancamentoFiscal"
          }
        },
        "Parcelas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalParcela"
          }
        },
        "ImpostosRetidos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalImpostoRetido"
          }
        },
        "InformacoesComplementares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalInfoComplementar"
          }
        },
        "ComplementoCTRodoviario": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransporteRodoviarioComplemento"
          }
        },
        "NotasFiscaisCT": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransporteRodoviarioNotaFiscal"
          }
        },
        "Parceiros": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalParceiro"
          }
        },
        "LocalRecolhimentoISSMunicipio": {
          "$ref": "#/definitions/Municipio"
        },
        "MunicipioExecucaoServicoMunicipio": {
          "$ref": "#/definitions/Municipio"
        }
      }
    },
    "DocumentoFiscalFatura": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "CondicaoPagamento": {
          "$ref": "#/definitions/CondicaoPagamento"
        },
        "EmitenteTitulo": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do emitente do título"
        },
        "TipoTituloCredito": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador do tipo do título de crédito"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição complementar do tipo do título de crédito (quando tipo = '99')"
        },
        "CodigoTituloCredito": {
          "type": "string",
          "maxLength": 50,
          "description": "Número ou código identificador do título de crédito"
        },
        "QuantidadeParcela": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de parcelas a receber/pagar"
        },
        "ValorTituloCredito": {
          "type": "number",
          "format": "double",
          "description": "Valor original do título de crédito - Considerar 2 casas decimais - [15 inteiros e 2 decimais]"
        }
      }
    },
    "DocumentoFiscalHistorico": {
      "type": "object",
      "properties": {
        "DocumentoFiscalMensageria": {
          "$ref": "#/definitions/DocumentoFiscalMensageria"
        },
        "DataHora": {
          "type": "string",
          "format": "date-time"
        },
        "Acao": {
          "type": "string"
        },
        "Motivo": {
          "type": "string"
        },
        "Protocolo": {
          "type": "string"
        },
        "StatusSEFAZ": {
          "type": "string"
        },
        "StatusHistorico": {
          "type": "string"
        },
        "Recibo": {
          "type": "string"
        }
      }
    },
    "DocumentoFiscalImpostoRetido": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "ImpostoRetido",
        "DataPagamento"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "AtribuicaoAliquotasRetencao": {
          "$ref": "#/definitions/AtribuicaoAliquotasRetencao"
        },
        "DataPagamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento"
        },
        "CodigoReceita": {
          "type": "string",
          "maxLength": 10,
          "description": "Código da Receita"
        },
        "ValorBaseRetencao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Retenção - [17 inteiros e 2 decimais]"
        },
        "AliquotaRetencao": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção - [3 inteiros e 4 decimais]"
        },
        "ValorRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido - [17 inteiros e 2 decimais]"
        }
      }
    },
    "DocumentoFiscalInfoComplementar": {
      "type": "object",
      "required": [
        "BusinessID",
        "DocumentoFiscal",
        "InformacaoComplementar",
        "Descricao"
      ],
      "properties": {
        "BusinessID": {
          "$ref": "#/definitions/DocumentoFiscalInfoComplementarID"
        },
        "DocumentoFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "InformacaoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição complementar do código de referência"
        },
        "DocumentoFiscalReferenciado": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalReferenciado"
          }
        },
        "ProcessoReferenciado": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessoReferenciado"
          }
        },
        "ArrecadacaoReferenciado": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArrecadacaoReferenciado"
          }
        },
        "CupomFiscalReferenciado": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CupomFiscalReferenciado"
          }
        },
        "LocalColetaEntrega": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalColetaEntrega"
          }
        }
      }
    },
    "DocumentoFiscalInfoComplementarID": {
      "type": "object",
      "properties": {}
    },
    "DocumentoFiscalItem": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "NumeroItem",
        "Item",
        "UnidadeMedida"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número seqüencial do item no documento fiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição complementar do item como adotado no documento fiscal"
        },
        "QuantidadeItem": {
          "type": "number",
          "format": "double",
          "description": "Quantidade do item - [14 inteiros e 3 decimais]"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "ValorItem": {
          "type": "number",
          "format": "double",
          "description": "Valor total do item - [11 inteiros e 6 decimais]"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double",
          "description": "Valor do desconto comercial - [15 inteiros e 2 decimais]"
        },
        "MovimentaItem": {
          "type": "string",
          "maxLength": 1,
          "description": "Movimentação física do ITEM/PRODUTO"
        },
        "CodigoSituacaoICMSTabA": {
          "type": "string",
          "maxLength": 1,
          "description": "Código da Situação Tributária A referente ao ICMS"
        },
        "CodigoSituacaoICMSTabB": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária B referente ao ICMS"
        },
        "CodigoCFOP": {
          "type": "integer",
          "format": "int32",
          "description": "Código Fiscal de Operação e Prestação"
        },
        "CodigoNaturezaOperacao": {
          "type": "string",
          "maxLength": 10,
          "description": "Código da natureza da operação"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do ICMS - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS - [3 inteiros e 4 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS creditado/debitado - [15 inteiros e 2 decimais]"
        },
        "ValorICMSReducao": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS não tributado em função da redução da base de cálculo ICMS - [15 inteiros e 2 decimais]"
        },
        "AliquotaReducaoICMS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota de redução da base do ICMS - [3 inteiros e 4 decimais]"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo referente à substituição tributária - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS da substituição tributária na unidade da federação de destino - [3 inteiros e 4 decimais]"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS referente à substituoção tributária - [15 inteiros e 2 decimais]"
        },
        "PeriodoApuracaoIPI": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de período de apuração do IPI"
        },
        "CodigoSituacaoIPI": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária referente ao IPI"
        },
        "CodigoEnquadraIPI": {
          "type": "string",
          "maxLength": 3,
          "description": "Código de enquadramento legal do IPI"
        },
        "ValorBaseIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do IPI - [15 inteiros e 2 decimais]"
        },
        "AliquotaIPI": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do IPI - [3 inteiros e 4 decimais]"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor do IPI creditado/debitado - [15 inteiros e 2 decimais]"
        },
        "CodigoSeloIPI": {
          "type": "string",
          "maxLength": 6,
          "description": "Código do selo de controle do IPI"
        },
        "QuantidadeSeloIPI": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de selo de controle do IPI aplicada"
        },
        "CodigoClassseIPI": {
          "type": "string",
          "maxLength": 5,
          "description": "Código da classe de enquadramento do IPI"
        },
        "ValorPautadoIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor por unidade padrão de tributação - [13 inteiros e 4 decimais]"
        },
        "QuantidadePautadaIPI": {
          "type": "number",
          "format": "double",
          "description": "Quantidade total de produtos na unidade padrão de tributação - [14 inteiros e 3 decimais]"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em percentual) - [3 inteiros e 4 decimais]"
        },
        "QuantidadePautadaPIS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo PIS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em reais) - [13 inteiros e 4 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo da COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do COFINS (em percentual) - [3 inteiros e 4 decimais]"
        },
        "QuantidadePautadaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo COFINS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota da COFINS (em reais) - [13 inteiros e 4 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da COFINS - [15 inteiros e 2 decimais]"
        },
        "CodigoContaAnaliticaContabil": {
          "type": "string",
          "maxLength": 50,
          "description": "Código da conta analítica contábil debitada/creditada"
        },
        "ValorBaseISSQN": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do ISSQN - [15 inteiros e 2 decimais]"
        },
        "AliquotaISSQN": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ISSQN - [3 inteiros e 4 decimais]"
        },
        "ValorISSQN": {
          "type": "number",
          "format": "double",
          "description": "Valor do ISSQN - [15 inteiros e 2 decimais]"
        },
        "TipoDocImportacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo Documento de   de importação"
        },
        "NumeroDocImportacao": {
          "type": "string",
          "maxLength": 12,
          "description": "Número do documento de Importação."
        },
        "IndTributacaoIPI": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Tributação do IPI"
        },
        "IndTributacaoICMS": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Tributação do ICMS"
        },
        "CategoriaNF": {
          "type": "string",
          "maxLength": 5
        },
        "ValorISSRetido": {
          "type": "number",
          "format": "double",
          "description": " - [15 inteiros e 2 decimais]"
        },
        "ComplL57": {
          "type": "string",
          "maxLength": 100
        },
        "ComplObjIsencao": {
          "type": "string",
          "maxLength": 5
        },
        "AtoConcDrawback": {
          "type": "string",
          "maxLength": 11,
          "description": "Ato Concessorio Drawback"
        },
        "ValorContabilItem": {
          "type": "number",
          "format": "double",
          "description": "Valor contábil do item - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoIndItem": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se o item do documento fiscal se refere a Ativo Permanente"
        },
        "AtivoFixoValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoValorICMSST": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS ST no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoValorICMSFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS sobre frete no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoValorICMSDif": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS – diferencial de alíquota, conforme documento de arrecadação no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSTributado": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS tributado – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSIsento": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS isento– utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSOutros": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS outros – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseIPITributado": {
          "type": "number",
          "format": "double",
          "description": "Valor base IPI tributado – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseIPIIsento": {
          "type": "number",
          "format": "double",
          "description": "Valor base IPI isento– utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseIPIOutros": {
          "type": "number",
          "format": "double",
          "description": "Valor base IPI outros – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "IndOriCreditoPISCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador da Origem do Crédito"
        },
        "CodigoNatBCCreditoPISCOFINS": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Base de Cálculo do Crédito"
        },
        "NaturezaOperacao": {
          "$ref": "#/definitions/NaturezaOperacao"
        },
        "CodServicoMunic": {
          "type": "string",
          "maxLength": 20,
          "description": "Código do serviço Municipal"
        },
        "DescServicoMunic": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição do serviço Municipal"
        },
        "NaturezaReceita": {
          "type": "string",
          "maxLength": 3,
          "description": "Natureza Receita"
        },
        "ValorDespesas": {
          "type": "number",
          "format": "double",
          "description": "Valor das despesas - [13 inteiros e 2 decimais]"
        },
        "ValorUnidade": {
          "type": "number",
          "format": "double",
          "description": "Valor da Unidade - [17 inteiros e 1 decimais]"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor do frete - [13 inteiros e 2 decimais]"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double",
          "description": "Valor do seguro - [13 inteiros e 2 decimais]"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "PerfilTributacao": {
          "$ref": "#/definitions/PerfilTributacao"
        },
        "AtribuicaoPerfilTributacao": {
          "$ref": "#/definitions/AtribuicaoPerfilTributacao"
        },
        "PerfilContabilizacao": {
          "$ref": "#/definitions/PerfilContabilizacao"
        },
        "AtribuicaoPerfilContabil": {
          "$ref": "#/definitions/AtribuicaoPerfilContabil"
        },
        "AtribuicaoAliquotaICMS": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotaICMSSubst": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotaIPI": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotaPIS": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotaCOFINS": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotaISS": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "CFOPEmitente": {
          "$ref": "#/definitions/CFOP"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "PercentualPartilha": {
          "type": "number",
          "format": "double",
          "description": "Percentual de Partilha - [0 inteiros e 3 decimais]"
        },
        "PercentualFCP": {
          "type": "number",
          "format": "double",
          "description": "Percentual FCP - [0 inteiros e 3 decimais]"
        },
        "ValorICMSFCP": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS FCP - [15 inteiros e 2 decimais]"
        },
        "AliquotaInternaDestino": {
          "type": "number",
          "format": "double",
          "description": "Alíquota Interna Destino - [3 inteiros e 2 decimais]"
        },
        "ValorICMSDestino": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS Destino - [15 inteiros e 2 decimais]"
        },
        "ValorICMSOrigem": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS Origem - [15 inteiros e 2 decimais]"
        },
        "RegistroExportacao": {
          "type": "string",
          "maxLength": 12,
          "description": "Registro Exportação"
        },
        "FlagRessarcimentoICMSSubst": {
          "type": "integer",
          "format": "int32",
          "description": "Ressarcimento de ICMS em Operações com Substrituição Tributária"
        },
        "TipoFrete": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Tipo de Frete"
        },
        "IndicadorNaturezaFrete": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Natureza Frete"
        },
        "CodigoReferenciaIntegracao": {
          "type": "string",
          "maxLength": 50,
          "description": "Código Referência Integração"
        },
        "ValorBaseICMSDifal": {
          "type": "number",
          "format": "double",
          "description": "Valor Base ICMS Difal - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMSDifal": {
          "type": "number",
          "format": "double",
          "description": "Aliquota de ICMS Difal - [1 inteiros e 4 decimais]"
        },
        "ValorICMSDifal": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS Difal - [15 inteiros e 2 decimais]"
        },
        "Contabilizacoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalItemConta"
          }
        },
        "RessarcimentosICMS": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalItemRessarcimentoICMS"
          }
        },
        "DocumentoFiscalItemImportacao": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalItemImportacao"
          }
        },
        "CFOP": {
          "$ref": "#/definitions/CFOP"
        },
        "NaturezaBaseCalculoCreditoPISCOFINS": {
          "$ref": "#/definitions/ClasseDocumentoPISCOFINS"
        },
        "SituacaoTributariaICMSTabA": {
          "$ref": "#/definitions/SituacaoTributariaICMSTabA"
        },
        "SituacaoTributariaICMSTabB": {
          "$ref": "#/definitions/SituacaoTributariaICMSTabB"
        },
        "SituacaoTributariaIPI": {
          "$ref": "#/definitions/SituacaoTributariaIPI"
        },
        "SituacaoTributariaPIS": {
          "$ref": "#/definitions/SituacaoTributariaPIS"
        },
        "SituacaoTributariaCOFINS": {
          "$ref": "#/definitions/SituacaoTributariaCOFINS"
        },
        "CEST": {
          "$ref": "#/definitions/CEST"
        },
        "UnidadesMedidasTributaveisComercioExterior": {
          "$ref": "#/definitions/UnidadesMedidasTributaveisComercioExterior"
        }
      }
    },
    "DocumentoFiscalItemConta": {
      "type": "object",
      "properties": {
        "DocumentoFiscalItem": {
          "$ref": "#/definitions/DocumentoFiscalItem"
        },
        "TipoConta": {
          "type": "string"
        },
        "IDPlanoConta": {
          "type": "integer",
          "format": "int32"
        },
        "TipoLancamento": {
          "type": "string"
        },
        "ValorLancamento": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DocumentoFiscalItemImportacao": {
      "type": "object",
      "properties": {
        "DocumentoFiscalItem": {
          "$ref": "#/definitions/DocumentoFiscalItem"
        },
        "ParceiroFabricante": {
          "$ref": "#/definitions/Parceiro"
        },
        "ParceiroExportador": {
          "$ref": "#/definitions/Parceiro"
        },
        "SequenciaItemImportacao": {
          "type": "integer",
          "format": "int32"
        },
        "NumeroDI": {
          "type": "string"
        },
        "DataDI": {
          "type": "string",
          "format": "date-time"
        },
        "UFDesembaraco": {
          "type": "string"
        },
        "DataDesembaraco": {
          "type": "string",
          "format": "date-time"
        },
        "LocalDesembaraco": {
          "type": "string"
        },
        "AtoDrawback": {
          "type": "string"
        },
        "NumeroAdicao": {
          "type": "string"
        },
        "SequenciaAdicao": {
          "type": "integer",
          "format": "int32"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double"
        },
        "ViaTransporte": {
          "type": "integer",
          "format": "int32"
        },
        "ValorAdicionalFrete": {
          "type": "number",
          "format": "double"
        },
        "TipoIntermediario": {
          "type": "integer",
          "format": "int32"
        },
        "CNPJIntermediario": {
          "type": "string"
        }
      }
    },
    "DocumentoFiscalItemLight": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "NumeroItem",
        "Item",
        "UnidadeMedida"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número seqüencial do item no documento fiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição complementar do item como adotado no documento fiscal"
        },
        "QuantidadeItem": {
          "type": "number",
          "format": "double",
          "description": "Quantidade do item - [14 inteiros e 3 decimais]"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "ValorItem": {
          "type": "number",
          "format": "double",
          "description": "Valor total do item - [11 inteiros e 6 decimais]"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double",
          "description": "Valor do desconto comercial - [15 inteiros e 2 decimais]"
        },
        "MovimentaItem": {
          "type": "string",
          "maxLength": 1,
          "description": "Movimentação física do ITEM/PRODUTO"
        },
        "CodigoSituacaoICMSTabA": {
          "type": "string",
          "maxLength": 1,
          "description": "Código da Situação Tributária A referente ao ICMS"
        },
        "CodigoSituacaoICMSTabB": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária B referente ao ICMS"
        },
        "CodigoCFOP": {
          "type": "integer",
          "format": "int32",
          "description": "Código Fiscal de Operação e Prestação"
        },
        "CodigoNaturezaOperacao": {
          "type": "string",
          "maxLength": 10,
          "description": "Código da natureza da operação"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do ICMS - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS - [3 inteiros e 4 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS creditado/debitado - [15 inteiros e 2 decimais]"
        },
        "ValorICMSReducao": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS não tributado em função da redução da base de cálculo ICMS - [15 inteiros e 2 decimais]"
        },
        "AliquotaReducaoICMS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota de redução da base do ICMS - [3 inteiros e 4 decimais]"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo referente à substituição tributária - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS da substituição tributária na unidade da federação de destino - [3 inteiros e 4 decimais]"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS referente à substituoção tributária - [15 inteiros e 2 decimais]"
        },
        "PeriodoApuracaoIPI": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de período de apuração do IPI"
        },
        "CodigoSituacaoIPI": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária referente ao IPI"
        },
        "CodigoEnquadraIPI": {
          "type": "string",
          "maxLength": 3,
          "description": "Código de enquadramento legal do IPI"
        },
        "ValorBaseIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do IPI - [15 inteiros e 2 decimais]"
        },
        "AliquotaIPI": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do IPI - [3 inteiros e 4 decimais]"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor do IPI creditado/debitado - [15 inteiros e 2 decimais]"
        },
        "CodigoSeloIPI": {
          "type": "string",
          "maxLength": 6,
          "description": "Código do selo de controle do IPI"
        },
        "QuantidadeSeloIPI": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de selo de controle do IPI aplicada"
        },
        "CodigoClassseIPI": {
          "type": "string",
          "maxLength": 5,
          "description": "Código da classe de enquadramento do IPI"
        },
        "ValorPautadoIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor por unidade padrão de tributação - [13 inteiros e 4 decimais]"
        },
        "QuantidadePautadaIPI": {
          "type": "number",
          "format": "double",
          "description": "Quantidade total de produtos na unidade padrão de tributação - [14 inteiros e 3 decimais]"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em percentual) - [3 inteiros e 4 decimais]"
        },
        "QuantidadePautadaPIS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo PIS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em reais) - [13 inteiros e 4 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo da COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do COFINS (em percentual) - [3 inteiros e 4 decimais]"
        },
        "QuantidadePautadaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo COFINS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota da COFINS (em reais) - [13 inteiros e 4 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da COFINS - [15 inteiros e 2 decimais]"
        },
        "CodigoContaAnaliticaContabil": {
          "type": "string",
          "maxLength": 50,
          "description": "Código da conta analítica contábil debitada/creditada"
        },
        "ValorBaseISSQN": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do ISSQN - [15 inteiros e 2 decimais]"
        },
        "AliquotaISSQN": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ISSQN - [3 inteiros e 4 decimais]"
        },
        "ValorISSQN": {
          "type": "number",
          "format": "double",
          "description": "Valor do ISSQN - [15 inteiros e 2 decimais]"
        },
        "TipoDocImportacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo Documento de   de importação"
        },
        "NumeroDocImportacao": {
          "type": "string",
          "maxLength": 12,
          "description": "Número do documento de Importação."
        },
        "IndTributacaoIPI": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Tributação do IPI"
        },
        "IndTributacaoICMS": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Tributação do ICMS"
        },
        "CategoriaNF": {
          "type": "string",
          "maxLength": 5
        },
        "ValorISSRetido": {
          "type": "number",
          "format": "double",
          "description": " - [15 inteiros e 2 decimais]"
        },
        "ComplL57": {
          "type": "string",
          "maxLength": 100
        },
        "ComplObjIsencao": {
          "type": "string",
          "maxLength": 5
        },
        "AtoConcDrawback": {
          "type": "string",
          "maxLength": 11,
          "description": "Ato Concessorio Drawback"
        },
        "ValorContabilItem": {
          "type": "number",
          "format": "double",
          "description": "Valor contábil do item - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoIndItem": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se o item do documento fiscal se refere a Ativo Permanente"
        },
        "AtivoFixoValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoValorICMSST": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS ST no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoValorICMSFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS sobre frete no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "AtivoFixoValorICMSDif": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS – diferencial de alíquota, conforme documento de arrecadação no caso de item de ativo permanente - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSTributado": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS tributado – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSIsento": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS isento– utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSOutros": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS outros – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseIPITributado": {
          "type": "number",
          "format": "double",
          "description": "Valor base IPI tributado – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseIPIIsento": {
          "type": "number",
          "format": "double",
          "description": "Valor base IPI isento– utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseIPIOutros": {
          "type": "number",
          "format": "double",
          "description": "Valor base IPI outros – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "IndOriCreditoPISCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador da Origem do Crédito"
        },
        "CodigoNatBCCreditoPISCOFINS": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Base de Cálculo do Crédito"
        },
        "NaturezaOperacao": {
          "$ref": "#/definitions/NaturezaOperacao"
        },
        "CodServicoMunic": {
          "type": "string",
          "maxLength": 20,
          "description": "Código do serviço Municipal"
        },
        "DescServicoMunic": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição do serviço Municipal"
        },
        "NaturezaReceita": {
          "type": "string",
          "maxLength": 3,
          "description": "Natureza Receita"
        },
        "ValorDespesas": {
          "type": "number",
          "format": "double",
          "description": "Valor das despesas - [13 inteiros e 2 decimais]"
        },
        "ValorUnidade": {
          "type": "number",
          "format": "double",
          "description": "Valor da Unidade - [17 inteiros e 1 decimais]"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor do frete - [13 inteiros e 2 decimais]"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double",
          "description": "Valor do seguro - [13 inteiros e 2 decimais]"
        }
      }
    },
    "DocumentoFiscalItemRessarcimentoICMS": {
      "type": "object",
      "required": [
        "DocumentoFiscal",
        "DocumentoFiscalItem",
        "ParceiroUltimaEntrada",
        "CodigoModeloUltEntrada",
        "NumeroDocumentoUltEntrada",
        "DataUltEntrada",
        "NumeroItemUltEntrada"
      ],
      "properties": {
        "DocumentoFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "DocumentoFiscalItem": {
          "$ref": "#/definitions/DocumentoFiscalItem"
        },
        "ParceiroUltimaEntrada": {
          "$ref": "#/definitions/Parceiro"
        },
        "ParceiroICMSSubstRetido": {
          "$ref": "#/definitions/Parceiro"
        },
        "CodigoModeloUltEntrada": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo da última entrada"
        },
        "NumeroDocumentoUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Número do documeto da última entrada - [0 inteiros e 9 decimais]"
        },
        "SerieDocumentoUltEntrada": {
          "type": "string",
          "maxLength": 3,
          "description": "Série do documento da última entrada"
        },
        "DataUltEntrada": {
          "type": "string",
          "format": "date-time",
          "description": "Data da última entrada"
        },
        "QuantidadeUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Quantidade da última entrada - [12 inteiros e 3 decimais]"
        },
        "ValorUnitarioUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Valor unitário da última entrada - [12 inteiros e 3 decimais]"
        },
        "ValorUnitarioBaseICMSSubstPago": {
          "type": "number",
          "format": "double",
          "description": "Valor unitário da base de icms de subst. pago - [12 inteiros e 3 decimais]"
        },
        "ChaveNFeUltEntrada": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave da nfe da última entrada"
        },
        "NumeroItemUltEntrada": {
          "type": "integer",
          "format": "int32",
          "description": "Número do item da última entrada"
        },
        "ValorUnitarioBaseICMSUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Valor unitário da base de icms da última entrada - [13 inteiros e 2 decimais]"
        },
        "AliquotaICMSUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de icms da última entrada - [13 inteiros e 2 decimais]"
        },
        "ValorLimiteBaseUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Valor limite da base da última entrada - [13 inteiros e 2 decimais]"
        },
        "ValorUnitarioICMSUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Valor unitário do icms da última entrada - [12 inteiros e 3 decimais]"
        },
        "AliquotaICMSSubstUltEntrada": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de icms subst. da última entrada - [13 inteiros e 2 decimais]"
        },
        "ValorUnitarioRessarcimento": {
          "type": "number",
          "format": "double",
          "description": "Valor unitário do ressarcimento - [12 inteiros e 3 decimais]"
        },
        "CodigoResponsavelRetencao": {
          "type": "string",
          "maxLength": 1,
          "description": "Código do responsável da retenção"
        },
        "CodigoMotivoRessarcimento": {
          "type": "string",
          "maxLength": 1,
          "description": "Código do motivo do ressarcimento"
        },
        "ChaveNFeICMSSubstRetido": {
          "type": "string",
          "maxLength": 44,
          "description": "Chae da nfe do icms subst. retido"
        },
        "NumeroDocumentoICMSSubstRetido": {
          "type": "number",
          "format": "double",
          "description": "Número do documento do icms subst. retido - [0 inteiros e 9 decimais]"
        },
        "SerieDocumentoICMSSubstRetido": {
          "type": "string",
          "maxLength": 3,
          "description": "Série do documento do icms subst. retido"
        },
        "NumeroItemICMSSubstRetido": {
          "type": "integer",
          "format": "int32",
          "description": "Número do item do icms subst. retido"
        },
        "CodigoModeloArrecadacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Código do modelo da arrecadação"
        },
        "NumeroDocumentoArrecadacao": {
          "type": "string",
          "maxLength": 255,
          "description": "Número do documento da arrecadação"
        }
      }
    },
    "DocumentoFiscalItemXML": {
      "type": "object",
      "properties": {
        "DocumentoFiscalCabecalhoXML": {
          "$ref": "#/definitions/DocumentoFiscalXml"
        },
        "NaturezaOperacao": {
          "$ref": "#/definitions/NaturezaOperacao"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32"
        },
        "CodigoItem": {
          "type": "string"
        },
        "DescricaoComplementar": {
          "type": "string"
        },
        "QuantidadeItem": {
          "type": "number",
          "format": "double"
        },
        "ValorItem": {
          "type": "number",
          "format": "double"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double"
        },
        "MovimentaItem": {
          "type": "string"
        },
        "CodigoSituacaoICMSTabA": {
          "type": "string"
        },
        "CodigoSituacaoICMSTabB": {
          "type": "string"
        },
        "CFOP": {
          "type": "integer",
          "format": "int32"
        },
        "CodigoNaturezaOperacao": {
          "type": "string"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSReducao": {
          "type": "number",
          "format": "double"
        },
        "AliquotaReducaoICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "AliquotaICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "PeriodoApuracaoIPI": {
          "type": "string"
        },
        "CodigoSituacaoIPI": {
          "type": "string"
        },
        "CodigoEnquadraIPI": {
          "type": "string"
        },
        "ValorBaseIPI": {
          "type": "number",
          "format": "double"
        },
        "AliquotaIPI": {
          "type": "number",
          "format": "double"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double"
        },
        "CodigoSeloIPI": {
          "type": "string"
        },
        "QuantidadeSeloIPI": {
          "type": "integer",
          "format": "int32"
        },
        "CodigoClassseIPI": {
          "type": "string"
        },
        "ValorPautadoIPI": {
          "type": "number",
          "format": "double"
        },
        "QuantidadePautadaIPI": {
          "type": "number",
          "format": "double"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double"
        },
        "QuantidadePautadaPIS": {
          "type": "number",
          "format": "double"
        },
        "ValorPautadoPIS": {
          "type": "number",
          "format": "double"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double"
        },
        "QuantidadePautadaCOFINS": {
          "type": "number",
          "format": "double"
        },
        "ValorPautadoCOFINS": {
          "type": "number",
          "format": "double"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double"
        },
        "CodigoContaAnaliticaContabil": {
          "type": "string"
        },
        "ValorBaseISSQN": {
          "type": "number",
          "format": "double"
        },
        "AliquotaISSQN": {
          "type": "number",
          "format": "double"
        },
        "ValorISSQN": {
          "type": "number",
          "format": "double"
        },
        "TipoDocImportacao": {
          "type": "string"
        },
        "NumeroDocImportacao": {
          "type": "string"
        },
        "IndTributacaoIPI": {
          "type": "string"
        },
        "IndTributacaoICMS": {
          "type": "string"
        },
        "CategoriaNF": {
          "type": "string"
        },
        "ValorISSRetido": {
          "type": "number",
          "format": "double"
        },
        "ComplL57": {
          "type": "string"
        },
        "ComplObjIsencao": {
          "type": "string"
        },
        "AtoConcDrawback": {
          "type": "string"
        },
        "ValorContabilItem": {
          "type": "number",
          "format": "double"
        },
        "AtivoFixoIndItem": {
          "type": "string"
        },
        "AtivoFixoValorICMS": {
          "type": "number",
          "format": "double"
        },
        "AtivoFixoValorICMSST": {
          "type": "number",
          "format": "double"
        },
        "AtivoFixoValorICMSFrete": {
          "type": "number",
          "format": "double"
        },
        "AtivoFixoValorICMSDif": {
          "type": "number",
          "format": "double"
        },
        "AtivoFixoQtdAtivada": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSTributado": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSIsento": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSOutros": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseIPITributado": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseIPIIsento": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseIPIOutros": {
          "type": "number",
          "format": "double"
        },
        "IndOriCreditoPISCOFINS": {
          "type": "integer",
          "format": "int32"
        },
        "NatBCCreditoPISCOFINS": {
          "type": "string"
        },
        "NumeroPedidoExterno": {
          "type": "string"
        },
        "NumeroPedidoExternoItem": {
          "type": "integer",
          "format": "int32"
        },
        "CodServicoMunic": {
          "type": "string"
        },
        "DescServicoMunic": {
          "type": "string"
        },
        "NaturezaReceita": {
          "type": "string"
        },
        "FlagRateioPisCofins": {
          "type": "string"
        },
        "ValorDespesa": {
          "type": "number",
          "format": "double"
        },
        "ValorUnidade": {
          "type": "number",
          "format": "double"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DocumentoFiscalLight": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Parceiro",
        "TipoOperacao",
        "CodigoModelo",
        "CodigoSituacao",
        "NumeroDocumento",
        "DataEmissaoNotaFiscal",
        "TipoFrete"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Transportadora": {
          "$ref": "#/definitions/Parceiro"
        },
        "TipoOperacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo de Operação"
        },
        "CodigoModelo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo do documento fiscal (conforme tabela 'Modelo Doc Fiscal' em anexo)"
        },
        "CodigoSituacao": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da situação do documento fiscal"
        },
        "NumeroSerie": {
          "type": "string",
          "maxLength": 4,
          "description": "Serie Documento Fiscal"
        },
        "SubSerie": {
          "type": "integer",
          "format": "int32",
          "description": "Sub Serie Documento Fiscal"
        },
        "NumeroDocumento": {
          "type": "integer",
          "format": "int32",
          "description": "Número Documento Fiscal"
        },
        "ChaveNFE": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave da Nota Fiscal Eletrônica"
        },
        "DataEmissaoNotaFiscal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Emissão Nota Fiscal"
        },
        "DataESNotaFiscal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Entrada ou Saída da Nota Fiscal"
        },
        "ValorDocFiscal": {
          "type": "number",
          "format": "double",
          "description": "Valor total do documento fiscal - [15 inteiros e 2 decimais]"
        },
        "DescontoZonaFranca": {
          "type": "number",
          "format": "double",
          "description": "Desconto Zona Franca Manaus - [15 inteiros e 2 decimais]"
        },
        "DescontoLivreComercio": {
          "type": "number",
          "format": "double",
          "description": "Desconto Livre Comércio - [15 inteiros e 2 decimais]"
        },
        "ValorMercadorias": {
          "type": "number",
          "format": "double",
          "description": "Valor Total das mercadorias constantes no documento fiscal - [15 inteiros e 2 decimais]"
        },
        "TipoFrete": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Tipo de Frete"
        },
        "Status": {
          "type": "string",
          "maxLength": 15,
          "description": "Identificação do modelo de uma NF de serviço"
        },
        "DataExecucaoServico": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Execução do Serviço"
        },
        "SituacaoNota": {
          "type": "string",
          "enum": [
            "DocumentoCancelado",
            "DocumentoRegularExtemporaneo",
            "DocumentoRegular",
            "DocumentoCanceladoExtemporaneo",
            "NFeDenegada",
            "NFeNumeracao",
            "DocumentoFiscalComplementar",
            "DocumentoFiscalComplementarExtemporaneo",
            "DocumentoFiscalEmitidoRegimeEspecialNormaEspecífica",
            "NFeInutilizada",
            "ErroEstrutural"
          ]
        },
        "DataCancelamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de cancelamento"
        },
        "MotivoCancelamento": {
          "type": "string",
          "maxLength": 255,
          "description": "Motivo do cancelamento"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "CFOPEmitente": {
          "$ref": "#/definitions/CFOP"
        }
      }
    },
    "DocumentoFiscalMensageria": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DocumentoFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "ChaveNFe": {
          "type": "string"
        },
        "NumeroDocumento": {
          "type": "integer",
          "format": "int32"
        },
        "DataEmissao": {
          "type": "string",
          "format": "date-time"
        },
        "NumeroSerie": {
          "type": "string"
        },
        "CodigoModelo": {
          "type": "string"
        },
        "CNPJEmitente": {
          "type": "string"
        },
        "CNPJDestinatario": {
          "type": "string"
        },
        "StatusSEFAZ": {
          "type": "string"
        },
        "Motivo": {
          "type": "string"
        },
        "Historico": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalHistorico"
          }
        }
      }
    },
    "DocumentoFiscalOperacaoArmas": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "NumeroItem",
        "Item"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número seqüencial do item no documento fiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "TipoArma": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo da arma de fogo:"
        },
        "NumeroSerieArma": {
          "type": "string",
          "maxLength": 30,
          "description": "Numeração de série de fabricação da arma"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição da arma, compreendendo: calibre, marca, capacidade de cartuchos, tipo de funcionamento, quantidade de canos, comprimento, tipo de alma, quantidade e sentido das raias e demais elementos que permitam sua perfeita identificação"
        }
      }
    },
    "DocumentoFiscalOperacaoMedicamentoItem": {
      "type": "object",
      "required": [
        "CabecalhoDocFiscal",
        "NumeroItem",
        "Item"
      ],
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número seqüencial do item no documento fiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "NumeroLoteFabricacao": {
          "type": "string",
          "maxLength": 30,
          "description": "Número do lote de fabricação do medicamento"
        },
        "QuantidadeItensLote": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de item por lote - [14 inteiros e 3 decimais]"
        },
        "DataFabricacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de fabricação do medicamento"
        },
        "DataExpiracao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de expiração da validade do medicamento"
        },
        "TipoCalculoICMS": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de tipo de referência da base de cálculo do ICMS (ST) do produto farmacêutico:"
        },
        "TipoProduto": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo de produto"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor do preço tabelado ou valor do preço máximo - [15 inteiros e 2 decimais]"
        }
      }
    },
    "DocumentoFiscalOperacaoVeiculoNovo": {
      "type": "object",
      "required": [
        "CabecalhoDocFiscal",
        "NumeroItem",
        "Item"
      ],
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número seqüencial do item no documento fiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "TipoOperacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo de operação com veículo:"
        },
        "CNPJConcessionaria": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da Concessionária, nos casos de Venda direta."
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "ChassiVeiculo": {
          "type": "string",
          "maxLength": 17,
          "description": "Chassi do veículo"
        }
      }
    },
    "DocumentoFiscalParceiro": {
      "type": "object",
      "properties": {
        "DocumentoFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "Tipo": {
          "type": "integer",
          "format": "int32"
        },
        "Nome": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "InscricaoEstadual": {
          "type": "string"
        },
        "InscricaoMunicipal": {
          "type": "string"
        },
        "InscricaoSuframa": {
          "type": "string"
        },
        "NomeFantasia": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "CEP": {
          "type": "integer",
          "format": "int32"
        },
        "Telefone": {
          "type": "string"
        },
        "DDD": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "DocumentoFiscalParcela": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NumeroParcela": {
          "type": "integer",
          "format": "int32",
          "description": "Número da parcela a receber/pagar"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de vencimento da parcela"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double",
          "description": "Valor da parcela a receber/pagar Considerar 2 casas decimais - [15 inteiros e 2 decimais]"
        }
      }
    },
    "DocumentoFiscalReferenciado": {
      "type": "object",
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "InfoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "CodigoModeloReferenciado": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo documento fiscal referenciado"
        },
        "NumeroSerieReferenciado": {
          "type": "string",
          "maxLength": 4,
          "description": "Série do documento fiscal referenciado"
        },
        "NumeroSubserieReferenciado": {
          "type": "integer",
          "format": "int32",
          "description": "Subsérie do documento fiscal referenciado"
        },
        "NumeroDocReferenciado": {
          "type": "integer",
          "format": "int32",
          "description": "Número do documento fiscal referenciado"
        },
        "DataEmissao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da emissão do documento fiscal.referenciado Formato"
        },
        "TipoOperacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo de operação referenciado"
        },
        "EmitenteTitulo": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do emitente do título:"
        }
      }
    },
    "DocumentoFiscalXml": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Transportadora": {
          "$ref": "#/definitions/Parceiro"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "TipoOperacao": {
          "type": "string"
        },
        "NFEmitidaEstab": {
          "type": "string"
        },
        "CodigoModelo": {
          "type": "string"
        },
        "CodigoSituacao": {
          "type": "string"
        },
        "NumeroSerie": {
          "type": "string"
        },
        "SubSerie": {
          "type": "integer",
          "format": "int32"
        },
        "NumeroDocumento": {
          "type": "integer",
          "format": "int32"
        },
        "ChaveNFE": {
          "type": "string"
        },
        "TipoCte": {
          "type": "integer",
          "format": "int32"
        },
        "DataEmissaoNotaFiscal": {
          "type": "string",
          "format": "date-time"
        },
        "DataESNotaFiscal": {
          "type": "string",
          "format": "date-time"
        },
        "ValorDocFiscal": {
          "type": "number",
          "format": "double"
        },
        "DescontoZonaFranca": {
          "type": "number",
          "format": "double"
        },
        "DescontoLivreComercio": {
          "type": "number",
          "format": "double"
        },
        "ValorMercadorias": {
          "type": "number",
          "format": "double"
        },
        "TipoFrete": {
          "type": "string"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double"
        },
        "ValorDespesas": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSRed": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double"
        },
        "ValorPISSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorCOFINSSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorServicos": {
          "type": "number",
          "format": "double"
        },
        "ValorIRFonte": {
          "type": "number",
          "format": "double"
        },
        "ValorPrevidencia": {
          "type": "number",
          "format": "double"
        },
        "PlacaVeiculo": {
          "type": "string"
        },
        "VolumeTransportado": {
          "type": "number",
          "format": "double"
        },
        "PesoBrutoVolume": {
          "type": "number",
          "format": "double"
        },
        "PesoLiquidoVolume": {
          "type": "number",
          "format": "double"
        },
        "TipoConsumo": {
          "type": "string"
        },
        "ClasseConsumo": {
          "type": "integer",
          "format": "int32"
        },
        "Status": {
          "type": "string"
        },
        "ChaveCTE": {
          "type": "string"
        },
        "ChaveCTEref": {
          "type": "string"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double"
        },
        "ValorISSQN": {
          "type": "number",
          "format": "double"
        },
        "InscEstadualSubst": {
          "type": "string"
        },
        "ViaTransporte": {
          "type": "string"
        },
        "EspecieVolume": {
          "type": "string"
        },
        "ModalidadeFrete": {
          "type": "string"
        },
        "TipoFatura": {
          "type": "string"
        },
        "AliquotaIRFonte": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseIRFonte": {
          "type": "number",
          "format": "double"
        },
        "TipoPagamento": {
          "type": "string"
        },
        "TipoLigacao": {
          "type": "integer",
          "format": "int32"
        },
        "IDGrupoTensao": {
          "type": "integer",
          "format": "int32"
        },
        "AtivoFixoIndDoc": {
          "type": "string"
        },
        "DataExecucaoServico": {
          "type": "string",
          "format": "date-time"
        },
        "LocalExecucaoServico": {
          "type": "string"
        },
        "LocalRecolhimentoISS": {
          "type": "integer",
          "format": "int32"
        },
        "ProtocoloAutorizacaoNFe": {
          "type": "string"
        },
        "MotivoStatusNFe": {
          "type": "string"
        },
        "DataStatusNFe": {
          "type": "string",
          "format": "date-time"
        },
        "SituacaoNota": {
          "type": "string"
        },
        "cUF": {
          "type": "string"
        },
        "CodigoObra": {
          "type": "string"
        },
        "ModeloNFServico": {
          "type": "string"
        },
        "MunicipioExecucaoServico": {
          "type": "integer",
          "format": "int32"
        },
        "DataCancelamento": {
          "type": "string",
          "format": "date-time"
        },
        "MotivoCancelamento": {
          "type": "string"
        },
        "CodigoObraFilial": {
          "type": "string"
        },
        "CodigoCEI": {
          "type": "string"
        },
        "LocalRecolhimentoISSMunicipio": {
          "$ref": "#/definitions/Municipio"
        },
        "MunicipioExecucaoServicoMunicipio": {
          "$ref": "#/definitions/Municipio"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalItemXML"
          }
        }
      }
    },
    "EncerramentoPeriodo": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "Periodo": {
          "type": "string"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        }
      }
    },
    "EntidadeReferencial": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Inscricao",
        "InstituicaoResponsavelCadastro"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Inscricao": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição na entidade Referencial"
        },
        "InstituicaoResponsavelCadastro": {
          "$ref": "#/definitions/InstituicaoResponsavelCadastro"
        }
      }
    },
    "EntidadeResponsavel": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "EquipamentoECF": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "CodigoEquipamento",
        "Modelo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoEquipamento": {
          "type": "string",
          "maxLength": 10,
          "description": "Identificação Equipamento ECF"
        },
        "Modelo": {
          "type": "string",
          "maxLength": 20,
          "description": "Modelo do Equipamento"
        },
        "NumeroSerie": {
          "type": "string",
          "maxLength": 20,
          "description": "Número de série de fabricação do ECF"
        },
        "ModeloFiscal": {
          "type": "string",
          "maxLength": 2,
          "description": "Código Modelo do documento fiscal"
        }
      }
    },
    "EstabelecimentoAberturaPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "DataInicialPeriodo",
        "ValorTotal",
        "CodigoSituacaoPIS",
        "CodigoSituacaoCOFINS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicialPeriodo": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial do Período de Apuração"
        },
        "ValorTotal": {
          "type": "number",
          "format": "double",
          "description": "Valor Total do Estoque de Abertura - [15 inteiros e 2 decimais]"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double",
          "description": "Valor da Parcela do Estoque de abertura referente a bens, produtos e mercadorias importados, ou adquiridas no mercado interno sem direito ao crédito - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do PIS (Percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do COFINS (Percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor do COFINS - [15 inteiros e 2 decimais]"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "DescricaoEstoque": {
          "type": "string",
          "maxLength": 2000,
          "description": "Descrição do Estoque"
        }
      }
    },
    "EstabelecimentoFiscal": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "Razao",
        "CNPJ",
        "Pais",
        "NomeFantasia",
        "CEP",
        "Endereco",
        "Numero",
        "Bairro",
        "TipoAtividade"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 15,
          "description": "Código do Estabelecimento Fiscal"
        },
        "Razao": {
          "type": "string",
          "maxLength": 60,
          "description": "Nome Empresarial do Estabeleciemento Fiscal (Razão Social)"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "Número de inscrição do Estabelecimento Fiscal no CNPJ"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "InscricaoEstadual": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual do Estabelecimento Fiscal"
        },
        "InscricaoMunicipal": {
          "type": "string",
          "maxLength": 25,
          "description": "Inscrição Municipal do Estabelecimento Fiscal"
        },
        "InscricaoSuframa": {
          "type": "string",
          "maxLength": 9,
          "description": "Inscrição do Estabelecimento Fiscal na SUFRAMA"
        },
        "NomeFantasia": {
          "type": "string",
          "maxLength": 60,
          "description": "Nome Fantasia associado ao Estabelecimento Fiscal"
        },
        "CEP": {
          "type": "integer",
          "format": "int32",
          "description": "Código Endereçamento Postal"
        },
        "Endereco": {
          "type": "string",
          "maxLength": 60,
          "description": "Logradouro e endereço do imóvel"
        },
        "Numero": {
          "type": "string",
          "maxLength": 15,
          "description": "Número do imóvel"
        },
        "Complemento": {
          "type": "string",
          "maxLength": 60,
          "description": "Dados Complementares do Endereço"
        },
        "Bairro": {
          "type": "string",
          "maxLength": 60,
          "description": "Bairro em que o imóvel está situado"
        },
        "Telefone": {
          "type": "string",
          "maxLength": 10,
          "description": "Número Telefone"
        },
        "Fax": {
          "type": "string",
          "maxLength": 10,
          "description": "Número FAX"
        },
        "Email": {
          "type": "string",
          "maxLength": 50,
          "description": "Endereço correio eletrônico"
        },
        "Perfil": {
          "type": "string",
          "maxLength": 1,
          "description": "Perfil de apresentação do arquivo fiscal"
        },
        "TipoAtividade": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador Tipo de Atividade"
        },
        "Responsavel": {
          "type": "string",
          "maxLength": 50,
          "description": "Nome do Responsável"
        },
        "NIRE": {
          "type": "string",
          "maxLength": 11,
          "description": "NIRE - Número de Identificação do Registro de Empresas da matriz ou da filial na Junta Comercial"
        },
        "Marca": {
          "type": "string",
          "maxLength": 14,
          "description": "Marca"
        },
        "MarcaExportacao": {
          "type": "string",
          "maxLength": 50,
          "description": "Marca Exportação"
        },
        "AliquotaFrete": {
          "type": "number",
          "format": "double",
          "description": "Alíquota Frete - [3 inteiros e 3 decimais]"
        },
        "DataArqAtoConstitutivo": {
          "type": "string",
          "format": "date-time",
          "description": "Data do arquivamento dos atos constitutivos."
        },
        "DataArqAtoConversao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de arquivamento do ato de conversão de sociedade simples em sociedade empresária."
        },
        "CEI": {
          "type": "string",
          "maxLength": 12,
          "description": "Número de Inscrição no Cadastro Específico do INSS"
        },
        "NIT": {
          "type": "string",
          "maxLength": 11,
          "description": "Número de Inscrição no cadastro correspondente (PIS/PASEP/CI/SUS)"
        },
        "INDCENTR": {
          "type": "string",
          "maxLength": 10,
          "description": "Indicador de centralização de escrituração"
        },
        "TipoAssinante": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo do assinante"
        },
        "CodigoNaturezaJuridica": {
          "type": "integer",
          "format": "int32",
          "description": "Código de Natureza Jurídica"
        },
        "CodigoCNAE": {
          "type": "integer",
          "format": "int32",
          "description": "Código de CNAE"
        },
        "CodigoTipoEstab": {
          "type": "integer",
          "format": "int32",
          "description": "Código Tipo Estabelecimento"
        },
        "IndApuracaoContribCred": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da apuração das contribuições e créditos, na escrituração das operações por NF-e e ECF"
        },
        "IndMatrizFilial": {
          "type": "string",
          "maxLength": 1,
          "description": "Matriz ou Filial"
        },
        "IndIncidenciaTributaria": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Incidência Tributária"
        },
        "IndMetodoApropCredito": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do Método de Apropriação de Crédito"
        },
        "IndTipoContribApurada": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Tipo Contribuição Apurada"
        },
        "IndReg1200": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1200"
        },
        "IndReg1300": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1300"
        },
        "IndReg1390": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1390"
        },
        "IndReg1400": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1400"
        },
        "IndReg1500": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1500"
        },
        "IndReg1600": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1600"
        },
        "IndReg1700": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1700"
        },
        "IndReg1800": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Registro 1800"
        },
        "IndRegCum": {
          "type": "string",
          "maxLength": 1
        },
        "CodIncTrib": {
          "type": "string",
          "maxLength": 1
        },
        "CertificadoDigital": {
          "type": "string",
          "maxLength": 255,
          "description": "Certificado Digital"
        },
        "IndOperacaoRealizada": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador de Operação Realizada"
        },
        "InscricoesEstaduais": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InscricaoEstadualEstabelecimentoFiscal"
          }
        },
        "Signatarios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignatarioEstabelecimentoFiscal"
          }
        },
        "ParametrizacoesDacon": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstabelecimentoFiscalDACON"
          }
        },
        "ParametrizacoesDctf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstabelecimentoFiscalDCTF"
          }
        },
        "ParametrizacoesDipj": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstabelecimentoFiscalDIPJ"
          }
        },
        "ContasBancarias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstabelecimentoFiscalBanco"
          }
        }
      }
    },
    "EstabelecimentoFiscalBanco": {
      "type": "object",
      "properties": {
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "NumeroBanco": {
          "type": "string"
        },
        "NomeBanco": {
          "type": "string"
        },
        "NumeroAgencia": {
          "type": "string"
        },
        "DigitoAgencia": {
          "type": "string"
        },
        "NumeroConta": {
          "type": "string"
        },
        "DigitoConta": {
          "type": "string"
        },
        "NumeroContrato": {
          "type": "string"
        }
      }
    },
    "EstabelecimentoFiscalDACON": {
      "type": "object",
      "required": [
        "EstabFiscal"
      ],
      "properties": {
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "AnoMesCompetencia": {
          "type": "string",
          "maxLength": 6,
          "description": "Ano e mês da Competência"
        },
        "InicioPeriodo": {
          "type": "string",
          "format": "date-time",
          "description": "Data Início do Período"
        },
        "FinalPeriodo": {
          "type": "string",
          "format": "date-time",
          "description": "Data Fim do Período"
        },
        "TipoDemonstrativo": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo do Demonstrativo"
        },
        "SituacaoEspecial": {
          "type": "integer",
          "format": "int32",
          "description": "Situação Especial"
        },
        "DataEvento": {
          "type": "string",
          "maxLength": 8,
          "description": "Data do Evento"
        },
        "Desenquadramento": {
          "type": "integer",
          "format": "int32",
          "description": "Desenquadramento"
        },
        "DataDesenquadramento": {
          "type": "string",
          "maxLength": 8,
          "description": "Data do Desenquadramento"
        },
        "QualificacaoPJ": {
          "type": "integer",
          "format": "int32",
          "description": "Qualificação do PJ"
        },
        "TipoEntidade": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo da Entidade"
        },
        "InclusaoSimples": {
          "type": "integer",
          "format": "int32",
          "description": "Inclusão Simples"
        },
        "DataInclusaoSimples": {
          "type": "string",
          "maxLength": 8,
          "description": "Data da Inclusão Simples"
        }
      }
    },
    "EstabelecimentoFiscalDCTF": {
      "type": "object",
      "properties": {
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "MesOcorrenciaFatoGerador": {
          "type": "integer",
          "format": "int32"
        },
        "DataEvento": {
          "type": "string"
        },
        "AnoCompetencia": {
          "type": "integer",
          "format": "int32"
        },
        "MesCompetencia": {
          "type": "integer",
          "format": "int32"
        },
        "Versao": {
          "type": "integer",
          "format": "int32"
        },
        "InicioPeriodo": {
          "type": "string",
          "format": "date-time"
        },
        "FinalPeriodo": {
          "type": "string",
          "format": "date-time"
        },
        "Situacao": {
          "type": "integer",
          "format": "int32"
        },
        "DeclaracaoRetificadora": {
          "type": "integer",
          "format": "int32"
        },
        "NumeroEntregaDCTF": {
          "type": "number",
          "format": "double"
        },
        "FormaTributacaoLucro": {
          "type": "integer",
          "format": "int32"
        },
        "QualificacaoPJ": {
          "type": "integer",
          "format": "int32"
        },
        "PJLeventaouBalancoSuspensaoMes": {
          "type": "integer",
          "format": "int32"
        },
        "PFDebitosSCPADeclarar": {
          "type": "integer",
          "format": "int32"
        },
        "PJOptanteRegimeEspecialTributacao": {
          "type": "integer",
          "format": "int32"
        },
        "PJIncorporacaoRegimeEspecialTributario": {
          "type": "integer",
          "format": "int32"
        },
        "PJObrigadaApresentacaoDCTFAnoAnterior": {
          "type": "integer",
          "format": "int32"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "PJInativaAnoCalendario": {
          "type": "string"
        },
        "VariacoesMonetariasTaxaCambio": {
          "type": "string"
        },
        "AusenciaDebitoJan": {
          "type": "string"
        },
        "AusenciaDebitoFev": {
          "type": "string"
        },
        "AusenciaDebitoMar": {
          "type": "string"
        },
        "AusenciaDebitoAbr": {
          "type": "string"
        },
        "AusenciaDebitoMai": {
          "type": "string"
        },
        "AusenciaDebitoJun": {
          "type": "string"
        },
        "AusenciaDebitoJul": {
          "type": "string"
        },
        "AusenciaDebitoAgo": {
          "type": "string"
        },
        "AusenciaDebitoSet": {
          "type": "string"
        },
        "AusenciaDebitoOut": {
          "type": "string"
        },
        "AusenciaDebitoNov": {
          "type": "string"
        },
        "AusenciaDebitoDez": {
          "type": "string"
        },
        "PJInicioMesDeclaracao": {
          "type": "string"
        },
        "CNPJIncorporacao": {
          "type": "string"
        }
      }
    },
    "EstabelecimentoFiscalDIPJ": {
      "type": "object",
      "required": [
        "EstabelecimentoFiscal"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "AnoDeclaracao": {
          "type": "integer",
          "format": "int32",
          "description": "Ano da declaração"
        },
        "SituacaoEspecial": {
          "type": "integer",
          "format": "int32",
          "description": "Situação Especial"
        },
        "DataEvento": {
          "type": "string",
          "maxLength": 4,
          "description": "Data do Evento"
        },
        "InicioPeriodo": {
          "type": "string",
          "maxLength": 4,
          "description": "Data de início do período"
        },
        "FinalPeriodo": {
          "type": "string",
          "maxLength": 4,
          "description": "Data de término do período"
        },
        "OptanteREFIS": {
          "type": "integer",
          "format": "int32",
          "description": "Optante REFIS"
        },
        "OptantePAES": {
          "type": "integer",
          "format": "int32",
          "description": "Optante PAES"
        },
        "FormaTributacao": {
          "type": "integer",
          "format": "int32",
          "description": "Forma Tributação"
        },
        "QualificacaoPJ": {
          "type": "integer",
          "format": "int32",
          "description": "Qualificação PJ"
        },
        "ApuracaoIRPJCSLL": {
          "type": "integer",
          "format": "int32",
          "description": "Apuração IRPJCSLL"
        },
        "TrimestreLucroArbitrado": {
          "type": "integer",
          "format": "int32",
          "description": "Trimestre de Lucro Arbitrado"
        },
        "ApuracaoIRPJCSLLTrimestre": {
          "type": "integer",
          "format": "int32",
          "description": "Apuração IRPJCSLL do Trimestre"
        },
        "ApuracaoIPIPeriodo": {
          "type": "integer",
          "format": "int32",
          "description": "Apuração IPI do Período"
        },
        "AdministracaoFundosClubes": {
          "type": "integer",
          "format": "int32",
          "description": "Administração dos Fundos de Clubes"
        },
        "AtivosExterior": {
          "type": "integer",
          "format": "int32",
          "description": "Ativos do Exterior"
        },
        "ComercioEletronicoTecnologiaInformacao": {
          "type": "integer",
          "format": "int32",
          "description": "Comércio Eletrônico de TI"
        },
        "RoyaltiesRecebidos": {
          "type": "integer",
          "format": "int32",
          "description": "Royalties Recebidos"
        },
        "RoyaltiesPagos": {
          "type": "integer",
          "format": "int32",
          "description": "Royalties Pagos"
        },
        "RendimentosServicosJuros": {
          "type": "integer",
          "format": "int32",
          "description": "Rendimentos dos Serviços Juros"
        },
        "PagamentoRemessaServicosJuros": {
          "type": "integer",
          "format": "int32",
          "description": "Pagamento da Remessa de Serviço Juros"
        },
        "InovacaoTecnologicaDesenvolvimentoTecnologico": {
          "type": "integer",
          "format": "int32",
          "description": "Inovação Tecnologica DT"
        },
        "CapacitacaoInformaticaInclusaoDigital": {
          "type": "integer",
          "format": "int32",
          "description": "Capacitação Informática ID"
        },
        "PJHabilitadaRepesRecapPadis": {
          "type": "integer",
          "format": "int32",
          "description": "PJ Habilitada REPESRECAPPADIS"
        },
        "PoloIndustrialManaus": {
          "type": "integer",
          "format": "int32",
          "description": "Polo Industrial de Manaus"
        },
        "OperacoesExterior": {
          "type": "integer",
          "format": "int32",
          "description": "Operações do Exterior"
        },
        "ParticipacoesExterior": {
          "type": "integer",
          "format": "int32",
          "description": "Participações do Exterior"
        },
        "DoacoesCampanhasEleitorais": {
          "type": "integer",
          "format": "int32",
          "description": "Doações de Campanhas Eleitorais"
        },
        "LucroExportacao": {
          "type": "integer",
          "format": "int32",
          "description": "Lucro da Exportação"
        },
        "IsencaoReducaoImposto": {
          "type": "integer",
          "format": "int32",
          "description": "Isenção de Redução de Imposto"
        },
        "AtividadeRural": {
          "type": "integer",
          "format": "int32",
          "description": "Atividade Rual"
        },
        "FinorFinamFunres": {
          "type": "integer",
          "format": "int32",
          "description": "FINORFINAMFUNRES"
        },
        "PJComercialExportadora": {
          "type": "integer",
          "format": "int32",
          "description": "PJ Comercial da Exportadora"
        },
        "PJEfetuouVendasParaExportacao": {
          "type": "integer",
          "format": "int32",
          "description": "PJ cujo efetuou vendas para exportação"
        },
        "TipoEntidade": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo Entidade"
        },
        "DataDesenquadramentoSimples": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Desenquadramento Simples"
        },
        "ValorTotalReceitaVendas": {
          "type": "number",
          "format": "double",
          "description": "Valor Total da Receita de Vendas - [0 inteiros e 14 decimais]"
        },
        "PJSujeitaAliquotaCSLL15P": {
          "type": "integer",
          "format": "int32",
          "description": "PJ sujeita a alíquota do CSLL15P"
        },
        "OptanteRTT": {
          "type": "integer",
          "format": "int32",
          "description": "Optante RTT"
        },
        "TipoLogradouro": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo do Logradouro"
        },
        "TipoEstabelecimento": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo do Estabelecimento"
        },
        "RegimeEspecialSubstituicaoTributaria": {
          "type": "integer",
          "format": "int32",
          "description": "Regime Especial ST"
        },
        "EscrituracaoProcessoEletronico": {
          "type": "integer",
          "format": "int32",
          "description": "Escrituração do Processo Eletrônico"
        },
        "IndicadorTransferenciaPrevista": {
          "type": "string",
          "maxLength": 1,
          "description": "Opção pela Aplicação das Regras de Preços de Transferência Prevista no Artigo 52 da Lei nr.12.715/2012"
        },
        "ParticipacaoConsorcioEmpresa": {
          "type": "string",
          "maxLength": 1,
          "description": "Participações em Consórcios de Empresas"
        },
        "RendimentoRecebidoExteriorNaoResidentes": {
          "type": "string",
          "maxLength": 1,
          "description": "Rendimentos Recebidos do Exterior ou de Não Residentes"
        },
        "PagamentosExteriorNaoResidentes": {
          "type": "string",
          "maxLength": 1,
          "description": "Pagamentos ao Exterior ou a Não Residentes"
        },
        "ZonasProcessamentoExportacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Zonas de Processamento de Exportação"
        },
        "AreasLivreComercio": {
          "type": "string",
          "maxLength": 1,
          "description": "Áreas de Livre Comércio"
        },
        "FormaEscrituracao": {
          "type": "string",
          "maxLength": 1,
          "description": "Forma de Escrituração"
        }
      }
    },
    "EstabelecimentoFiscalECF": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "IndicadorInicioPeriodo": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador de Inicio de Periodo"
        },
        "IndicadorSituacaoEspecial": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Situação Especial"
        },
        "PatrimonioRemanescenteCisao": {
          "type": "number",
          "format": "double",
          "description": "Patrimônio Remanescente Cisão (%) - [3 inteiros e 2 decimais]"
        },
        "DataSituacaoEspecial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Situação Especial/Evento"
        },
        "OptanteRefis": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Optante Refis"
        },
        "OptantePaes": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador Optante Paes"
        },
        "FormaTributacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Forma Tributação Período"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 1,
          "description": "Periodo Tributação"
        },
        "QualificacaoPJ": {
          "type": "integer",
          "format": "int32",
          "description": "Qualificação Pessoa Jurídica"
        },
        "FormaTributacaoTrimestre1": {
          "type": "string",
          "maxLength": 1,
          "description": "1º Trimestre"
        },
        "FormaTributacaoTrimestre2": {
          "type": "string",
          "maxLength": 1,
          "description": "2º Trimestre"
        },
        "FormaTributacaoTrimestre3": {
          "type": "string",
          "maxLength": 1,
          "description": "3º Trimestre"
        },
        "FormaTributacaoTrimestre4": {
          "type": "string",
          "maxLength": 1,
          "description": "4º Trimestre"
        },
        "IndicadorApuracaoEstimativaJan": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal -Janeiro"
        },
        "IndicadorApuracaoEstimativaFev": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Fevereiro"
        },
        "IndicadorApuracaoEstimativaMar": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal -Março"
        },
        "IndicadorApuracaoEstimativaAbr": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Abril"
        },
        "IndicadorApuracaoEstimativaMai": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Maio"
        },
        "IndicadorApuracaoEstimativaJun": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Junho"
        },
        "IndicadorApuracaoEstimativaJul": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Julho"
        },
        "IndicadorApuracaoEstimativaAgo": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Agosto"
        },
        "IndicadorApuracaoEstimativaSet": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Setembro"
        },
        "IndicadorApuracaoEstimativaOut": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal -Outubro"
        },
        "IndicadorApuracaoEstimativaNov": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal -Novembro"
        },
        "IndicadorApuracaoEstimativaDez": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicação Forma Apuração Estimativa Mensal - Dezembro"
        },
        "TipoEscrituracao": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo Escrituração"
        },
        "TipoECF": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo ECF"
        },
        "CodigoSCP": {
          "type": "string",
          "maxLength": 14,
          "description": "Codigo SCP"
        },
        "TipoEntidade": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo PJ Imune ou Isenta"
        },
        "ExistenciaAtividadeTributada": {
          "type": "string",
          "maxLength": 1,
          "description": "Existência Atividade Tributada"
        },
        "ApuracaoCSLL": {
          "type": "string",
          "maxLength": 1,
          "description": "Apuração CSLL"
        },
        "PJSujeitaAliquotaCSLL15": {
          "type": "string",
          "maxLength": 1,
          "description": "PJ Sujeita Alíquota CSLL"
        },
        "QuantidadeSCP": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade SCP PJ"
        },
        "AdministracaoFundosClubes": {
          "type": "string",
          "maxLength": 1,
          "description": "Administradora Fundos e Clubes Investimento"
        },
        "ParticipacaoConsorcios": {
          "type": "string",
          "maxLength": 1,
          "description": "Participações Consórcios Empresas"
        },
        "OperacaoExterior": {
          "type": "string",
          "maxLength": 1,
          "description": "Operações Exterior"
        },
        "OperacaoVinculada": {
          "type": "string",
          "maxLength": 1,
          "description": "Oper. Pessoa Vinculada/Interposta Pessoa/País Tribut. Favorecida"
        },
        "PJEnquadrada": {
          "type": "string",
          "maxLength": 1,
          "description": "PJ Enquadrada Artigos 48 ou 49 IN RFB 1.312/2012"
        },
        "ParticipacaoExterior": {
          "type": "string",
          "maxLength": 1,
          "description": "Participação Exterior"
        },
        "AtividadeRural": {
          "type": "string",
          "maxLength": 1,
          "description": "Atividade Rural"
        },
        "LucroExploracao": {
          "type": "string",
          "maxLength": 1,
          "description": "Lucro Exploração"
        },
        "ReducaoIsencaoImposto": {
          "type": "string",
          "maxLength": 1,
          "description": "Isenção Redução Imposto Lucro Presumido"
        },
        "FINORFINAMFUNRESP": {
          "type": "string",
          "maxLength": 1,
          "description": "Existência FINOR/FINAM/FUNRESP"
        },
        "DoacaoEleitoral": {
          "type": "string",
          "maxLength": 1,
          "description": "Doação Eleitoral"
        },
        "ParticipacaoColigadas": {
          "type": "string",
          "maxLength": 1,
          "description": "Participacão Permanente Coligadas ou Controladas"
        },
        "PJVendasParaExportadora": {
          "type": "string",
          "maxLength": 1,
          "description": "PJ Efetuou Vendas Empresa Comercial Exportadora Fim Exportação"
        },
        "RendimentosExterior": {
          "type": "string",
          "maxLength": 1,
          "description": "Rendimentos Exterior ou Não Residentes"
        },
        "AtivosExterior": {
          "type": "string",
          "maxLength": 1,
          "description": "Ativos Exterior"
        },
        "PJComercialExportadora": {
          "type": "string",
          "maxLength": 1,
          "description": "PJ Comercial Exportadora"
        },
        "PagamentosExterior": {
          "type": "string",
          "maxLength": 1,
          "description": "Pagamentos Exterior ou Não Residentes"
        },
        "ComercioEletronicoTI": {
          "type": "string",
          "maxLength": 1,
          "description": "Comércio Eletrônico e TI"
        },
        "RoyaltiesRecebidos": {
          "type": "string",
          "maxLength": 1,
          "description": "Royalties Recebidos Brasil e Exterior"
        },
        "RoyaltiesPagos": {
          "type": "string",
          "maxLength": 1,
          "description": "Royalties Pagos Beneficiários Brasil e Exterior"
        },
        "RendimentosServico": {
          "type": "string",
          "maxLength": 1,
          "description": "Rendimentos Relativos Serviço, Juros e Dividendos Recebidos Brasil e Exterior"
        },
        "PagamentosRemessa": {
          "type": "string",
          "maxLength": 1,
          "description": "Pagamentos ou Remessa a Título Serviços, Juros e Dividendos Beneficiários Brasil e Exterior"
        },
        "InovacaoTecnologica": {
          "type": "string",
          "maxLength": 1,
          "description": "Inovacão Tecnológica e Desenvolvimento Tecnológico"
        },
        "CapacitacaoInfomatica": {
          "type": "string",
          "maxLength": 1,
          "description": "Capacitação Infomática e Inclusão Digital"
        },
        "PJHabilitadaRepesRecap": {
          "type": "string",
          "maxLength": 1,
          "description": "PJ Habilitada Repes Recap"
        },
        "PoloIndustrialManaus": {
          "type": "string",
          "maxLength": 1,
          "description": "Pólo Industrial Manaus e Amazônia Ocidental"
        },
        "ZonaExportacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Zona Processamento Exportação"
        },
        "AreaLivreComercio": {
          "type": "string",
          "maxLength": 1,
          "description": "Área Livre Comércio"
        },
        "Repes": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Tributação para a Plataforma de Exportação de Serviços de Tecnologia da Informação (Repes)"
        },
        "Recap": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Aquisição de Bens de Capital para Empresas Exportadoras (Recap)"
        },
        "Padis": {
          "type": "string",
          "maxLength": 1,
          "description": "Programa de Apoio ao Desenvolvimento Tecnológico da Indústria de Semicondutores (Padis)"
        },
        "Patvd": {
          "type": "string",
          "maxLength": 1,
          "description": "Programa de Apoio ao Desenvolvimento Tecnológico da Indústria de Equipamentos para TV Digital (Patvd)"
        },
        "Reidi": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Incentivos para o Desenvolvimento da Infraestrutura (Reidi)"
        },
        "Repenec": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Incentivos para o Desenvolvimento da Infraestrutura da Indústria Petrolífera das Regiões Norte, Nordeste e Centro-Oeste (Repenec)"
        },
        "Reicomp": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Incentivo a Computadores para Uso Educacional (Reicomp)"
        },
        "Retaero": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial para a Indústria Aeronáutica Brasileira (Retaero)"
        },
        "Recine": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Tributação para Desenvolvimento da Atividade de Exibição Cinematográfica (Recine)"
        },
        "ResiduosSolidos": {
          "type": "string",
          "maxLength": 1,
          "description": "Estabelecimentos industriais façam jus a crédito presumido do IPI na aquisição de resíduos sólidos, de que trata a Lei nº 12.375, de 30 de dezembro de 2010"
        },
        "Recopa": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Tributação para construção, ampliação, reforma ou modernização de estádios de futebol (Recopa)"
        },
        "CopaMundo": {
          "type": "string",
          "maxLength": 1,
          "description": "Habilitada para fins de fruição dos benefícios fiscais, não abrangidos na alínea anterior, relativos à realização, no Brasil, da Copa das Confederações FIFA 2013 e da Copa do Mundo FIFA 2014, de que trata a Lei nº 12.350, de 2010, regulamentada pelo Decre"
        },
        "Retid": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial Tributário para a Indústria de Defesa (Retid)"
        },
        "RepnblRedes": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Tributação do Programa Nacional de Banda Larga para Implantação de Redes de Telecomunicações (REPNBL-Redes)"
        },
        "Reif": {
          "type": "string",
          "maxLength": 1,
          "description": "Regime Especial de Incentivo ao Desenvolvimento da Infraestrutura da Indústria de Fertilizantes (REIF)"
        },
        "Olimpiadas": {
          "type": "string",
          "maxLength": 1,
          "description": "Habilitada para fins de fruição dos benefícios fiscais, relativos à realização, no Brasil, dos Jogos Olímpicos de 2016 e dos Jogos Paraolímpicos de 2016, de que trata a Lei nº 12.780, de 2013"
        }
      }
    },
    "Estado": {
      "type": "object",
      "properties": {
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "UF": {
          "type": "string"
        },
        "CodigoEstado": {
          "type": "integer",
          "format": "int32"
        },
        "Nome": {
          "type": "string"
        },
        "NumeroParcelasCIAP": {
          "type": "integer",
          "format": "int32"
        },
        "IndCIAP": {
          "type": "string"
        }
      }
    },
    "EventoIncorporacaoFusaoCisaoPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "IndicadorNaturezaEvento",
        "DataEvento",
        "CNPJSucedida",
        "PeriodoApuracaoCredito",
        "CodigoCreditoTransferido",
        "ValorPIS",
        "ValorCOFINS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "IndicadorNaturezaEvento": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador da Natureza do Evento de Sucessão"
        },
        "DataEvento": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Evento"
        },
        "CNPJSucedida": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da Pessoa Jurídica Sucedida"
        },
        "PeriodoApuracaoCredito": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Apuração do Crédito – Mês/Ano (MMAAAA)"
        },
        "CodigoCreditoTransferido": {
          "type": "string",
          "maxLength": 3,
          "description": "Código do crédito transferido"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor Crédito Transferido de PIS - [15 inteiros e 2 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor Crédito Transferido de COFINS - [15 inteiros e 2 decimais]"
        },
        "PercentualCredTransf": {
          "type": "number",
          "format": "double",
          "description": "Percentual do Crédito Original Transferido, no caso de envento de Cisão - [4 inteiros e 2 decimais]"
        }
      }
    },
    "ExportacaoDocumentoFiscal": {
      "type": "object",
      "required": [
        "InformacaoExportacao",
        "DocumentoFiscalCabecalho"
      ],
      "properties": {
        "InformacaoExportacao": {
          "$ref": "#/definitions/InformacaoExportacao"
        },
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "ExportacaoIndireta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportacaoIndireta"
          }
        }
      }
    },
    "ExportacaoIndireta": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "NumeroMemo",
        "QuantidadeExportacao",
        "UnidadeMedida"
      ],
      "properties": {
        "ExportacaoDocumentoFiscal": {
          "$ref": "#/definitions/ExportacaoDocumentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NumeroMemo": {
          "type": "string",
          "maxLength": 20,
          "description": "Número do Memorando de Exportação"
        },
        "QuantidadeExportacao": {
          "type": "number",
          "format": "double",
          "description": "Quantidade efetivamente exportada. - [14 inteiros e 3 decimais]"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        }
      }
    },
    "ExtraApuracao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoAjusteApuracao": {
          "$ref": "#/definitions/CodigoAjusteApuracao"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "SaldoPeriodoAnterior": {
          "type": "number",
          "format": "double"
        },
        "CreditoApropriadoMes": {
          "type": "number",
          "format": "double"
        },
        "CreditoTransferencia": {
          "type": "number",
          "format": "double"
        },
        "SaldoTransportar": {
          "type": "number",
          "format": "double"
        },
        "CreditoUtilizado": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditoUtilizado"
          }
        }
      }
    },
    "ExtracaoAgendamento": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ExtracaoConfiguracaoDLL": {
          "$ref": "#/definitions/ExtracaoConfiguracaoDLL"
        },
        "NomeAgendamento": {
          "type": "string"
        },
        "GrupoExtracao": {
          "type": "string"
        },
        "NomeExtracao": {
          "type": "string"
        },
        "TipoExtracao": {
          "type": "string",
          "enum": [
            "Imediata",
            "Diaria",
            "Quinzenal",
            "Mensal",
            "TresEmTresDias",
            "CincoEmCincoDias",
            "DezEmDezDias"
          ]
        },
        "DiaFixoExtracao": {
          "type": "string"
        },
        "HoraExtracao": {
          "type": "string"
        },
        "DataHoraUltimaExtracao": {
          "type": "string",
          "format": "date-time"
        },
        "PeriodoDe": {
          "type": "string",
          "format": "date-time"
        },
        "PeriodoAte": {
          "type": "string",
          "format": "date-time"
        },
        "NumeroDocumento": {
          "type": "string"
        }
      }
    },
    "ExtracaoConfiguracaoDLL": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Arquivo": {
          "type": "string",
          "format": "binary"
        },
        "NomeDLL": {
          "type": "string"
        },
        "CaminhoDLL": {
          "type": "string"
        },
        "CaminhoGeracaoDados": {
          "type": "string"
        },
        "StringConexaoERP": {
          "type": "string"
        }
      }
    },
    "ExtracaoDadosERP": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Grupo": {
          "type": "string"
        }
      }
    },
    "FCI": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoInterno": {
          "type": "string"
        },
        "DataEnvio": {
          "type": "string",
          "format": "date-time"
        },
        "DataRetorno": {
          "type": "string",
          "format": "date-time"
        },
        "Protocolo": {
          "type": "string"
        },
        "HashCode": {
          "type": "string"
        },
        "DataRecepcao": {
          "type": "string",
          "format": "date-time"
        },
        "CodigoRecepcao": {
          "type": "string"
        },
        "DataValidacao": {
          "type": "string",
          "format": "date-time"
        },
        "IndValidacao": {
          "type": "string"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FCIItem"
          }
        }
      }
    },
    "FCIItem": {
      "type": "object",
      "required": [
        "FCI",
        "Item",
        "UnidadeMedida",
        "ValorSaida",
        "ValorParcela",
        "CoefImportacao"
      ],
      "properties": {
        "FCI": {
          "$ref": "#/definitions/FCI"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedidaFCI"
        },
        "ValorSaida": {
          "type": "number",
          "format": "double",
          "description": "Valor de saída (comercialização) da mercadoria - [13 inteiros e 2 decimais]"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double",
          "description": "Valor da parcela importada do exterior - [13 inteiros e 2 decimais]"
        },
        "CoefImportacao": {
          "type": "number",
          "format": "double",
          "description": "Coeficiente (percentual) do conteúdo de importação informado pelo contribuinte - [4 inteiros e 2 decimais]"
        }
      }
    },
    "FCIItemAtual": {
      "type": "object",
      "properties": {
        "CodigoCia": {
          "type": "string"
        },
        "CodigoEstab": {
          "type": "string"
        },
        "CodigoItem": {
          "type": "string"
        },
        "CodigoInterno": {
          "type": "string"
        },
        "HashCode": {
          "type": "string"
        },
        "DataRecepcao": {
          "type": "string",
          "format": "date-time"
        },
        "CodigoRecepcao": {
          "type": "string"
        },
        "DataValidacao": {
          "type": "string",
          "format": "date-time"
        },
        "IndValidacaoFCI": {
          "type": "string"
        },
        "UMFCI": {
          "type": "string"
        },
        "ValorSaida": {
          "type": "number",
          "format": "double"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double"
        },
        "CoefImportacao": {
          "type": "number",
          "format": "double"
        },
        "CodigoFCI": {
          "type": "string"
        },
        "IndValidacao": {
          "type": "string"
        }
      }
    },
    "FechamentoPeriodo": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Ano": {
          "type": "string"
        },
        "Mes": {
          "type": "string"
        }
      }
    },
    "FolhaPagamento": {
      "type": "object",
      "required": [
        "Companhia",
        "Parceiro",
        "Provento"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "TipoFolha": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo de Folha"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DataCompetencia": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Competência"
        },
        "DataPagamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento"
        },
        "Provento": {
          "$ref": "#/definitions/Provento"
        },
        "ValorProvento": {
          "type": "number",
          "format": "double",
          "description": "Valor do Provento/Desconto - [15 inteiros e 2 decimais]"
        },
        "IndicadorProvento": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Provento ou Desconto"
        },
        "IndicadorIncidIRFonte": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Incidência para o IRRF"
        },
        "CodigoCBO": {
          "type": "string",
          "maxLength": 14,
          "description": "Código Brasileiro de Ocupação"
        },
        "CodigoOcorrencia": {
          "type": "string",
          "maxLength": 15,
          "description": "Código da Ocorrência conforme manual da GFIP"
        },
        "DescricaoCargo": {
          "type": "string",
          "maxLength": 10,
          "description": "Descrição do cargo do trabalhador"
        },
        "QtdeDepentendesSalarioFamilia": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de dependentes para fins de salário família"
        },
        "ValorPrevSocial": {
          "type": "integer",
          "format": "int32",
          "description": "Base de cálculo para a previdência social"
        },
        "IndicadorIncidIpPrevidenciaSocial": {
          "type": "string",
          "maxLength": 10,
          "description": "Indicador da base de cálculo para a Previdência Social"
        },
        "Lotacao": {
          "$ref": "#/definitions/Lotacao"
        }
      }
    },
    "FolhaSalariosPIS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "PeriodoApuracao",
        "ValorFolhaSalarios",
        "ValorExclusaoBasePIS",
        "ValorBasePIS",
        "AliquotaPIS",
        "ValorPIS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de apuração"
        },
        "ValorFolhaSalarios": {
          "type": "number",
          "format": "double",
          "description": "Valor da folha de salário - [17 inteiros e 2 decimais]"
        },
        "ValorExclusaoBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da exclusão da base de PIS - [17 inteiros e 2 decimais]"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Vale base do PIS - [17 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquita do PIS - [4 inteiros e 2 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [17 inteiros e 2 decimais]"
        }
      }
    },
    "FormularioCancelado": {
      "type": "object",
      "required": [
        "FormularioUtilizado",
        "NumeroDocumentoCanceladoInicial",
        "NumeroDocumentoCanceladoFinal"
      ],
      "properties": {
        "FormularioUtilizado": {
          "$ref": "#/definitions/FormularioUtilizado"
        },
        "NumeroDocumentoCanceladoInicial": {
          "type": "string",
          "maxLength": 12,
          "description": "Número Documento Fiscal Inicial Cancelado ou inutilizado"
        },
        "NumeroDocumentoCanceladoFinal": {
          "type": "string",
          "maxLength": 12,
          "description": "Número Documento Fiscal Final Cancelado ou inutilizado"
        }
      }
    },
    "FormularioUtilizado": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "DataInicio",
        "DataFim",
        "CodigoModelo",
        "Serie",
        "CodDispositivo",
        "NumAutorizacao",
        "NumDocumentoInicial",
        "NumDocumentoFinal"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicio do período"
        },
        "DataFim": {
          "type": "string",
          "format": "date-time",
          "description": "Data Fim do Período"
        },
        "CodigoModelo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo do documento fiscal"
        },
        "Serie": {
          "type": "string",
          "maxLength": 4,
          "description": "Serie Documento Fiscal"
        },
        "SubSerie": {
          "type": "string",
          "maxLength": 3,
          "description": "Sub Serie Documento Fiscal"
        },
        "CodDispositivo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código Dispositivo autorizado"
        },
        "NumAutorizacao": {
          "type": "string",
          "maxLength": 60,
          "description": "Número da autorização, conforme dispositivo autorizado"
        },
        "NumDocumentoInicial": {
          "type": "string",
          "maxLength": 12,
          "description": "Número Documento Fiscal inicial"
        },
        "NumDocumentoFinal": {
          "type": "string",
          "maxLength": 12,
          "description": "Número Documento Fiscal final"
        }
      }
    },
    "FornecedoresClientes": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "PlanoConta",
        "Parceiro",
        "DataOperacao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DataOperacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Operação"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição da Operação"
        },
        "ValorOperacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operação - [15 inteiros e 2 decimais]"
        },
        "TipoOperacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo da Operação"
        },
        "TipoDocumento": {
          "type": "string",
          "maxLength": 3,
          "description": "Tipo do Documento"
        },
        "NumeroDocumento": {
          "type": "string",
          "maxLength": 12,
          "description": "Numero do Documento"
        },
        "ValorOriginalTitulo": {
          "type": "number",
          "format": "double",
          "description": "Valor Original do Título - [15 inteiros e 2 decimais]"
        },
        "DataEmissaoDocumento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Emissão do Documento"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Vencimento"
        },
        "NumeroArquivamento": {
          "type": "string",
          "maxLength": 12,
          "description": "Número do Arquivamento"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 20,
          "description": "Tipo do Parceiro Fornecedor/Cliente"
        }
      }
    },
    "FundoClubeInvestimento": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataAbertura",
        "Patrimonio",
        "CNPJ",
        "Quotas",
        "Quotistas"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataAbertura": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Abertura"
        },
        "DataEncerramento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Encerramento"
        },
        "Patrimonio": {
          "type": "number",
          "format": "double",
          "description": "Patrimônio - Posição o final do período - [17 inteiros e 2 decimais]"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ"
        },
        "Quotas": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de Quotistas"
        },
        "Quotistas": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de Quotas"
        }
      }
    },
    "Genero": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "GNRE": {
      "type": "object",
      "required": [
        "EstabelecimentoFiscal",
        "InscricaoEstadual",
        "EstabelecimentoFiscalBanco",
        "DataReferencia",
        "DataVencimento",
        "DataPagamento",
        "NumeroAutenticacao",
        "ValorRecolhido"
      ],
      "properties": {
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "InscricaoEstadual": {
          "$ref": "#/definitions/InscricaoEstadual"
        },
        "EstabelecimentoFiscalBanco": {
          "$ref": "#/definitions/EstabelecimentoFiscalBanco"
        },
        "DataReferencia": {
          "type": "string",
          "format": "date-time",
          "description": "Valor das mercadorias constantes no documento fiscal associado ao CT"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time",
          "description": "Quantidade de volumes transportados"
        },
        "DataPagamento": {
          "type": "string",
          "format": "date-time",
          "description": "Peso bruto dos volumes transportados (em Kg)"
        },
        "NumeroAutenticacao": {
          "type": "string",
          "maxLength": 20,
          "description": "Número de Autenticação"
        },
        "ValorRecolhido": {
          "type": "number",
          "format": "double",
          "description": "Valor Recolhido - [13 inteiros e 2 decimais]"
        },
        "NumeroConvenio": {
          "type": "string",
          "maxLength": 30,
          "description": "Número do Convênio"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "GNREProduto": {
          "$ref": "#/definitions/GNREProduto"
        },
        "GNREDetalhamentoReceita": {
          "$ref": "#/definitions/GNREDetalhamentoReceita"
        },
        "GNREDocumentoFiscal": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GNREDocumentoFiscal"
          }
        }
      }
    },
    "GNREDetalhamentoReceita": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "GNREDocumentoFiscal": {
      "type": "object",
      "properties": {
        "GNRE": {
          "$ref": "#/definitions/GNRE"
        },
        "DocumentoFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        }
      }
    },
    "GNRELote": {
      "type": "object",
      "properties": {
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "GNRELoteGNRE": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GNRELoteGNRE"
          }
        }
      }
    },
    "GNRELoteGNRE": {
      "type": "object",
      "properties": {
        "GNRELote": {
          "$ref": "#/definitions/GNRELote"
        },
        "GNRE": {
          "$ref": "#/definitions/GNRE"
        }
      }
    },
    "GNREProduto": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "GrupoContabil": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataEfetividadeDe": {
          "type": "string",
          "format": "date-time"
        },
        "DataEfetividadeAte": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GrupoTensao": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "GrupoTributacao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "GrupoUsuario": {
      "type": "object",
      "properties": {
        "Descricao": {
          "type": "string"
        },
        "Usuarios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsuarioCadastro"
          }
        },
        "Permissoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RotaAcaoRota"
          }
        }
      }
    },
    "GuiaPrevidenciaSocial": {
      "type": "object",
      "required": [
        "NumeroIdentificacaoContribuinte",
        "CodigoPagamento",
        "AnoCompetencia",
        "MesCompetencia",
        "ValorINSS",
        "ValorOutrasEntidades",
        "ValorAtualizacaoMonetaria"
      ],
      "properties": {
        "LoteGuiaPrevidenciaSocial": {
          "$ref": "#/definitions/LoteGuiaPrevidenciaSocial"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "GuiasPrevidenciaSocialDocumentoFiscal": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuiaPrevidenciaSocialDocumentoFiscal"
          }
        },
        "NumeroIdentificacaoContribuinte": {
          "type": "string",
          "maxLength": 20,
          "description": "Número identificação contribuinte"
        },
        "CodigoPagamento": {
          "type": "string",
          "maxLength": 10,
          "description": "Código pagamento"
        },
        "AnoCompetencia": {
          "type": "string",
          "maxLength": 4,
          "description": "Ano competência"
        },
        "MesCompetencia": {
          "type": "string",
          "maxLength": 2,
          "description": "Mês competência"
        },
        "ValorINSS": {
          "type": "number",
          "format": "double",
          "description": "Valor INSS - [13 inteiros e 2 decimais]"
        },
        "ValorOutrasEntidades": {
          "type": "number",
          "format": "double",
          "description": "Valor outras entidades - [13 inteiros e 2 decimais]"
        },
        "ValorAtualizacaoMonetaria": {
          "type": "number",
          "format": "double",
          "description": "Valor atualização monetária - [13 inteiros e 2 decimais]"
        }
      }
    },
    "GuiaPrevidenciaSocialDocumentoFiscal": {
      "type": "object",
      "properties": {
        "GuiaPrevidenciaSocial": {
          "$ref": "#/definitions/GuiaPrevidenciaSocial"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DocumentoFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "CodigoParceiro": {
          "type": "string"
        },
        "TipoOperacao": {
          "type": "string"
        },
        "Modelo": {
          "type": "string"
        },
        "Serie": {
          "type": "string"
        },
        "NumeroDocumentoFiscal": {
          "type": "integer",
          "format": "int32"
        },
        "DataEmissao": {
          "type": "string",
          "format": "date-time"
        },
        "ValorINSS": {
          "type": "number",
          "format": "double"
        },
        "IndicadorExclusao": {
          "type": "string"
        },
        "UsuarioExclusao": {
          "type": "string"
        },
        "DataHoraExclusao": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HistoricoPadrao": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Codigo",
        "Descricao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 28,
          "description": "Código Histórico padronizado"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 600,
          "description": "Descrição Histórico padronizado"
        }
      }
    },
    "IdentPartExt": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "RazaoSocial",
        "IdentificacaoFiscal",
        "IndicadorControle"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da Investida no Brasil"
        },
        "RazaoSocial": {
          "type": "string",
          "maxLength": 255,
          "description": "Razão Social"
        },
        "IdentificacaoFiscal": {
          "type": "string",
          "maxLength": 50,
          "description": "Número Identificação Fiscal"
        },
        "IndicadorControle": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Controle"
        },
        "IndicadorProspeccaoPG": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Prospecção de Exploração de Petróleo e Gás"
        },
        "IndicadorConsolidacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Consolidação"
        },
        "MotivoNaoConsolidacao": {
          "type": "string",
          "maxLength": 1,
          "description": "Motivo da Não Consolidação"
        }
      }
    },
    "IdentPartExtConsolidacao": {
      "type": "object",
      "required": [
        "IdentPartExt"
      ],
      "properties": {
        "IdentPartExt": {
          "$ref": "#/definitions/IdentPartExt"
        },
        "ResultadoNegativoUtilizado": {
          "type": "number",
          "format": "double",
          "description": "Resultado Negativo Utilizado - [17 inteiros e 2 decimais]"
        },
        "ResultadoNegativoUtilizadoReal": {
          "type": "number",
          "format": "double",
          "description": "Resultado Negativo Utilizado - Reais - [17 inteiros e 2 decimais]"
        },
        "SaldoResultadoNegativoNaoUtilizado": {
          "type": "number",
          "format": "double",
          "description": "Saldo do Resultado Negativo Não Utilizado - [17 inteiros e 2 decimais]"
        },
        "SaldoResultadoNegativoNaoUtilizadoReal": {
          "type": "number",
          "format": "double",
          "description": "Saldo do Resultado Negativo Não Utilizado - Reais - [17 inteiros e 2 decimais]"
        }
      }
    },
    "IdentPartExtEstruturaSocietaria": {
      "type": "object",
      "required": [
        "IdentPartExt"
      ],
      "properties": {
        "IdentPartExt": {
          "$ref": "#/definitions/IdentPartExt"
        },
        "PercentualParticipacao": {
          "type": "number",
          "format": "double",
          "description": "Percentual de Participação - [17 inteiros e 2 decimais]"
        },
        "AtivoTotalReal": {
          "type": "number",
          "format": "double",
          "description": "Ativo Total - Reais - [17 inteiros e 2 decimais]"
        },
        "PatrimonioLiquidoReal": {
          "type": "number",
          "format": "double",
          "description": "Patrimônio Líquido - Reais - [17 inteiros e 2 decimais]"
        }
      }
    },
    "IdentPartExtImpostoPagoExterior": {
      "type": "object",
      "required": [
        "IdentPartExt"
      ],
      "properties": {
        "IdentPartExt": {
          "$ref": "#/definitions/IdentPartExt"
        },
        "ResultadoInvestida": {
          "type": "number",
          "format": "double",
          "description": "Resultado da Investida - [17 inteiros e 2 decimais]"
        },
        "ResultadoInvestidaReal": {
          "type": "number",
          "format": "double",
          "description": "Resultado da Investida - Reais - [17 inteiros e 2 decimais]"
        },
        "ResultadoInvestidaIPG": {
          "type": "number",
          "format": "double",
          "description": "Resultado da Investida - Isenção Petróleo e Gás - [17 inteiros e 2 decimais]"
        },
        "ResultadoInvestidaIPGReal": {
          "type": "number",
          "format": "double",
          "description": "Resultado da Investida - Isenção Petróleo e Gás - Reais - [17 inteiros e 2 decimais]"
        },
        "ResultadoNegativoAcumulado": {
          "type": "number",
          "format": "double",
          "description": "Resultado Negativo Acumulado - [17 inteiros e 2 decimais]"
        },
        "ResultadoPositivoTributar": {
          "type": "number",
          "format": "double",
          "description": "Resultado Positivo à Tributar - [17 inteiros e 2 decimais]"
        },
        "ResultadoPositivoTributarReal": {
          "type": "number",
          "format": "double",
          "description": "Resultado Positivo à Tributar - Reais - [17 inteiros e 2 decimais]"
        },
        "ImpostoDistribuido": {
          "type": "number",
          "format": "double",
          "description": "Imposto Lucro Distribuído - [17 inteiros e 2 decimais]"
        },
        "ImpostoDistribuidoReal": {
          "type": "number",
          "format": "double",
          "description": "Imposto Lucro Distribuído - Reais - [17 inteiros e 2 decimais]"
        },
        "ImpostoPago": {
          "type": "number",
          "format": "double",
          "description": "Imposto Pago - [17 inteiros e 2 decimais]"
        },
        "ImpostoPagoReal": {
          "type": "number",
          "format": "double",
          "description": "Imposto Pago - Reais - [17 inteiros e 2 decimais]"
        },
        "ImpostoRetidoExterior": {
          "type": "number",
          "format": "double",
          "description": "Imposto Retido Exterior - [17 inteiros e 2 decimais]"
        },
        "ImpostoRetidoExteriorReal": {
          "type": "number",
          "format": "double",
          "description": "Imposto Retido Exterior - Reais - [17 inteiros e 2 decimais]"
        },
        "ImpostoRetidoBrasil": {
          "type": "number",
          "format": "double",
          "description": "Imposto Retido no Brasil - [17 inteiros e 2 decimais]"
        }
      }
    },
    "IdentPartExtPeriodoApuracao": {
      "type": "object",
      "required": [
        "IdentPartExt"
      ],
      "properties": {
        "IdentPartExt": {
          "$ref": "#/definitions/IdentPartExt"
        },
        "ReceitaLiquida": {
          "type": "number",
          "format": "double",
          "description": "Receita Líquida - [17 inteiros e 2 decimais]"
        },
        "Custos": {
          "type": "number",
          "format": "double",
          "description": "Custos - [17 inteiros e 2 decimais]"
        },
        "LucroBruto": {
          "type": "number",
          "format": "double",
          "description": "Lucro Bruto - [17 inteiros e 2 decimais]"
        },
        "ReceitasFinanceiras": {
          "type": "number",
          "format": "double",
          "description": "Receitas Financeiras - [17 inteiros e 2 decimais]"
        },
        "OutrasReceitasOperacionais": {
          "type": "number",
          "format": "double",
          "description": "Outras Receitas Operacionais - [17 inteiros e 2 decimais]"
        },
        "DespesasFinanceiras": {
          "type": "number",
          "format": "double",
          "description": "Despesas Financeiras - [17 inteiros e 2 decimais]"
        },
        "DespesasOperacionais": {
          "type": "number",
          "format": "double",
          "description": "Despesas Operacionais - [17 inteiros e 2 decimais]"
        },
        "LucroOperacional": {
          "type": "number",
          "format": "double",
          "description": "Lucro Operacional - [17 inteiros e 2 decimais]"
        },
        "ReceitaParticipacao": {
          "type": "number",
          "format": "double",
          "description": "Receita de Participação - [17 inteiros e 2 decimais]"
        },
        "OutrasReceitas": {
          "type": "number",
          "format": "double",
          "description": "Outras Receitas - [17 inteiros e 2 decimais]"
        },
        "OutrasDespesas": {
          "type": "number",
          "format": "double",
          "description": "Outras Despesas - [17 inteiros e 2 decimais]"
        },
        "LucroLiquidoAIR": {
          "type": "number",
          "format": "double",
          "description": "Lucro Líquido Antes IR - [17 inteiros e 2 decimais]"
        },
        "ImpostoDevido": {
          "type": "number",
          "format": "double",
          "description": "Imposto Devido - [17 inteiros e 2 decimais]"
        },
        "LucroLiquidoPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Lucro Líquido do Período - [17 inteiros e 2 decimais]"
        }
      }
    },
    "IdentPartExtPrejuizoAcumulado": {
      "type": "object",
      "required": [
        "IdentPartExt"
      ],
      "properties": {
        "IdentPartExt": {
          "$ref": "#/definitions/IdentPartExt"
        },
        "ResultadoNegativoPeroodosAnteriores": {
          "type": "number",
          "format": "double",
          "description": "Resultado Negativo Períodos Anteriores - [17 inteiros e 2 decimais]"
        },
        "ResultadoNegativoPeriodosAnterioresReais": {
          "type": "number",
          "format": "double",
          "description": "Resultado Negativo Períodos Anteriores - Reais - [17 inteiros e 2 decimais]"
        },
        "SaldoResultadoNegativoAcumulado": {
          "type": "number",
          "format": "double",
          "description": "Saldo do Resultado Negativo Acumulado - [17 inteiros e 2 decimais]"
        }
      }
    },
    "IdentPartExtRegimeCaixa": {
      "type": "object",
      "required": [
        "IdentPartExt"
      ],
      "properties": {
        "IdentPartExt": {
          "$ref": "#/definitions/IdentPartExt"
        },
        "ResultadoPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Resultado do Período - Moeda Estrangeira - [17 inteiros e 2 decimais]"
        },
        "ResultadoPeriodoReal": {
          "type": "number",
          "format": "double",
          "description": "Resultado do Período - Reais - [17 inteiros e 2 decimais]"
        },
        "LucroPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Lucro Período - Moeda Estrangeira - [17 inteiros e 2 decimais]"
        },
        "LucroPeriodoReal": {
          "type": "number",
          "format": "double",
          "description": "Lucro Período - Reais - [17 inteiros e 2 decimais]"
        }
      }
    },
    "IdentPartExtRendaAtivaPassiva": {
      "type": "object",
      "required": [
        "IdentPartExt"
      ],
      "properties": {
        "IdentPartExt": {
          "$ref": "#/definitions/IdentPartExt"
        },
        "RendaPassivaPropria": {
          "type": "number",
          "format": "double",
          "description": "Renda Passiva Própria - [17 inteiros e 2 decimais]"
        },
        "RendaPassivaPropriaReal": {
          "type": "number",
          "format": "double",
          "description": "Renda Passiva Própria - Real - [17 inteiros e 2 decimais]"
        },
        "RendaTotal": {
          "type": "number",
          "format": "double",
          "description": "Renda Total - [17 inteiros e 2 decimais]"
        },
        "RendaTotalReal": {
          "type": "number",
          "format": "double",
          "description": "Renda Total - Real - [17 inteiros e 2 decimais]"
        },
        "RendaAtivaPropria": {
          "type": "number",
          "format": "double",
          "description": "Renda Ativa Própria - [17 inteiros e 2 decimais]"
        },
        "RendaAtivaPropriaReal": {
          "type": "number",
          "format": "double",
          "description": "Renda Ativa Própria - Real - [17 inteiros e 2 decimais]"
        },
        "Percentual": {
          "type": "number",
          "format": "double",
          "description": "Pecentual - [17 inteiros e 2 decimais]"
        }
      }
    },
    "Importacao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DiretorioOrigem": {
          "type": "string"
        },
        "DiretorioDestino": {
          "type": "string"
        }
      }
    },
    "Imposto": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "FlagRetencao": {
          "type": "boolean"
        }
      }
    },
    "ImpostoRetido": {
      "type": "object",
      "properties": {
        "Imposto": {
          "type": "string"
        },
        "GrupoTributoDCTF": {
          "type": "string"
        }
      }
    },
    "IndicadorSituacaoEspecial": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "IndustrializacaoInsumoConsumido": {
      "type": "object",
      "required": [
        "IndustrializacaoItemProduzido",
        "ItemInsumoConsumido",
        "DataConsumo",
        "QuantidadeConsumida"
      ],
      "properties": {
        "IndustrializacaoItemProduzido": {
          "$ref": "#/definitions/IndustrializacaoItemProduzido"
        },
        "ItemInsumoConsumido": {
          "$ref": "#/definitions/Item"
        },
        "DataConsumo": {
          "type": "string",
          "format": "date-time",
          "description": "Data do reconhecimento do consumo do insumo"
        },
        "QuantidadeConsumida": {
          "type": "number",
          "format": "double",
          "description": "Quantidade consumo do insumo - [14 inteiros e 3 decimais]"
        },
        "ItemInsumoSubstituido": {
          "$ref": "#/definitions/Item"
        }
      }
    },
    "IndustrializacaoItemProduzido": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Item",
        "DataProducao",
        "QuantidadeProduzida"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DataProducao": {
          "type": "string",
          "format": "date-time",
          "description": "Data do reconhecimento da produção ocorrida no terceiro"
        },
        "QuantidadeProduzida": {
          "type": "number",
          "format": "double",
          "description": "Quantidade produzida - [14 inteiros e 3 decimais]"
        },
        "InsumosConsumidos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndustrializacaoInsumoConsumido"
          }
        }
      }
    },
    "InfoPeriodosAnteriores": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataLucroLiquido",
        "LucroLiquido",
        "ReceitaBruta"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataLucroLiquido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Final do Período de Apuração do Lucro Líquido"
        },
        "LucroLiquido": {
          "type": "number",
          "format": "double",
          "description": "Lucro Líquido do Último Período de Apuração - [17 inteiros e 2 decimais]"
        },
        "ReceitaBruta": {
          "type": "number",
          "format": "double",
          "description": "Receita Bruta do Período Anterior - [17 inteiros e 2 decimais]"
        }
      }
    },
    "InfOptPAESImunesIsentas": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "ReceitaBruta",
        "Mes"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "ReceitaBruta": {
          "type": "number",
          "format": "double",
          "description": "Receita bruta no mês - [17 inteiros e 2 decimais]"
        },
        "Mes": {
          "type": "string",
          "maxLength": 2,
          "description": "Mês"
        }
      }
    },
    "InfOptREFISImunesIsentas": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "Mes"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "Acrescimo": {
          "type": "number",
          "format": "double",
          "description": "Acréscimo Patrimonial no Mês - [17 inteiros e 2 decimais]"
        },
        "Mes": {
          "type": "string",
          "maxLength": 2,
          "description": "Mês"
        }
      }
    },
    "InformacaoAdicionalDiferidaPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "CodigoImposto",
        "DataReferencia",
        "CNPJ",
        "ValorTotalVendas",
        "ValorTotalNaoRecebido",
        "ValorContribuicaoDiferida",
        "ValorCreditoDiferido"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 6,
          "description": "Código do Imposto"
        },
        "DataReferencia": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Referência para Apuração do Imposto"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da Pessoa Jurídica"
        },
        "ValorTotalVendas": {
          "type": "number",
          "format": "double",
          "description": "Valor Total das Vendas para o CNPJ no Período - [13 inteiros e 2 decimais]"
        },
        "ValorTotalNaoRecebido": {
          "type": "number",
          "format": "double",
          "description": "Valor Total Não Recebido no Período - [13 inteiros e 2 decimais]"
        },
        "ValorContribuicaoDiferida": {
          "type": "number",
          "format": "double",
          "description": "Valor Contribuição Diferida no Período - [13 inteiros e 2 decimais]"
        },
        "ValorCreditoDiferido": {
          "type": "number",
          "format": "double",
          "description": "Valor Crédito Diferido no Período - [13 inteiros e 2 decimais]"
        },
        "TipoCreditoPISCOFINS": {
          "$ref": "#/definitions/TipoCreditoPISCOFINS"
        },
        "CodigoContribuicao": {
          "$ref": "#/definitions/CodigoContribuicao"
        }
      }
    },
    "InformacaoComplementar": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "Descricao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 10,
          "description": "Código da informação complementar do documento fiscal"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Texto livre da informação complementar existente no documento fiscal, inclusive espécie de normas legais, poder normativo, número, capitulação, data e demais referências pertinentes com indicação referentes no tributo"
        },
        "Tipo": {
          "type": "string",
          "enum": [
            "ProcessoReferenciado",
            "DocArrecadacaoReferenciado",
            "DocFiscalReferenciado",
            "CupomFiscalReferenciado",
            "LocalColetaEntrega"
          ]
        }
      }
    },
    "InformacaoExportacao": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "NumeroDeclaracao",
        "TipoDocumento",
        "DataDeclaracao",
        "NaturezaExportacao",
        "DataAverbacao",
        "TipoConhecTransporte",
        "Pais",
        "ConhecimentoTransporte"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "NumeroDeclaracao": {
          "type": "string",
          "maxLength": 11,
          "description": "Número da Declaração"
        },
        "TipoDocumento": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo de Documento"
        },
        "DataDeclaracao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Declaração"
        },
        "NaturezaExportacao": {
          "type": "integer",
          "format": "int32",
          "description": "Natureza da Exporação"
        },
        "NumeroRegistro": {
          "type": "string",
          "maxLength": 12,
          "description": "Número do Registro de Exportação"
        },
        "DataRegistro": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Registro de Exportação"
        },
        "NumeroConhecEmbarque": {
          "type": "string",
          "maxLength": 16,
          "description": "No. do Conhecimento de Embarque"
        },
        "DataConhecEmbarque": {
          "type": "string",
          "format": "date-time",
          "description": "Data do conhecimento de embarque"
        },
        "DataAverbacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Averbação da Declaração de Exportação"
        },
        "TipoConhecTransporte": {
          "type": "integer",
          "format": "int32",
          "description": "Informação do Tipo de Conhecimento de Transporte"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "ExportacaoDocumentoFiscal": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportacaoDocumentoFiscal"
          }
        },
        "ConhecimentoTransporte": {
          "$ref": "#/definitions/ConhecimentoTransporte"
        }
      }
    },
    "InformacaoOptanteREFIS": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "InscricaoEstadual": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Estado",
        "IESubstituto"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "IESubstituto": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual de contribuinte substituto na unidade da federação"
        }
      }
    },
    "InscricaoEstadualEstabelecimentoFiscal": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Estado",
        "IESubstituto"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "IESubstituto": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual de contribuinte substituto na unidade da federação"
        }
      }
    },
    "InstituicaoResponsavelCadastro": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "InsumoConsumido": {
      "type": "object",
      "required": [
        "ItemProduzido",
        "ItemInsumo",
        "DataSaida",
        "QuantidadeConsumida"
      ],
      "properties": {
        "ItemProduzido": {
          "$ref": "#/definitions/ItemProduzido"
        },
        "ItemInsumo": {
          "$ref": "#/definitions/Item"
        },
        "DataSaida": {
          "type": "string",
          "format": "date-time",
          "description": "Data de saída do estoque para alocação do produto"
        },
        "QuantidadeConsumida": {
          "type": "number",
          "format": "double",
          "description": "Quantidade consumida - [11 inteiros e 6 decimais]"
        },
        "ItemSubstituido": {
          "$ref": "#/definitions/Item"
        }
      }
    },
    "InsumoRelacionado": {
      "type": "object",
      "required": [
        "Companhia",
        "Item",
        "UnidadeMedida",
        "ItemInsumo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "ItemInsumo": {
          "$ref": "#/definitions/Item"
        },
        "Quantidade": {
          "type": "number",
          "format": "double",
          "description": "Quantidade - [14 inteiros e 3 decimais]"
        },
        "PercentualPerda": {
          "type": "number",
          "format": "double",
          "description": "Percentual de perda normais decorrentes do processo produtivo - [3 inteiros e 2 decimais]"
        },
        "UnidadeMedidaInsumo": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Início de Vigência da Fórmula"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data final de Vigência da Fórmula"
        }
      }
    },
    "Inventario": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Data",
        "Item",
        "IndicadorPropriedade",
        "UnidadeMedida",
        "Quantidade"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Data": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "IndicadorPropriedade": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de posse / propriedade do item"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "Quantidade": {
          "type": "number",
          "format": "double",
          "description": "Quantidade do Item - [14 inteiros e 3 decimais]"
        },
        "ValorUnitario": {
          "type": "number",
          "format": "double",
          "description": "Valor unitário do Item - [11 inteiros e 6 decimais]"
        },
        "ValorItem": {
          "type": "number",
          "format": "double",
          "description": "Valor do Item - [15 inteiros e 2 decimais]"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 255,
          "description": "Observação utilizada para livro de inventário"
        },
        "CodigoContaContabil": {
          "type": "string",
          "maxLength": 50,
          "description": "Código da conta analítica debitada/creditada"
        },
        "InformacoesComplementares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventarioInformacaoComplementar"
          }
        }
      }
    },
    "InventarioInformacaoComplementar": {
      "type": "object",
      "required": [
        "Inventario",
        "CodigoSituacaoICMSTabA",
        "CodigoSituacaoICMSTabB"
      ],
      "properties": {
        "Inventario": {
          "$ref": "#/definitions/Inventario"
        },
        "CodigoSituacaoICMSTabA": {
          "type": "string",
          "maxLength": 1,
          "description": "Código Situação Tributária ICMS Tab A"
        },
        "CodigoSituacaoICMSTabB": {
          "type": "string",
          "maxLength": 2,
          "description": "Código Situação Tributária ICMS Tab B"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS - [8 inteiros e 2 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS - [8 inteiros e 2 decimais]"
        }
      }
    },
    "IrCsllRetidoFonte": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataRetencao": {
          "type": "string",
          "format": "date-time"
        },
        "CNPJFontePagadora": {
          "type": "string"
        },
        "CodigoReceita": {
          "type": "string"
        },
        "IndicadorOrgaoPublico": {
          "type": "string"
        },
        "NomeFontePagadora": {
          "type": "string"
        },
        "RendimentoBrutoReceita": {
          "type": "number",
          "format": "double"
        },
        "IRRetidoFonte": {
          "type": "number",
          "format": "double"
        },
        "CSLLRetidoFonte": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Item": {
      "type": "object",
      "required": [
        "Codigo",
        "Companhia",
        "Descricao",
        "UnidadeMedidaEstoque",
        "TipoItem"
      ],
      "properties": {
        "Codigo": {
          "type": "string",
          "maxLength": 60,
          "description": "Código do Item"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição do Item"
        },
        "UnidadeMedidaEstoque": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "CodigoBarra": {
          "type": "string",
          "maxLength": 50,
          "description": "Código de Barra do produto"
        },
        "CodigoClassificacaoFiscal": {
          "type": "string",
          "maxLength": 8,
          "description": "Código da Nomenclatura Comum do Mercosul (Validar com a TIPI)"
        },
        "CodigoExTipi": {
          "type": "string",
          "maxLength": 3,
          "description": "Código EX conforme TIPI (Validar com a TIPI)"
        },
        "CodigoTipoServico": {
          "type": "string",
          "maxLength": 4,
          "description": "Código do tipo do serviço"
        },
        "CodigoListaServico": {
          "type": "string",
          "maxLength": 4,
          "description": "Código do serviço conforme lista do anexo I da Lei Complementar Federal n. 116/03 (Validar Tabela referente ao anexo I)"
        },
        "CodigoAnteriorItem": {
          "type": "string",
          "maxLength": 60,
          "description": "Código anterior do item com relação à última informação apresentada"
        },
        "CodigoAnp": {
          "type": "string",
          "maxLength": 9,
          "description": "Código do combustível, conforme tabela publicada pela ANP"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de ICMS aplicável ao item nas operações internas - [3 inteiros e 2 decimais]"
        },
        "UnidadeMedidaEmbalagem": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "TipoItem": {
          "$ref": "#/definitions/TipoItem"
        },
        "OrigemItem": {
          "$ref": "#/definitions/OrigemItem"
        },
        "CEST": {
          "$ref": "#/definitions/CEST"
        },
        "ConversoesUnidadeMedida": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnidadeMedidaConversao"
          }
        },
        "GruposTributacao": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemGrupoTributacao"
          }
        },
        "ClassesImposto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemClasseImposto"
          }
        },
        "HistoricoAlteracoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemAlteracao"
          }
        }
      }
    },
    "ItemAlteracao": {
      "type": "object",
      "required": [
        "Companhia",
        "Item",
        "Descricao",
        "DataInicioItem",
        "DataFimItem"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição anterior do Item"
        },
        "DataInicioItem": {
          "type": "string",
          "format": "date-time",
          "description": "Data inicial de utilização da descrição do Item"
        },
        "DataFimItem": {
          "type": "string",
          "format": "date-time",
          "description": "Data final de utilização da descrição do Item"
        },
        "CodigoItem": {
          "type": "string",
          "maxLength": 60,
          "description": "Código antigo do item"
        }
      }
    },
    "ItemClasseImposto": {
      "type": "object",
      "properties": {
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "ClasseImposto": {
          "$ref": "#/definitions/ClasseImposto"
        }
      }
    },
    "ItemConsumo": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Item",
        "ItemInsumo",
        "QuantidadeItem",
        "Perda",
        "MesVigencia",
        "AnoVigencia"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "ItemInsumo": {
          "$ref": "#/definitions/Item"
        },
        "QuantidadeItem": {
          "type": "number",
          "format": "double",
          "description": "Quantidade do item componente/insumo para se produzir uma unidade do item composto/resultante - [11 inteiros e 6 decimais]"
        },
        "Perda": {
          "type": "number",
          "format": "double",
          "description": "Percentual perda/quebra do insumo para se produzir uma unidade do item composto/resultante - [3 inteiros e 4 decimais]"
        },
        "MesVigencia": {
          "type": "string",
          "maxLength": 2,
          "description": "Mês de vigência 01 a 12"
        },
        "AnoVigencia": {
          "type": "string",
          "maxLength": 4,
          "description": "Ano de vigência"
        }
      }
    },
    "ItemEstabelecimentoFiscal": {
      "type": "object",
      "required": [
        "Item",
        "EstabFiscal",
        "TipoItem"
      ],
      "properties": {
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "TipoItem": {
          "$ref": "#/definitions/TipoItem"
        }
      }
    },
    "ItemFornecedor": {
      "type": "object",
      "properties": {
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "CodigoItem": {
          "type": "string"
        }
      }
    },
    "ItemGrupoTributacao": {
      "type": "object",
      "properties": {
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "GrupoTributacao": {
          "$ref": "#/definitions/GrupoTributacao"
        }
      }
    },
    "ItemIndiceParticipacao": {
      "type": "object",
      "properties": {
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ItemProduzido": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Item",
        "OrdemProducao",
        "DataInicioOrdemProducao",
        "DataFimOrdemProducao",
        "QuantidadeProduzida"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "OrdemProducao": {
          "type": "string",
          "maxLength": 60,
          "description": "Código de Identificação da ordem de Produção"
        },
        "DataInicioOrdemProducao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de início da ordem de produção"
        },
        "DataFimOrdemProducao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de conclusão da ordem de produção"
        },
        "QuantidadeProduzida": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de produção acabada - [14 inteiros e 3 decimais]"
        },
        "InsumosConsumidos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsumoConsumido"
          }
        }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "Usuario": {
          "$ref": "#/definitions/Usuario"
        },
        "RequestDate": {
          "type": "string",
          "format": "date-time"
        },
        "StartDate": {
          "type": "string",
          "format": "date-time"
        },
        "FinishDate": {
          "type": "string",
          "format": "date-time"
        },
        "DataAgendamento": {
          "type": "string",
          "format": "date-time"
        },
        "Status": {
          "type": "integer",
          "format": "int32"
        },
        "TipoProcessamento": {
          "type": "string"
        },
        "JobType": {
          "type": "integer",
          "format": "int32"
        },
        "JobData": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "JobName": {
          "type": "string"
        },
        "MessageId": {
          "type": "string"
        }
      }
    },
    "JurisdicaoECF": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "LancamentoBaseCalculoLucroArbitradoIrpjCsll": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LancamentoCalculoLucroArbitradoIrpjCsll": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LancamentoContabil": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "CodigoLancamento",
        "DataLancamento",
        "TipoLancamento",
        "PlanoConta",
        "Valor",
        "Natureza"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CodigoLancamento": {
          "type": "string",
          "maxLength": 28,
          "description": "Número ou código de identificação única do lançamento contábil"
        },
        "DataLancamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Lançamento - Formato"
        },
        "TipoLancamento": {
          "type": "string",
          "maxLength": 3,
          "description": "Tipo de lançamento"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "Sequencia": {
          "type": "integer",
          "format": "int32",
          "description": "Sequência de criação da pertida do lançamento"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor da partida - [15 inteiros e 2 decimais]"
        },
        "Natureza": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da natureza da partida"
        },
        "CodigoArquivo": {
          "type": "string",
          "maxLength": 28,
          "description": "Número, código ou caminho de localização dos documentos arquivados."
        },
        "HistoricoPadrao": {
          "$ref": "#/definitions/HistoricoPadrao"
        },
        "CodigoAglutinacao": {
          "$ref": "#/definitions/CodigoAglutinacao"
        },
        "ParticipanteAcionario": {
          "$ref": "#/definitions/ParticipanteAcionario"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 500,
          "description": "Descrição complementar do Histórico padrão, caso tenha sido informado o campo anterior ou Histórico completo da partida"
        },
        "ValorAuxiliar": {
          "type": "number",
          "format": "double",
          "description": "Valor auxiliar - [17 inteiros e 2 decimais]"
        },
        "IndicadorDebitoCreditoAuxiliar": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Débito/Crédito Auxiliar. Valores válidos: D, C"
        }
      }
    },
    "LancamentoContabilParteBLALURLACS": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Tributo": {
          "type": "string"
        },
        "ContaParteBLALURLACS": {
          "$ref": "#/definitions/ContaParteBLALURLACS"
        },
        "ContaParteBLALURLACSContraParte": {
          "$ref": "#/definitions/ContaParteBLALURLACS"
        },
        "ValorLancamento": {
          "type": "number",
          "format": "double"
        },
        "IndicadorValorLancamento": {
          "type": "string"
        },
        "Historico": {
          "type": "string"
        },
        "IndicadorLancamentoAnterior": {
          "type": "string"
        }
      }
    },
    "LancamentoParteALalurLacs": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataInicioApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Registro": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "TipoLancamento": {
          "type": "string"
        },
        "ValorLancamento": {
          "type": "number",
          "format": "double"
        },
        "HistoricoLancamento": {
          "type": "string"
        },
        "RelacionamentoContaParteBLalurLacs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelacionamentoContaParteBLalurLacs"
          }
        },
        "RelacionamentoContaContabilLalurLacs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelacionamentoContaContabilLalurLacs"
          }
        }
      }
    },
    "ListaServico": {
      "type": "object",
      "properties": {
        "TipoServico": {
          "$ref": "#/definitions/TipoServico"
        },
        "CodigoLista": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "LivroContabil": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        },
        "Ordem": {
          "type": "string"
        },
        "Natureza": {
          "type": "string"
        },
        "LivroContabilPai": {
          "$ref": "#/definitions/LivroContabil"
        },
        "Cabecalho": {
          "type": "string"
        },
        "CodigoHash": {
          "type": "string"
        },
        "TipoEnvio": {
          "type": "string"
        },
        "IdDem": {
          "type": "string"
        },
        "IndicadorMoedaFuncional": {
          "type": "string"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        }
      }
    },
    "LivroRazaoParametrizavelCampo": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "NomeCampo",
        "DescricaoCampo",
        "TipoCampo",
        "TamanhoCampo",
        "LarguraColuna",
        "IndicadorCampoAgrupador",
        "IndicadorCampoTotalizador"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "NomeCampo": {
          "type": "string",
          "maxLength": 16,
          "description": "Nome campo para impressão Livro Razão Auxiliar Parametrizável"
        },
        "DescricaoCampo": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição campo para impressão Livro Razão Auxiliar Parametrizável"
        },
        "TipoCampo": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo campo para impressão Livro Razão Auxiliar Parametrizável"
        },
        "TamanhoCampo": {
          "type": "integer",
          "format": "int32",
          "description": "Tamanho campo para impressão Livro Razão Auxiliar Parametrizável"
        },
        "DecimaisCampo": {
          "type": "integer",
          "format": "int32",
          "description": "Decimais campo para impressão Livro Razão Auxiliar Parametrizável (Obrigatório quando LRAP_TIPO_CPO igual a N)"
        },
        "LarguraColuna": {
          "type": "integer",
          "format": "int32",
          "description": "Largura da coluna no relatório Livro Razão Auxiliar Parametrizável"
        },
        "IndicadorCampoAgrupador": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador de Campo Agrupador"
        },
        "IndicadorCampoTotalizador": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador de Campo Totalizador"
        },
        "DescricaoCampoAgrup": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição campo para impressão da linha totalizadora do Livro Razão Auxiliar Parametrizável"
        }
      }
    },
    "LivroRazaoParametroValor": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "PeriodoValor",
        "NomeCampo",
        "ConteudoCampo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoValor": {
          "type": "string",
          "format": "date-time",
          "description": "Período do Valor Adicional"
        },
        "NomeCampo": {
          "type": "string",
          "maxLength": 16,
          "description": "Nome campo para impressão Livro Razão Auxiliar Parametrizável"
        },
        "ConteudoCampo": {
          "type": "string",
          "maxLength": 150,
          "description": "Conteúdo do campo do Livro Razão Auxiliar Parametrizável"
        }
      }
    },
    "LocalColetaEntrega": {
      "type": "object",
      "required": [
        "CabecalhoDocFiscal",
        "InfoComplementar",
        "TipoTransporteCarga",
        "MunicipioColeta",
        "MunicipioEntrega"
      ],
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "InfoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "TipoTransporteCarga": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo de transporte da carga coletada:"
        },
        "CNPJContribuinteColeta": {
          "type": "string",
          "maxLength": 14,
          "description": "Número do CNPJ do contribuinte do local de coleta"
        },
        "IEContribuinteColeta": {
          "type": "string",
          "maxLength": 25,
          "description": "Inscrição Estadual do contribuinte do local de coleta"
        },
        "CPFContribuinteColeta": {
          "type": "string",
          "maxLength": 11,
          "description": "CPF do contribuinte do local de coleta das mercadorias."
        },
        "MunicipioColeta": {
          "$ref": "#/definitions/Municipio"
        },
        "CNPJContribuinteEntrega": {
          "type": "string",
          "maxLength": 14,
          "description": "Número do CNPJ do contribuinte do local de entrega"
        },
        "IEContribuinteEntrega": {
          "type": "string",
          "maxLength": 25,
          "description": "Inscrição Estadual do contribuinte do local de entrega"
        },
        "CPFContribuinteEntrega": {
          "type": "string",
          "maxLength": 11,
          "description": "Cpf do contribuinte do local de entrega"
        },
        "MunicipioEntrega": {
          "$ref": "#/definitions/Municipio"
        }
      }
    },
    "LogIntegracao": {
      "type": "object",
      "properties": {
        "NomeArquivo": {
          "type": "string"
        },
        "DataHoraIntegracao": {
          "type": "string",
          "format": "date-time"
        },
        "StatusIntegracao": {
          "type": "integer",
          "format": "int32"
        },
        "ObservacaoIntegracao": {
          "type": "string"
        },
        "CodigoCompanhia": {
          "type": "string"
        },
        "CodigoEstabFiscal": {
          "type": "string"
        },
        "SerieDocumento": {
          "type": "integer",
          "format": "int32"
        },
        "NumeroDocumento": {
          "type": "integer",
          "format": "int32"
        },
        "DataEmissaoDocumento": {
          "type": "string",
          "format": "date-time"
        },
        "IDCompanhia": {
          "type": "integer",
          "format": "int32"
        },
        "IDEstabFiscal": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Lotacao": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Codigo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 20,
          "description": "Código da Lotação"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição"
        },
        "CnpjTomador": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ do Tomador"
        },
        "CeiTomador": {
          "type": "string",
          "maxLength": 12,
          "description": "CEI do Tomador"
        }
      }
    },
    "LoteGuiaPrevidenciaSocial": {
      "type": "object",
      "properties": {
        "GuiasPrevidenciaSocial": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuiaPrevidenciaSocial"
          }
        },
        "EstabelecimentoFiscalBanco": {
          "$ref": "#/definitions/EstabelecimentoFiscalBanco"
        },
        "DataGeracaoLote": {
          "type": "string",
          "format": "date-time"
        },
        "UsuarioGeracaoLote": {
          "type": "string"
        },
        "DataPagamento": {
          "type": "string",
          "format": "date-time"
        },
        "PercentualJuros": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Menu": {
      "type": "object",
      "properties": {
        "Modulo": {
          "$ref": "#/definitions/Modulo"
        },
        "MenuPai": {
          "$ref": "#/definitions/Menu"
        },
        "Rota": {
          "$ref": "#/definitions/Rota"
        },
        "Descricao": {
          "type": "string"
        },
        "Nivel": {
          "type": "integer",
          "format": "int32"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Modelo": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ModeloArquivoDigital": {
      "type": "object",
      "properties": {
        "Tipo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "ModeloArquivoDigitalHistorico": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModeloArquivoDigitalHistorico"
          }
        }
      }
    },
    "ModeloArquivoDigitalHistorico": {
      "type": "object",
      "properties": {
        "ModeloArquivoDigital": {
          "$ref": "#/definitions/ModeloArquivoDigital"
        },
        "NomePadraoArquivo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "ReleaseMinima": {
          "type": "string"
        },
        "FundamentoLegal": {
          "type": "string"
        },
        "Arquivo": {
          "$ref": "#/definitions/Arquivo"
        }
      }
    },
    "Modulo": {
      "type": "object",
      "properties": {
        "Descricao": {
          "type": "string"
        }
      }
    },
    "Moeda": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "MoedaECF": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "Movimentacao": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "BemCIAP",
        "DataMov",
        "TipoMov",
        "OrigemMovimento"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "BemCIAP": {
          "$ref": "#/definitions/BemCIAP"
        },
        "DataMov": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Movimentação ou do saldo inicial"
        },
        "TipoMov": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo de movimentação do bem ou componente"
        },
        "NumeroParcela": {
          "type": "integer",
          "format": "int32",
          "description": "Número da parcela ICMS"
        },
        "OrigemMovimento": {
          "type": "string",
          "maxLength": 10,
          "description": "Origem do Movimento"
        },
        "DocumentosFiscais": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovimentacaoDocumentoFiscal"
          }
        }
      }
    },
    "MovimentacaoDocumentoFiscal": {
      "type": "object",
      "required": [
        "Movimentacao",
        "Parceiro",
        "CodigoModelo",
        "NumeroDocumento",
        "DataEmissaoDocumento"
      ],
      "properties": {
        "Movimentacao": {
          "$ref": "#/definitions/Movimentacao"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NFEmitidaEstab": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do emitente do documento fiscal"
        },
        "CodigoModelo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código Modelo do Documento Fiscal"
        },
        "NumeroSerie": {
          "type": "string",
          "maxLength": 3,
          "description": "Serie do documento fiscal"
        },
        "NumeroDocumento": {
          "type": "string",
          "maxLength": 9,
          "description": "Número do documento fiscal"
        },
        "ChaveNfeCte": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave do documento fiscal eletrônico, somente quando for documento de emissão própria"
        },
        "DataEmissaoDocumento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de emissão do documento fiscal"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovimentacaoDocumentoFiscalItem"
          }
        }
      }
    },
    "MovimentacaoDocumentoFiscalItem": {
      "type": "object",
      "required": [
        "MovimentacaoDocumentoFiscal",
        "Movimentacao",
        "NumeroItem",
        "Item"
      ],
      "properties": {
        "MovimentacaoDocumentoFiscal": {
          "$ref": "#/definitions/MovimentacaoDocumentoFiscal"
        },
        "Movimentacao": {
          "$ref": "#/definitions/Movimentacao"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32",
          "description": "Número sequencial do item do documento fiscal"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DocumentoFiscalItem": {
          "$ref": "#/definitions/DocumentoFiscalItem"
        }
      }
    },
    "MovimentacaoLALUR": {
      "type": "object",
      "required": [
        "Companhia",
        "DataMov",
        "TipoMov",
        "ValorMov",
        "DescricaoMov"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "DataMov": {
          "type": "string",
          "format": "date-time",
          "description": "Data Movimento"
        },
        "TipoMov": {
          "type": "string",
          "maxLength": 30,
          "description": "Tipo Movimento ('RESULTADO LÍQUIDO PERIODO' OU 'AJUSTE NEGATIVO' OU 'ADIÇÃO' OU  'EXCLUSÃO' OU 'COMPENSAÇÃO')"
        },
        "ValorMov": {
          "type": "number",
          "format": "double",
          "description": "Valor do Movimento - [15 inteiros e 2 decimais]"
        },
        "DescricaoMov": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição do Movimento"
        },
        "HistoricoParteA": {
          "type": "string",
          "maxLength": 255,
          "description": "Histórico Parte A"
        },
        "DetalheHistoricoParteA": {
          "type": "string",
          "maxLength": 255,
          "description": "Detalhe Histórico Parte A"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        }
      }
    },
    "MovimentoDocumentoFiscal": {
      "type": "object",
      "required": [
        "Movimentacao",
        "Parceiro",
        "CodigoModelo",
        "NumeroDocumento",
        "DataEmissaoDocumento"
      ],
      "properties": {
        "Movimentacao": {
          "$ref": "#/definitions/Movimentacao"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "NfeEmitidaEstabelecimento": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do emitente do documento fiscal"
        },
        "CodigoModelo": {
          "type": "string",
          "maxLength": 2,
          "description": "Código Modelo do Documento Fiscal"
        },
        "NumeroSerie": {
          "type": "string",
          "maxLength": 3,
          "description": "Serie do documento fiscal"
        },
        "NumeroDocumento": {
          "type": "string",
          "maxLength": 9,
          "description": "Número do documento fiscal"
        },
        "ChaveNfeDocumentoFiscalEmissaoPropria": {
          "type": "string",
          "maxLength": 44,
          "description": "Chave do documento fiscal eletrônico, somente quando for documento de emissão própria"
        },
        "DataEmissaoDocumento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de emissão do documento fiscal"
        }
      }
    },
    "MovimentoInventario": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "UnidadeMedida",
        "Item",
        "DataMovimento",
        "CodigoMovimento",
        "TipoMovimento"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DataMovimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data Movimentação"
        },
        "CodigoMovimento": {
          "type": "string",
          "maxLength": 3,
          "description": "Código movimento de inventário"
        },
        "TipoMovimento": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo Movimento"
        },
        "Documento": {
          "type": "string",
          "maxLength": 20,
          "description": "Documento associado à movimentação de estoque"
        },
        "Quantidade": {
          "type": "number",
          "format": "double",
          "description": "Quantidade da movimentação - [14 inteiros e 3 decimais]"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor total da movimentação - [15 inteiros e 2 decimais]"
        },
        "CustoUnitario": {
          "type": "number",
          "format": "double",
          "description": "Custo unitário - [12 inteiros e 5 decimais]"
        },
        "IndicadorPropriedade": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de propriedade"
        },
        "Serie": {
          "type": "string",
          "maxLength": 4,
          "description": "Serie Documento Fiscal"
        },
        "NumeroDocumento": {
          "type": "integer",
          "format": "int32",
          "description": "Número Documento Fiscal"
        },
        "DataEmissao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Emissão Nota Fiscal"
        },
        "Texto": {
          "type": "string",
          "maxLength": 30,
          "description": "Texto complementar"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor do IPI - [11 inteiros e 4 decimais]"
        }
      }
    },
    "Municipio": {
      "type": "object",
      "properties": {
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "CodigoIBGE": {
          "type": "integer",
          "format": "int32"
        },
        "Nome": {
          "type": "string"
        },
        "CodigoSIAF": {
          "type": "string"
        }
      }
    },
    "NaturezaBaseCreditoPISCOFINSCFOP": {
      "type": "object",
      "properties": {
        "CFOP": {
          "type": "number",
          "format": "double"
        },
        "NaturezaBaseCreditoPISCOFINS": {
          "type": "string"
        }
      }
    },
    "NaturezaConta": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "NaturezaJuridica": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "NaturezaOperacao": {
      "type": "object",
      "required": [
        "EstabelecimentoFiscal",
        "Codigo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Natureza de Operação"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 60,
          "description": "Descrição Natureza de Operação"
        }
      }
    },
    "NaturezaOperacaoECF": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Conta": {
          "type": "string"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NaturezaRetencaoFonte": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "NaturezaSubConta": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioValidade": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimValidade": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ObrigacaoRecolher": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "CodigoImposto"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data final"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 4,
          "description": "Código do Imposto"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "CodigoObrigacaoRecolher": {
          "type": "string",
          "maxLength": 3,
          "description": "Código da obrigação a recolher"
        },
        "ValorObrigacaoRecolher": {
          "type": "number",
          "format": "double",
          "description": "Valor da obrigação a recolher - [13 inteiros e 2 decimais]"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de vencimento da obrigação"
        },
        "CodigoReceita": {
          "type": "string",
          "maxLength": 50,
          "description": "Código de receita referente à obrigação"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 15,
          "description": "No.processo ou auto de infração ao qual a obrigação está vinculada, se houver"
        },
        "IndicadorOrigemProcesso": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da origem do proceso"
        },
        "DescricaoProcesso": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição resumida do processo que embasou o lançamento"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição complementar das obrigações a recolher"
        }
      }
    },
    "ObservacaoAjusteICMS": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ObservacaoDocumentoLancamentoDetalhe": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "ObservacaoDocumentoLancamentoFiscal",
        "Estado",
        "Reflexo",
        "TipoApuracao",
        "Responsabilidade",
        "InfluenciaRec",
        "OrigemTributacao",
        "CodigoAjusteBeneficio"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "ObservacaoDocumentoLancamentoFiscal": {
          "$ref": "#/definitions/ObservacaoDocumentoLancamentoFiscal"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "Reflexo": {
          "type": "string",
          "enum": [
            "CreditoEntrada",
            "OutrosCreditos",
            "EstornoDebito",
            "DebitoSaida",
            "OutrosDebitos",
            "EstornoCredito",
            "Deducao",
            "DebitosEspeciais",
            "Informativo"
          ]
        },
        "TipoApuracao": {
          "type": "string",
          "enum": [
            "OperacaoPropria",
            "OperacaoST",
            "OutrasApuracoes",
            "Apuracao1Bloco1900",
            "Apuracao2Bloco1900",
            "Apuracao3Bloco1900",
            "Informativo"
          ]
        },
        "Responsabilidade": {
          "type": "string",
          "enum": [
            "Propria",
            "Solidaria",
            "Informativo"
          ]
        },
        "InfluenciaRec": {
          "type": "string",
          "enum": [
            "Aapurar",
            "RecolhimentoEspontaneo",
            "RecolhimentoAutuacao",
            "IncentivoFiscal",
            "Informativo"
          ]
        },
        "OrigemTributacao": {
          "type": "string",
          "enum": [
            "Mercadoria",
            "Transporte",
            "Comunicacao",
            "EnergiaEletrica",
            "Outras"
          ]
        },
        "ObservacaoAjusteICMS": {
          "$ref": "#/definitions/ObservacaoAjusteICMS"
        },
        "CodigoAjusteBeneficio": {
          "$ref": "#/definitions/CodigoAjusteBeneficio"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição complementar do ajuste da apuração, nos caos em que variável de ajuste (OD_VARIAVEL_AJUSTE) for '9999'"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "BaseCalculoICMS": {
          "type": "number",
          "format": "double",
          "description": "Base de Cálculo do ICMS ou ICMS ST - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS - [3 inteiros e 2 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS ou do ICMS ST - [15 inteiros e 2 decimais]"
        },
        "OutrosValores": {
          "type": "number",
          "format": "double",
          "description": "Outros Valores - [15 inteiros e 2 decimais]"
        }
      }
    },
    "ObservacaoDocumentoLancamentoFiscal": {
      "type": "object",
      "required": [
        "CabecalhoDocFiscal",
        "ObservacaoLancamentoFiscal",
        "CodigoObservacao"
      ],
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "ObservacaoLancamentoFiscal": {
          "$ref": "#/definitions/ObservacaoLancamentoFiscal"
        },
        "CodigoObservacao": {
          "type": "string",
          "maxLength": 6,
          "description": "Código da observação do lançamento fiscal Este código deve estar cadastrado na tabela 'OBSERVAÇÃO LANÇAMENTO FISCAL'"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição complementar do código de observação"
        },
        "ObservacaoDocumentoLancamentoDetalhe": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservacaoDocumentoLancamentoDetalhe"
          }
        }
      }
    },
    "ObservacaoLancamentoFiscal": {
      "type": "object",
      "required": [
        "Codigo",
        "Descricao"
      ],
      "properties": {
        "Codigo": {
          "type": "string",
          "maxLength": 6,
          "description": "Código da observação do lançamento fiscal"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição da observação vinculada ao lançamento fiscal"
        }
      }
    },
    "OperacoesCartaoCreditoDebito": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Ano": {
          "type": "integer",
          "format": "int32"
        },
        "Mes": {
          "type": "integer",
          "format": "int32"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "TotalCredito": {
          "type": "number",
          "format": "double"
        },
        "TotalDebito": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "OperExteriorImportExport": {
      "type": "object",
      "required": [
        "TipoRegistro",
        "EstabelecimentoFiscal",
        "Companhia",
        "DataInicial",
        "DataFinal"
      ],
      "properties": {
        "TipoRegistro": {
          "type": "string",
          "maxLength": 4,
          "description": "Tipo de Registro"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "MoedaECF": {
          "$ref": "#/definitions/MoedaECF"
        },
        "UnidadeMedidaECF": {
          "$ref": "#/definitions/UnidadeMedidaECF"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "NumeroOrdem": {
          "type": "string",
          "maxLength": 50,
          "description": "Número de Ordem"
        },
        "TipoImportExport": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo de Operação"
        },
        "DescricaoImportExport": {
          "type": "string",
          "maxLength": 500,
          "description": "Descrição"
        },
        "TotalOperacao": {
          "type": "number",
          "format": "double",
          "description": "Total da Operação - [17 inteiros e 2 decimais]"
        },
        "NCM": {
          "type": "string",
          "maxLength": 8,
          "description": "NCM"
        },
        "Quantidade": {
          "type": "number",
          "format": "double",
          "description": "Quantidade - [17 inteiros e 2 decimais]"
        },
        "Arbitragem": {
          "type": "string",
          "maxLength": 1,
          "description": "Operação Sujeita a Arbitramento"
        },
        "Metodo": {
          "type": "string",
          "maxLength": 5,
          "description": "Método"
        },
        "PrecoParametro": {
          "type": "number",
          "format": "double",
          "description": "Preço Parâmetro - [17 inteiros e 2 decimais]"
        },
        "PrecoPraticado": {
          "type": "number",
          "format": "double",
          "description": "Preço Praticado - [17 inteiros e 2 decimais]"
        },
        "ValorAjuste": {
          "type": "number",
          "format": "double",
          "description": "Valor do Ajuste - [17 inteiros e 2 decimais]"
        },
        "TaxaJuros": {
          "type": "number",
          "format": "double",
          "description": "Taxa de Juros - [3 inteiros e 4 decimais]"
        },
        "TaxaJurosMinima": {
          "type": "number",
          "format": "double",
          "description": "Valor taxa de juros mínima - [3 inteiros e 4 decimais]"
        },
        "TaxaJurosMaxima": {
          "type": "number",
          "format": "double",
          "description": "Valor taxa de juros máxima - [3 inteiros e 4 decimais]"
        },
        "CNC": {
          "type": "string",
          "maxLength": 5,
          "description": "Código CNC"
        },
        "OperExteriorImportExportContratantes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperExteriorImportExportContratantes"
          }
        }
      }
    },
    "OperExteriorImportExportContratantes": {
      "type": "object",
      "required": [
        "TipoRegistro",
        "Nome",
        "Pais",
        "ValorOperacao",
        "CondicaoPessoa",
        "OperExteriorImportExport"
      ],
      "properties": {
        "TipoRegistro": {
          "type": "string",
          "maxLength": 4,
          "description": "Tipo de Participante"
        },
        "Nome": {
          "type": "string",
          "maxLength": 100,
          "description": "Nome da pessoa (Jurídica/Física)"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "ValorOperacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da operação - [17 inteiros e 2 decimais]"
        },
        "CondicaoPessoa": {
          "type": "string",
          "maxLength": 2,
          "description": "Condição da Pessoa Envolvida"
        },
        "OperExteriorImportExport": {
          "$ref": "#/definitions/OperExteriorImportExport"
        }
      }
    },
    "OperExteriorPVNV": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "DataFinal",
        "TipoOperacao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 100,
          "description": "Código da Operação"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 500,
          "description": "Descrição da operação"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time",
          "description": "Data Final"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operação - [17 inteiros e 2 decimais]"
        },
        "TipoOperacao": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo de Operação"
        }
      }
    },
    "OptantesREFIS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "Mes"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "Mes": {
          "type": "string",
          "maxLength": 2,
          "description": "Mês"
        },
        "OptantesREFISOptantes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptantesREFISOptantes"
          }
        }
      }
    },
    "OptantesREFISOptantes": {
      "type": "object",
      "required": [
        "InformacaoOptanteREFIS",
        "Valor",
        "OptantesREFIS"
      ],
      "properties": {
        "InformacaoOptanteREFIS": {
          "$ref": "#/definitions/InformacaoOptanteREFIS"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor - [17 inteiros e 2 decimais]"
        },
        "OptantesREFIS": {
          "$ref": "#/definitions/OptantesREFIS"
        }
      }
    },
    "OrigemAplicacaoRecursosImunesIsentas": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoApuracao": {
          "type": "string"
        },
        "DataIniApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Valor": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "OrigemItem": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "OutrasCompensacoes": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "ImpostoRetido",
        "CodigoReceita",
        "DataApuracao",
        "TipoCredito",
        "ValorCompensado",
        "FormaPedido",
        "NumeroProcesso"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "CodigoReceita": {
          "$ref": "#/definitions/CodigoReceita"
        },
        "DataApuracao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Apuracao"
        },
        "TipoCredito": {
          "type": "string",
          "maxLength": 2,
          "description": "Tipo Credito"
        },
        "ValorCompensado": {
          "type": "number",
          "format": "double",
          "description": "Valor Compensado - [13 inteiros e 2 decimais]"
        },
        "FormaPedido": {
          "type": "string",
          "maxLength": 1,
          "description": "Forma Pedido"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 24,
          "description": "Numero Processo"
        },
        "NumeroQuota": {
          "type": "integer",
          "format": "int32",
          "description": "Numero Quota"
        }
      }
    },
    "OutrasInformacoesECF": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "TipoDocumento",
        "Descricao",
        "HashArquivo",
        "Arquivo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "TipoDocumento": {
          "type": "string",
          "maxLength": 3,
          "description": "Tipo do Documento"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição do Conteúdo do Documento"
        },
        "HashArquivo": {
          "type": "string",
          "maxLength": 41,
          "description": "Hash do Arquivo incluído na escrituração"
        },
        "Arquivo": {
          "type": "string",
          "format": "binary",
          "description": "Sequencia de Bytes"
        }
      }
    },
    "OutrasInformacoesLucroPresumido": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "VlrCapitalAnterior": {
          "type": "number",
          "format": "double",
          "description": "Capital registrado do ano anterior - [17 inteiros e 2 decimais]"
        },
        "VlrCapital": {
          "type": "number",
          "format": "double",
          "description": "Capital registrado - [17 inteiros e 2 decimais]"
        },
        "VlrEstoqueAnterior": {
          "type": "number",
          "format": "double",
          "description": "Estoques do ano anterior - [17 inteiros e 2 decimais]"
        },
        "VlrEstoque": {
          "type": "number",
          "format": "double",
          "description": "Estoques - [17 inteiros e 2 decimais]"
        },
        "VlrCaixaAnterior": {
          "type": "number",
          "format": "double",
          "description": "Saldo de caixa e bancos do ano anterior - [17 inteiros e 2 decimais]"
        },
        "VlrCaixa": {
          "type": "number",
          "format": "double",
          "description": "Saldo de caixa e bancos - [17 inteiros e 2 decimais]"
        },
        "VlrAplicFinanAnterior": {
          "type": "number",
          "format": "double",
          "description": "Saldo de aplicações financeiras do ano anterior - [17 inteiros e 2 decimais]"
        },
        "VlrAplicFinan": {
          "type": "number",
          "format": "double",
          "description": "Saldo de aplicações financeiras - [17 inteiros e 2 decimais]"
        },
        "VlrContasReceberAnterior": {
          "type": "number",
          "format": "double",
          "description": "Contas a receber do ano anterior - [17 inteiros e 2 decimais]"
        },
        "VlrContasReceber": {
          "type": "number",
          "format": "double",
          "description": "Contas a receber - [17 inteiros e 2 decimais]"
        },
        "VlrContasPagarAnterior": {
          "type": "number",
          "format": "double",
          "description": "Contas a pagar do ano anterior - [17 inteiros e 2 decimais]"
        },
        "VlrContasPagar": {
          "type": "number",
          "format": "double",
          "description": "Contas a pagar - [17 inteiros e 2 decimais]"
        },
        "VlrCompraMercadorias": {
          "type": "number",
          "format": "double",
          "description": "Compras de mercadorias no ano-calendário - [17 inteiros e 2 decimais]"
        },
        "VlrCompraAtivo": {
          "type": "number",
          "format": "double",
          "description": "Compras de elementos do ativo no ano-calendário, exceto os classificáveis no ativo circulante e ativo realizável a longo prazo - [17 inteiros e 2 decimais]"
        },
        "VlrReceitas": {
          "type": "number",
          "format": "double",
          "description": "Receitas e rendimentos não tributáveis ou tributados exclusivamente na fonte - [17 inteiros e 2 decimais]"
        },
        "VlrTotalAtivo": {
          "type": "number",
          "format": "double",
          "description": "Total do ativo - [17 inteiros e 2 decimais]"
        },
        "VlrTotaFolha": {
          "type": "number",
          "format": "double",
          "description": "Valor total da folha sujeita à alíquota reduzida de que trata a Lei nº 11.774/2008 - [17 inteiros e 2 decimais]"
        },
        "VlrAliquotaReduzida": {
          "type": "number",
          "format": "double",
          "description": "Valor total da folha sujeita à alíquota reduzida de que trata a Lei nº 11.774/2008 - [4 inteiros e 4 decimais]"
        },
        "IndicaRegimeApuracao": {
          "type": "integer",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "format": "int32",
          "description": "Regime de Apuração das Receitas"
        }
      }
    },
    "OutrasInformacoesLucroReal": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "VlrAquisicaoMaquinas": {
          "type": "number",
          "format": "double",
          "description": "Aquisição de máquinas, aparelhos, instrumentos e equipamentos novos (Lei nº 11.196/2005, art. 31) - [17 inteiros e 2 decimais]"
        },
        "VlrDoacaoCriancas": {
          "type": "number",
          "format": "double",
          "description": "Doação aos fundos dos direitos da criança e do adolescente - [17 inteiros e 2 decimais]"
        },
        "VlrDoacaoIdoso": {
          "type": "number",
          "format": "double",
          "description": "Doação aos Fundos Nacional, Estaduais ou Municipais do Idoso (Lei nº 12.213/2010, art. 3º) - [17 inteiros e 2 decimais]"
        },
        "VlrAquisicaoImobilizado": {
          "type": "number",
          "format": "double",
          "description": "Aquisições para o ativo imobilizado - [17 inteiros e 2 decimais]"
        },
        "VlrBaixasImobilizado": {
          "type": "number",
          "format": "double",
          "description": "Baixas do ativo imobilizado - [17 inteiros e 2 decimais]"
        },
        "VlrIncentivoInicial": {
          "type": "number",
          "format": "double",
          "description": "Bens sujeitos ao incentivo de que trata a Lei nº 11.051/2004 no início do período - [17 inteiros e 2 decimais]"
        },
        "VlrIncentivoFinal": {
          "type": "number",
          "format": "double",
          "description": "Bens sujeitos ao incentivo de que trata a Lei nº 11.051/2004 no fim do período - [17 inteiros e 2 decimais]"
        },
        "VlrDeprecCSLLInicio": {
          "type": "number",
          "format": "double",
          "description": "Saldo de créditos de CSLL sobre depreciação no início do período (Lei nº 11.051/2004, art. 1º) - [17 inteiros e 2 decimais]"
        },
        "VlrOperacoesSemIOF": {
          "type": "number",
          "format": "double",
          "description": "Valor das operações de câmbio com isenção de IOF (Lei nº 12.350/2010, art. 12) - [17 inteiros e 2 decimais]"
        },
        "VlrFolhaAliquotaReduzida": {
          "type": "number",
          "format": "double",
          "description": "Valor total da folha sujeita à alíquota reduzida de que trata a Lei nº 11.774/2008 - [17 inteiros e 2 decimais]"
        },
        "VlrAliquotaReduzida": {
          "type": "number",
          "format": "double",
          "description": "Alíquota reduzida de que trata a Lei nº 11.774/2008 - [4 inteiros e 4 decimais]"
        },
        "IndicaAlteracaoCapital": {
          "type": "integer",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "format": "int32",
          "description": "Alteração de capital na forma dos art. 22 e 23 da Lei nº 9.249/1995:"
        },
        "IndicaBCNCSLL": {
          "type": "integer",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "format": "int32",
          "description": "Opção pela escrituração, no ativo, da base de cálculo negativa da CSLL (MP nº 1.807/1999, art. 8º):"
        }
      }
    },
    "OutrasMovimentacoes": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "ItemOrigem",
        "ItemDestino",
        "DataMovimentacao",
        "QuantidadeMovimentacao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ItemOrigem": {
          "$ref": "#/definitions/Item"
        },
        "ItemDestino": {
          "$ref": "#/definitions/Item"
        },
        "DataMovimentacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Movimentação Interna"
        },
        "QuantidadeMovimentacao": {
          "type": "number",
          "format": "double",
          "description": "Quantidade Movimentada - [11 inteiros e 6 decimais]"
        }
      }
    },
    "OutrosDocumentosPISCOFINS": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataEmissaoOperacao",
        "ValorDocumento",
        "CodigoSituacaoPIS",
        "CodigoSituacaoCOFINS"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DataEmissaoOperacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Operação"
        },
        "ValorDocumento": {
          "type": "number",
          "format": "double",
          "description": "Valor da Operação/Item - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do PIS (Percentual) - [1 inteiros e 4 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32",
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da Base de Cálculo do COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota do COFINS (Percentual) - [1 inteiros e 4 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor do COFINS - [15 inteiros e 2 decimais]"
        },
        "IndicadorOrigemCredito": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da Origem do Crédito"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "DescricaoDocumento": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição do Documento/Operação"
        },
        "IndCalculoReceita": {
          "type": "boolean",
          "description": "Indicador de Cálculo da Receita"
        },
        "ClasseDocumentoPISCOFINS": {
          "$ref": "#/definitions/ClasseDocumentoPISCOFINS"
        }
      }
    },
    "OutrosLancamentosInfoEconomicas": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "TipoLancamento",
        "Codigo",
        "Descricao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "TipoLancamento": {
          "type": "string",
          "maxLength": 4,
          "description": "Tipo de Lançamento"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 100,
          "description": "Codigo Lançamento"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 500,
          "description": "Descrição"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Total da Lançamento - [17 inteiros e 2 decimais]"
        }
      }
    },
    "OutrosLancamentosInfoEconomicasLancamento": {
      "type": "object",
      "properties": {
        "TipoLancamento": {
          "type": "string"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "PagamentoDARF": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "CodigoReceita": {
          "$ref": "#/definitions/CodigoReceita"
        },
        "DataApuracao": {
          "type": "string",
          "format": "date-time"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time"
        },
        "Referencia": {
          "type": "string"
        },
        "ValorPrincipal": {
          "type": "number",
          "format": "double"
        },
        "ValorMulta": {
          "type": "number",
          "format": "double"
        },
        "ValorJuros": {
          "type": "number",
          "format": "double"
        },
        "ValorPago": {
          "type": "number",
          "format": "double"
        },
        "ValorDebitoCumulativo": {
          "type": "number",
          "format": "double"
        },
        "ValorDebitoNaoCumulativo": {
          "type": "number",
          "format": "double"
        },
        "NumeroQuota": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PagamentoIndevido": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "ImpostoRetido",
        "CodigoReceita",
        "DataApuracao",
        "ValorCompensado",
        "FormaPedido",
        "NumeroProcesso"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "CodigoReceita": {
          "$ref": "#/definitions/CodigoReceita"
        },
        "DataApuracao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Apuracao"
        },
        "ValorCompensado": {
          "type": "number",
          "format": "double",
          "description": "Valor Compensado - [15 inteiros e 2 decimais]"
        },
        "FormaPedido": {
          "type": "string",
          "maxLength": 1,
          "description": "Forma Pedido"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 24,
          "description": "Numero Processo"
        },
        "NumeroQuota": {
          "type": "integer",
          "format": "int32",
          "description": "Numero Quota"
        }
      }
    },
    "PagamentoRecebimentoExterior": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "Pais",
        "Tipo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "NaturezaOperacao": {
          "$ref": "#/definitions/NaturezaOperacaoECF"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo:  R - Rendimentos Recebidos/ P – Pagamentos"
        },
        "FormaRecebimento": {
          "type": "integer",
          "format": "int32",
          "description": "Forma de Recebimento/Pagamento"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Total do valor no período - [17 inteiros e 2 decimais]"
        }
      }
    },
    "PagamentoRemessasServJurosDivRecBRExt": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Pais",
        "Tipo",
        "DataInicial"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "Tipo": {
          "type": "string",
          "maxLength": 5,
          "description": "Indicador de tipo registro"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "ValorAssTec": {
          "type": "number",
          "format": "double",
          "description": "Valor dos serviços de assistência técnica, científica, administrativa e assemelhados com transferência de tecnologia - [16 inteiros e 2 decimais]"
        },
        "ValorTecAssBR": {
          "type": "number",
          "format": "double",
          "description": "Valor dos serviços técnicos e de assistência sem transferência de tecnologia prestados no Brasil - [17 inteiros e 2 decimais]"
        },
        "ValorTecAssExt": {
          "type": "number",
          "format": "double",
          "description": "Valor dos serviços técnicos e de assistência sem transferência de tecnologia prestados no exterior - [17 inteiros e 2 decimais]"
        },
        "ValorJuroPF": {
          "type": "number",
          "format": "double",
          "description": "Valor dos juros sobre o capital próprio - [18 inteiros e 2 decimais]"
        },
        "ValorJuroPJ": {
          "type": "number",
          "format": "double",
          "description": "Valor dos juros sobre o capital próprio - [17 inteiros e 2 decimais]"
        },
        "ValorOutros": {
          "type": "number",
          "format": "double",
          "description": "Valor dos demais juros - [17 inteiros e 2 decimais]"
        },
        "ValorDividPF": {
          "type": "number",
          "format": "double",
          "description": "Dividendos pagos a pessoa jurídica - [17 inteiros e 2 decimais]"
        },
        "ValorDividPJ": {
          "type": "number",
          "format": "double",
          "description": "Dividendos pagos a pessoa física - [17 inteiros e 2 decimais]"
        }
      }
    },
    "Pais": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Sigla": {
          "type": "string"
        },
        "Nome": {
          "type": "string"
        },
        "CodigoSiscomex": {
          "type": "string"
        }
      }
    },
    "ParametroComposicaoCustos": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        }
      }
    },
    "ParametrosAdicoesExclusoesParteALalurLacs": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Registro": {
          "type": "string"
        },
        "ParametrosAdicoesExclusoesParteALalurLacsContasContabeis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParametrosAdicoesExclusoesParteALalurLacsContasContabeis"
          }
        }
      }
    },
    "ParametrosAdicoesExclusoesParteALalurLacsContasContabeis": {
      "type": "object",
      "properties": {
        "ParametrosAdicoesExclusoesParteALalurLacs": {
          "$ref": "#/definitions/ParametrosAdicoesExclusoesParteALalurLacs"
        },
        "Codigo": {
          "type": "string"
        },
        "TipoLancamento": {
          "type": "string"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "HistoricoLancamento": {
          "type": "string"
        }
      }
    },
    "Parceiro": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "Nome",
        "Ativo",
        "ParceiroCliente",
        "ParceiroFornecedor",
        "ParceiroTransportador",
        "ParceiroDepositante",
        "ParceiroFuncionario",
        "ParceiroTerceiro",
        "Endereco",
        "Pais"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 30,
          "description": "Código do Parceiro"
        },
        "Nome": {
          "type": "string",
          "maxLength": 60,
          "description": "Nome pessoal ou empresarial do Parceiro"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ"
        },
        "CPF": {
          "type": "string",
          "maxLength": 11,
          "description": "CPF"
        },
        "InscricaoEstadual": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual"
        },
        "InscricaoMunicipal": {
          "type": "string",
          "maxLength": 25,
          "description": "Inscrição Municipal"
        },
        "InscricaoSuframa": {
          "type": "string",
          "maxLength": 9,
          "description": "Número de inscrição do parceiro na Suframa"
        },
        "Ativo": {
          "type": "integer",
          "format": "int32",
          "description": "Status"
        },
        "ParceiroCliente": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se parceiro é Cliente"
        },
        "ParceiroFornecedor": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se parceiro é Fornecedor"
        },
        "ParceiroTransportador": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se parceiro é Transportadora"
        },
        "ParceiroDepositante": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se parceiro é Depositante"
        },
        "ParceiroFuncionario": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se parceiro é Funcionário"
        },
        "ParceiroTerceiro": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador se parceiro é Terceiro"
        },
        "Endereco": {
          "type": "string",
          "maxLength": 60,
          "description": "Logradouro e endereço do imóvel do Parceiro"
        },
        "Numero": {
          "type": "string",
          "maxLength": 15,
          "description": "Número do imóvel do Parceiro"
        },
        "Complemento": {
          "type": "string",
          "maxLength": 60,
          "description": "Dados complementares do endereço do Parceiro"
        },
        "Bairro": {
          "type": "string",
          "maxLength": 60,
          "description": "Bairro em que o imóvel do Parceiro está situado"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "CEP": {
          "type": "integer",
          "format": "int32",
          "description": "CEP"
        },
        "DataNascimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Nascimento"
        },
        "DataAdmissao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Admissão"
        },
        "DataDemissao": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Demissão"
        },
        "Funcao": {
          "type": "string",
          "maxLength": 20,
          "description": "Função"
        },
        "QtdeDependentesIRFonte": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de Dependentes para fins de IRRF"
        },
        "NumIdenTrab": {
          "type": "string",
          "maxLength": 30,
          "description": "Código que identifica o trabalhador na empresa e/ou estabelecimento"
        },
        "INDVinc": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador do tipo de vínculo do trabalhador"
        },
        "CODCategoria": {
          "type": "string",
          "maxLength": 20,
          "description": "Categoria do trabalhador conforme tabela do manual da GFIP"
        },
        "CategoriaNF": {
          "type": "string",
          "maxLength": 5,
          "description": "Categora a qual pertence a NF"
        },
        "TipoNotaServico": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo de Nota de Serviço"
        },
        "IDTributoCodReceitaIR": {
          "type": "integer",
          "format": "int32",
          "description": "Código de recolhimento de IR"
        },
        "IDTributoCodReceitaISS": {
          "type": "integer",
          "format": "int32",
          "description": "Código de recolhimento de ISS"
        },
        "IndOptanteSimplesNacional": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador optante Simples Nacional"
        },
        "Telefone": {
          "type": "string",
          "maxLength": 15,
          "description": "Telefone do Parceiro"
        },
        "DDD": {
          "type": "string",
          "maxLength": 5,
          "description": "DDD do Telefone do Parceiro"
        },
        "Email": {
          "type": "string",
          "maxLength": 255,
          "description": "Email do Parceiro"
        },
        "IndicadorContribuinteICMS": {
          "type": "string",
          "enum": [
            "S",
            "N"
          ],
          "maxLength": 1,
          "description": "Indicador Contribuinte ICMS"
        },
        "IndicadorContribuinteIPI": {
          "type": "string",
          "enum": [
            "S",
            "N"
          ],
          "maxLength": 1,
          "description": "Indicador Contribuinte IPI"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "GruposTributacao": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParceiroGrupoTributacao"
          }
        },
        "ClassesImposto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParceiroClasseImposto"
          }
        },
        "HistoricoAlteracoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParceiroAlteracao"
          }
        }
      }
    },
    "ParceiroAlteracao": {
      "type": "object",
      "required": [
        "Parceiro",
        "DataAlteracaoParceiro"
      ],
      "properties": {
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "DataAlteracaoParceiro": {
          "type": "string",
          "format": "date-time",
          "description": "Data  e hora alteração do cadastro"
        },
        "Nome": {
          "type": "string",
          "maxLength": 60,
          "description": "Conteúdo anterior - Nome pessoal ou empresarial do Paceiro"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "Conteúdo anterior - CNPJ"
        },
        "CPF": {
          "type": "string",
          "maxLength": 11,
          "description": "Conteúdo anterior - CPF"
        },
        "InscricaoEstadual": {
          "type": "string",
          "maxLength": 14,
          "description": "Conteúdo anterior - Inscrição Estadual"
        },
        "InscricaoSuframa": {
          "type": "string",
          "maxLength": 9,
          "description": "Conteúdo anterior - Número de inscrição do parceiro na Suframa"
        },
        "CodigoPais": {
          "type": "string",
          "maxLength": 5,
          "description": "Conteúdo anterior - Código do País do Parceiro"
        },
        "Endereco": {
          "type": "string",
          "maxLength": 60,
          "description": "Conteúdo anterior - Logradouro e endereço do imóvel do Parceiro"
        },
        "Numero": {
          "type": "string",
          "maxLength": 15,
          "description": "Conteúdo anterior - Número do imóvel do Parceiro"
        },
        "Complemento": {
          "type": "string",
          "maxLength": 60,
          "description": "Conteúdo anterior - Dados complementares do endereço do Parceiro"
        },
        "Bairro": {
          "type": "string",
          "maxLength": 60,
          "description": "Conteúdo anterior - Bairro em que o imóvel do Parceiro está situado"
        },
        "CodigoMunicipio": {
          "type": "integer",
          "format": "int32",
          "description": "Conteúdo anterior - Código Município, conforme tabela IBGE"
        }
      }
    },
    "ParceiroClasseImposto": {
      "type": "object",
      "properties": {
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "ClasseImposto": {
          "$ref": "#/definitions/ClasseImposto"
        }
      }
    },
    "ParceiroDeposit": {
      "type": "object",
      "properties": {
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "ParceiroDep": {
          "$ref": "#/definitions/Parceiro"
        },
        "CodigoCliente": {
          "type": "string"
        }
      }
    },
    "ParceiroEndereco": {
      "type": "object",
      "properties": {
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "Codigo": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "CEP": {
          "type": "integer",
          "format": "int32"
        },
        "Financeiro": {
          "type": "boolean"
        },
        "Entrega": {
          "type": "boolean"
        },
        "Contato": {
          "type": "string"
        },
        "DDD": {
          "type": "string"
        },
        "Telefone": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        }
      }
    },
    "ParceiroGrupoTributacao": {
      "type": "object",
      "properties": {
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "GrupoTributacao": {
          "$ref": "#/definitions/GrupoTributacao"
        }
      }
    },
    "ParcelamentoImposto": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "ImpostoRetido",
        "CodigoReceita",
        "DataApuracao",
        "ValorParcelado",
        "NumeroProcessado"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "CodigoReceita": {
          "$ref": "#/definitions/CodigoReceita"
        },
        "DataApuracao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Apuracao"
        },
        "ValorParcelado": {
          "type": "number",
          "format": "double",
          "description": "Valor Parcelado - [15 inteiros e 2 decimais]"
        },
        "NumeroProcessado": {
          "type": "string",
          "maxLength": 24,
          "description": "Numero Processado"
        }
      }
    },
    "ParteALALURLACS": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioValidade": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimValidade": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        },
        "TipoLancamento": {
          "type": "string"
        }
      }
    },
    "ParticipacoesConsorciosEmpresas": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "CNPJConsorcio",
        "CNPJLider",
        "CondicaoDeclarante",
        "ReceitaDeclarante"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "CNPJConsorcio": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ"
        },
        "CNPJLider": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da empresa líder"
        },
        "CondicaoDeclarante": {
          "type": "integer",
          "format": "int32",
          "description": "Condição do declarante no consórcio:1 – Líder ; 2 – Participante"
        },
        "ReceitaConsorcio": {
          "type": "number",
          "format": "double",
          "description": "Receita do Consórcio. Obrigatório se COND_DECL='1'. Senão, não deve ser preenchido. - [17 inteiros e 2 decimais]"
        },
        "ReceitaDeclarante": {
          "type": "number",
          "format": "double",
          "description": "Receita do declarante no consórcio - [17 inteiros e 2 decimais]"
        },
        "ParticipacoesConsorciosEmpresasParticipantes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParticipacoesConsorciosEmpresasParticipantes"
          }
        }
      }
    },
    "ParticipacoesConsorciosEmpresasParticipantes": {
      "type": "object",
      "required": [
        "CNPJ",
        "Receita",
        "ParticipacoesConsorciosEmpresas"
      ],
      "properties": {
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ"
        },
        "Receita": {
          "type": "number",
          "format": "double",
          "description": "Receita do participante. Obrigatório se Y640.COND_DECL='1' Senão, não deve ser preenchido. - [17 inteiros e 2 decimais]"
        },
        "ParticipacoesConsorciosEmpresas": {
          "$ref": "#/definitions/ParticipacoesConsorciosEmpresas"
        }
      }
    },
    "ParticipanteAcionario": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Codigo",
        "Nome",
        "CodigoRelacionamento",
        "DataInicioRelacionamento",
        "DataFimRelacionamento"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 30,
          "description": "Código do Participante"
        },
        "Nome": {
          "type": "string",
          "maxLength": 50,
          "description": "Nome"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ Participante"
        },
        "CPF": {
          "type": "string",
          "maxLength": 11,
          "description": "CPF Participante"
        },
        "NIT": {
          "type": "string",
          "maxLength": 11,
          "description": "NIT Participante"
        },
        "InscricaoEstadual": {
          "type": "string",
          "maxLength": 25,
          "description": "Inscrição Estadual Participante"
        },
        "InscricaoEstadualSubst": {
          "type": "string",
          "maxLength": 25,
          "description": "Inscrição Estadual Participante na UF do Estabelecimento, onde este é substituto"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "InscricaoMunicipal": {
          "type": "string",
          "maxLength": 7,
          "description": "Inscrição Municipal Participante"
        },
        "InscricaoSuframa": {
          "type": "string",
          "maxLength": 9,
          "description": "Inscrição SUFRAMA Participante"
        },
        "CodigoRelacionamento": {
          "$ref": "#/definitions/CodigoRelacionamento"
        },
        "DataInicioRelacionamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data Início do Relacionamento"
        },
        "DataFimRelacionamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data Término do Relacionamento"
        }
      }
    },
    "ParticipAvalMetodoEquivPatrimonial": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Pais",
        "DataInicial",
        "DataEvento",
        "TipoRelacionamento",
        "NomeEmpresarial",
        "VlrTotPartReais",
        "VlrTotPartMoedaOrig",
        "PercentCapitalTotal",
        "PercentCapitalVotante",
        "DataPrimeiraAquisicao",
        "IndicaProcessoCartorio",
        "IndicaProcessoRFB"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "DataEvento": {
          "type": "string",
          "format": "date-time",
          "description": "Data Evento"
        },
        "TipoRelacionamento": {
          "type": "integer",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "format": "int32",
          "description": "Tipo de Relacionamento"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ"
        },
        "NomeEmpresarial": {
          "type": "string",
          "maxLength": 255,
          "description": "Nome Empresarial"
        },
        "VlrTotPartReais": {
          "type": "number",
          "format": "double",
          "description": "Valor Total da Participação em Reais - [17 inteiros e 2 decimais]"
        },
        "VlrTotPartMoedaOrig": {
          "type": "number",
          "format": "double",
          "description": "Valor Total da Participação em Moeda Original do País da Empresa Investida - [17 inteiros e 2 decimais]"
        },
        "PercentCapitalTotal": {
          "type": "number",
          "format": "double",
          "description": "Percentual sobre o Capital Total - [6 inteiros e 2 decimais]"
        },
        "PercentCapitalVotante": {
          "type": "number",
          "format": "double",
          "description": "Percenutal sobre o Capital Votante - [6 inteiros e 2 decimais]"
        },
        "ResultEquivalPatrim": {
          "type": "number",
          "format": "double",
          "description": "Resultado de Equivalência Patrimonial - [17 inteiros e 2 decimais]"
        },
        "DataPrimeiraAquisicao": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Primeira Aquisiçção"
        },
        "IndicaProcessoCartorio": {
          "type": "string",
          "enum": [
            "S",
            "N"
          ],
          "maxLength": 1,
          "description": "Indicador Processo Cartório"
        },
        "NumeroProcessoCartorio": {
          "type": "string",
          "maxLength": 255,
          "description": "Número do Processo no Cartório"
        },
        "NomeCartorio": {
          "type": "string",
          "maxLength": 255,
          "description": "Nome do Cartório"
        },
        "IndicaProcessoRFB": {
          "type": "string",
          "enum": [
            "S",
            "N"
          ],
          "maxLength": 1,
          "description": "Indicador Processo RFB"
        },
        "NumeroProcesoRFB": {
          "type": "string",
          "maxLength": 255,
          "description": "Número do Processo na RFB"
        }
      }
    },
    "PartidaContabil": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Status": {
          "type": "boolean"
        },
        "PartidaContabilContas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartidaContabilContas"
          }
        }
      }
    },
    "PartidaContabilContas": {
      "type": "object",
      "properties": {
        "PartidaContabil": {
          "$ref": "#/definitions/PartidaContabil"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "Tipo": {
          "type": "string"
        },
        "Percentual": {
          "type": "number",
          "format": "double"
        },
        "UtilizaContaParceiro": {
          "type": "boolean"
        }
      }
    },
    "PedidoExterno": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "TipoPedidoPerfilOperacaoFiscal",
        "Parceiro",
        "TipoOperacao",
        "NumeroPedido"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "TipoPedidoPerfilOperacaoFiscal": {
          "$ref": "#/definitions/TipoPedidoPerfilOperacaoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "CondicaoPagamento": {
          "$ref": "#/definitions/CondicaoPagamento"
        },
        "EstadoEmbarque": {
          "$ref": "#/definitions/Estado"
        },
        "Transportadora": {
          "$ref": "#/definitions/Parceiro"
        },
        "TipoOperacao": {
          "type": "integer",
          "format": "int32",
          "description": "Tipo da Operação - '0 =ENTRADA' ou '1 = SAIDA'"
        },
        "NumeroPedido": {
          "type": "string",
          "maxLength": 20,
          "description": "Número do Pedido"
        },
        "DataPedido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pedido"
        },
        "StatusPedido": {
          "type": "string",
          "maxLength": 1,
          "description": "Status do Pedido - 0 = Aberto / 1 = Parcial / 2 = Total"
        },
        "Acao": {
          "type": "integer",
          "format": "int32",
          "description": "Ação a ser tomada no processo de gravação - 0 = Gravar / 1 = Gerar Nota e calcular imposto / 2 = Gerar Nota sem Calculo de imposto"
        },
        "TipoDocumento": {
          "type": "string",
          "maxLength": 4,
          "description": "Tipo do Documento - CTRC / NCD / NCR / NF / NFC / NFE / NFF / NFS"
        },
        "LocalEmbarque": {
          "type": "string",
          "maxLength": 60,
          "description": "Local de Embarque"
        },
        "InformacaoComplementar": {
          "type": "string",
          "maxLength": 2000,
          "description": "Informação Complementar do Pedido"
        },
        "ValorBasePISRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retido PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPISRetido": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção PIS - [3 inteiros e 2 decimais]"
        },
        "ValorPISRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido PIS - [15 inteiros e 2 decimais]"
        },
        "CodigoReceitaPISRetido": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Recolhmento PIS"
        },
        "DataPagamentoPISRetido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento PIS"
        },
        "ValorBaseCOFINSRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retido COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINSRetido": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção COFINS - [3 inteiros e 2 decimais]"
        },
        "ValorCOFINSRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido COFINS - [15 inteiros e 2 decimais]"
        },
        "CodigoReceitaCOFINSRetido": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Recolhmento COFINS"
        },
        "DataPagamentoCOFINSRetido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento COFINS"
        },
        "ValorBaseCSLLRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retido CSLL - [15 inteiros e 2 decimais]"
        },
        "AliquotaCSLLRetido": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção CSLL - [3 inteiros e 2 decimais]"
        },
        "ValorCSLLRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido CSLL - [15 inteiros e 2 decimais]"
        },
        "CodigoReceitaCSLLRetido": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Recolhmento CSLL"
        },
        "DataPagamentoCSLLRetido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento CSLL"
        },
        "ValorBaseCSSRRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retido CSRF - [15 inteiros e 2 decimais]"
        },
        "AliquotaCSSRRetido": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção CSRF - [3 inteiros e 2 decimais]"
        },
        "ValorCSSRRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido CSRF - [15 inteiros e 2 decimais]"
        },
        "CodigoReceitaCSSRRetido": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Recolhmento CSRF"
        },
        "DataPagamentoCSSRRetido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento CSRF"
        },
        "ValorBaseISSRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retido ISS - [15 inteiros e 2 decimais]"
        },
        "AliquotaISSRetido": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção ISS - [3 inteiros e 2 decimais]"
        },
        "ValorISSRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido ISS - [15 inteiros e 2 decimais]"
        },
        "CodigoReceitaISSRetido": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Recolhmento ISS"
        },
        "DataPagamentoISSRetido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento ISS"
        },
        "ValorBaseIRRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retido IR - [15 inteiros e 2 decimais]"
        },
        "AliquotaIRRetido": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção IR - [3 inteiros e 2 decimais]"
        },
        "ValorIRRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido IR - [15 inteiros e 2 decimais]"
        },
        "CodigoReceitaIRRetido": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Recolhmento IR"
        },
        "DataPagamentoIRRetido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento IR"
        },
        "ValorBaseINSSRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Base Retido INSS - [15 inteiros e 2 decimais]"
        },
        "AliquotaINSSRetido": {
          "type": "number",
          "format": "double",
          "description": "Alíquota de Retenção INSS - [3 inteiros e 2 decimais]"
        },
        "ValorINSSRetido": {
          "type": "number",
          "format": "double",
          "description": "Valor Retido INSS - [15 inteiros e 2 decimais]"
        },
        "CodigoReceitaINSSRetido": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Recolhmento INSS"
        },
        "DataPagamentoINSSRetido": {
          "type": "string",
          "format": "date-time",
          "description": "Data do Pagamento INSS"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoExternoItem"
          }
        }
      }
    },
    "PedidoExternoFatura": {
      "type": "object",
      "properties": {
        "PedidoExterno": {
          "$ref": "#/definitions/PedidoExterno"
        },
        "EmitenteTitulo": {
          "type": "string"
        },
        "TipoTituloCredito": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "CodigoTituloCredito": {
          "type": "string"
        },
        "QuantidadeParcela": {
          "type": "integer",
          "format": "int32"
        },
        "ValorTituloCredito": {
          "type": "number",
          "format": "double"
        },
        "Parcelas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoExternoFaturaParcela"
          }
        }
      }
    },
    "PedidoExternoFaturaParcela": {
      "type": "object",
      "properties": {
        "PedidoExternoFatura": {
          "$ref": "#/definitions/PedidoExternoFatura"
        },
        "NumeroParcela": {
          "type": "integer",
          "format": "int32"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PedidoExternoItem": {
      "type": "object",
      "required": [
        "PedidoExterno",
        "Item",
        "UnidadeMedida",
        "LinhaPedido"
      ],
      "properties": {
        "PedidoExterno": {
          "$ref": "#/definitions/PedidoExterno"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "LinhaPedido": {
          "type": "integer",
          "format": "int32",
          "description": "Número seqüencial do item no pedido externo"
        },
        "DescricaoComplementar": {
          "type": "string",
          "maxLength": 255,
          "description": "Descrição complementar do item como adotado no pedido externo"
        },
        "Lote": {
          "type": "string",
          "maxLength": 50,
          "description": "Número do Lote"
        },
        "QuantidadeItem": {
          "type": "number",
          "format": "double",
          "description": "Quantidade do item - [14 inteiros e 3 decimais]"
        },
        "ValorUnitarioItem": {
          "type": "number",
          "format": "double",
          "description": "Valor Unitário do item - [11 inteiros e 6 decimais]"
        },
        "ValorTotalItem": {
          "type": "number",
          "format": "double",
          "description": "Valor total do item - [11 inteiros e 6 decimais]"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double",
          "description": "Valor do desconto comercial - [15 inteiros e 2 decimais]"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor do Frete - [15 inteiros e 2 decimais]"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double",
          "description": "Valor do Seguro - [15 inteiros e 2 decimais]"
        },
        "ValorDespesas": {
          "type": "number",
          "format": "double",
          "description": "Valor da Despesa - [15 inteiros e 2 decimais]"
        },
        "PesoLiquido": {
          "type": "number",
          "format": "double",
          "description": "Peso Líquido - [11 inteiros e 6 decimais]"
        },
        "PesoBruto": {
          "type": "number",
          "format": "double",
          "description": "Peso Bruto - [11 inteiros e 6 decimais]"
        },
        "Volume": {
          "type": "number",
          "format": "double",
          "description": "Volume - [0 inteiros e 50 decimais]"
        },
        "StatusLinhaPedido": {
          "type": "string",
          "maxLength": 5,
          "description": "Status do Item do Pedido - 0 = Aberto / 1 = Parcial / 2 = Total"
        },
        "SaldoQtdeLinhaPedido": {
          "type": "number",
          "format": "double",
          "description": "Saldo da Quantidade na Linha do Pedido - [11 inteiros e 6 decimais]"
        },
        "Marca": {
          "type": "string",
          "maxLength": 10,
          "description": "Marca utilizada junto do volume carregado"
        },
        "Especie": {
          "type": "string",
          "maxLength": 10,
          "description": "Espécie utilizada junto do volume carregado"
        },
        "InformacaoComplementar": {
          "type": "string",
          "maxLength": 2000,
          "description": "Informação Complementar utilizado junto ao item do pedido"
        },
        "CFOP": {
          "type": "string",
          "maxLength": 4,
          "description": "Código Fiscal de Operação e Prestação"
        },
        "ValorContabilItem": {
          "type": "number",
          "format": "double",
          "description": "Valor Contabil do Item - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoICMSTabA": {
          "type": "string",
          "maxLength": 1,
          "description": "Código da Situação Tributária A referente ao ICMS"
        },
        "CodigoSituacaoICMSTabB": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária B referente ao ICMS"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do ICMS - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS - [3 inteiros e 2 decimais]"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS creditado/debitado - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSTributado": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS tributado – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSIsento": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS isento– utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorBaseICMSOutros": {
          "type": "number",
          "format": "double",
          "description": "Valor base ICMS outros – utilizado para outras obrigações acessórias que não a EFD - [15 inteiros e 2 decimais]"
        },
        "ValorICMSReducao": {
          "type": "number",
          "format": "double",
          "description": "Valor ICMS não tributado em função da redução da base de cálculo ICMS - [15 inteiros e 2 decimais]"
        },
        "AliquotaReducaoICMS": {
          "type": "number",
          "format": "double",
          "description": "Aliquota de redução da base do ICMS - [3 inteiros e 2 decimais]"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo referente à substituição tributária - [15 inteiros e 2 decimais]"
        },
        "AliquotaICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ICMS da substituição tributária na unidade da federação de destino - [3 inteiros e 2 decimais]"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double",
          "description": "Valor do ICMS referente à substituoção tributária - [15 inteiros e 2 decimais]"
        },
        "CodigoSituacaoIPI": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária referente ao IPI"
        },
        "CodigoEnquadraIPI": {
          "type": "string",
          "maxLength": 5,
          "description": "Código da classe de enquadramento do IPI"
        },
        "ValorBaseIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do IPI - [15 inteiros e 2 decimais]"
        },
        "AliquotaIPI": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do IPI - [3 inteiros e 2 decimais]"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor do IPI creditado/debitado - [15 inteiros e 2 decimais]"
        },
        "ValorPautadoIPI": {
          "type": "number",
          "format": "double",
          "description": "Valor por unidade padrão de tributação - [13 inteiros e 4 decimais]"
        },
        "QuantidadePautadaIPI": {
          "type": "number",
          "format": "double",
          "description": "Quantidade total de produtos na unidade padrão de tributação - [14 inteiros e 3 decimais]"
        },
        "CodigoSituacaoPIS": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária referente ao PIS"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do PIS - [15 inteiros e 2 decimais]"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em percentual) - [2 inteiros e 3 decimais]"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double",
          "description": "Valor do PIS - [15 inteiros e 2 decimais]"
        },
        "QuantidadePautadaPIS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo PIS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoPIS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do PIS (em reais) - [13 inteiros e 4 decimais]"
        },
        "CodigoSituacaoCOFINS": {
          "type": "string",
          "maxLength": 2,
          "description": "Código da Situação Tributária referente ao COFINS"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo da COFINS - [15 inteiros e 2 decimais]"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do COFINS (em percentual) - [3 inteiros e 2 decimais]"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Valor da COFINS - [15 inteiros e 2 decimais]"
        },
        "QuantidadePautadaCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Quantidade – Base de cálculo COFINS - [14 inteiros e 3 decimais]"
        },
        "ValorPautadoCOFINS": {
          "type": "number",
          "format": "double",
          "description": "Alíquota da COFINS (em reais) - [13 inteiros e 4 decimais]"
        },
        "ValorBaseISSQN": {
          "type": "number",
          "format": "double",
          "description": "Valor da base de cálculo do ISSQN - [15 inteiros e 2 decimais]"
        },
        "AliquotaISSQN": {
          "type": "number",
          "format": "double",
          "description": "Alíquota do ISSQN - [3 inteiros e 2 decimais]"
        },
        "ValorISSQN": {
          "type": "number",
          "format": "double",
          "description": "Valor do ISSQN - [15 inteiros e 2 decimais]"
        },
        "ValorINSS": {
          "type": "number",
          "format": "double",
          "description": "Valor do INSS - [15 inteiros e 2 decimais]"
        },
        "Importacoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoExternoItemImportacao"
          }
        }
      }
    },
    "PedidoExternoItemImportacao": {
      "type": "object",
      "properties": {
        "PedidoExternoItem": {
          "$ref": "#/definitions/PedidoExternoItem"
        },
        "ParceiroFabricante": {
          "$ref": "#/definitions/Parceiro"
        },
        "ParceiroExportador": {
          "$ref": "#/definitions/Parceiro"
        },
        "SequenciaItemImportacao": {
          "type": "integer",
          "format": "int32"
        },
        "NumeroDI": {
          "type": "string"
        },
        "DataDI": {
          "type": "string",
          "format": "date-time"
        },
        "UFDesembaraco": {
          "type": "string"
        },
        "DataDesembaraco": {
          "type": "string",
          "format": "date-time"
        },
        "LocalDesembaraco": {
          "type": "string"
        },
        "AtoDrawback": {
          "type": "string"
        },
        "NumeroAdicao": {
          "type": "string"
        },
        "SequenciaAdicao": {
          "type": "integer",
          "format": "int32"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double"
        },
        "ViaTransporte": {
          "type": "integer",
          "format": "int32"
        },
        "ValorAdicionalFrete": {
          "type": "number",
          "format": "double"
        },
        "TipoIntermediario": {
          "type": "integer",
          "format": "int32"
        },
        "CNPJIntermediario": {
          "type": "string"
        }
      }
    },
    "PedidoNota": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Parceiro": {
          "$ref": "#/definitions/Parceiro"
        },
        "NaturezaOperacao": {
          "$ref": "#/definitions/NaturezaOperacao"
        },
        "GrupoTensao": {
          "$ref": "#/definitions/GrupoTensao"
        },
        "IDCabecalhoDocFiscal": {
          "type": "integer",
          "format": "int32"
        },
        "CabecalhoDocFiscalNFDev": {
          "$ref": "#/definitions/DocumentoFiscalLight"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "IDPedidoExterno": {
          "type": "integer",
          "format": "int32"
        },
        "Transportadora": {
          "$ref": "#/definitions/Parceiro"
        },
        "EstadoEmbarque": {
          "$ref": "#/definitions/Estado"
        },
        "EstadoVeiculo": {
          "$ref": "#/definitions/Estado"
        },
        "Numero": {
          "type": "integer",
          "format": "int32"
        },
        "DataSolicitacao": {
          "type": "string",
          "format": "date-time"
        },
        "DataPrometida": {
          "type": "string",
          "format": "date-time"
        },
        "TipoDocumento": {
          "type": "string"
        },
        "CodigoSituacao": {
          "type": "string"
        },
        "StatusPedido": {
          "type": "integer",
          "format": "int32"
        },
        "TipoLigacao": {
          "type": "integer",
          "format": "int32"
        },
        "IndConsumidorFinal": {
          "type": "integer",
          "format": "int32"
        },
        "IndPresencaComprador": {
          "type": "integer",
          "format": "int32"
        },
        "RegimeTributario": {
          "type": "integer",
          "format": "int32"
        },
        "FlagDevolucaoFornecedor": {
          "type": "integer",
          "format": "int32"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double"
        },
        "ValorDespesa": {
          "type": "number",
          "format": "double"
        },
        "MeioTransporte": {
          "type": "string"
        },
        "FretePorConta": {
          "type": "string"
        },
        "PlacaVeiculo": {
          "type": "string"
        },
        "RTNC": {
          "type": "string"
        },
        "PaisEmbarque": {
          "$ref": "#/definitions/Pais"
        },
        "LocalEmbarque": {
          "type": "string"
        },
        "LocalDespacho": {
          "type": "string"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseIPI": {
          "type": "number",
          "format": "double"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double"
        },
        "ValorMercadoria": {
          "type": "number",
          "format": "double"
        },
        "ValorTotal": {
          "type": "number",
          "format": "double"
        },
        "ValorTotalServico": {
          "type": "number",
          "format": "double"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaItem"
          }
        },
        "Reboques": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaReboque"
          }
        },
        "Lacres": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaLacre"
          }
        },
        "Volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaVolume"
          }
        },
        "Textos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaTexto"
          }
        },
        "Retencoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaRetencao"
          }
        },
        "Enderecos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaEndereco"
          }
        },
        "DocumentosFiscaisReferenciados": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentoFiscalLight"
          }
        }
      }
    },
    "PedidoNotaDocumentoFiscal": {
      "type": "object",
      "properties": {}
    },
    "PedidoNotaEndereco": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "Tipo": {
          "type": "integer",
          "format": "int32"
        },
        "Codigo": {
          "type": "string"
        },
        "Nome": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "CEP": {
          "type": "integer",
          "format": "int32"
        },
        "Telefone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "PedidoNotaFatura": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "EmitenteTitulo": {
          "type": "string"
        },
        "TipoTituloCredito": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "CodigoTituloCredito": {
          "type": "string"
        },
        "CondicaoPagamento": {
          "$ref": "#/definitions/CondicaoPagamento"
        },
        "QuantidadeParcela": {
          "type": "integer",
          "format": "int32"
        },
        "ValorTituloCredito": {
          "type": "number",
          "format": "double"
        },
        "Parcelas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaFaturaParcela"
          }
        }
      }
    },
    "PedidoNotaFaturaParcela": {
      "type": "object",
      "properties": {
        "PedidoNotaFatura": {
          "$ref": "#/definitions/PedidoNotaFatura"
        },
        "NumeroParcela": {
          "type": "integer",
          "format": "int32"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time"
        },
        "ValorParcela": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PedidoNotaItem": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "IDDocFiscalItem": {
          "type": "integer",
          "format": "int32"
        },
        "NaturezaOperacao": {
          "$ref": "#/definitions/NaturezaOperacao"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "IDPedidoExternoItem": {
          "type": "integer",
          "format": "int32"
        },
        "ClasseImposto": {
          "$ref": "#/definitions/ClasseImposto"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "AtribuicaoPerfilTributacao": {
          "$ref": "#/definitions/AtribuicaoPerfilTributacao"
        },
        "PerfilTributacao": {
          "$ref": "#/definitions/PerfilTributacao"
        },
        "AtribuicaoPerfilContabil": {
          "$ref": "#/definitions/AtribuicaoPerfilContabil"
        },
        "PerfilContabilizacao": {
          "$ref": "#/definitions/PerfilContabilizacao"
        },
        "AtribuicaoAliquotasICMS": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotasICMSSubst": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotasIPI": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotasPIS": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotasCOFINS": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "AtribuicaoAliquotasISSQN": {
          "$ref": "#/definitions/AtribuicaoAliquotas"
        },
        "CFOP": {
          "$ref": "#/definitions/CFOP"
        },
        "NumeroItem": {
          "type": "integer",
          "format": "int32"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DescricaoComplementar": {
          "type": "string"
        },
        "NumeroLote": {
          "type": "string"
        },
        "QuantidadeItem": {
          "type": "number",
          "format": "double"
        },
        "ValorUnidade": {
          "type": "number",
          "format": "double"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double"
        },
        "ValorItem": {
          "type": "number",
          "format": "double"
        },
        "MovimentaItem": {
          "type": "string"
        },
        "PesoLiquido": {
          "type": "number",
          "format": "double"
        },
        "PesoBruto": {
          "type": "number",
          "format": "double"
        },
        "CodServicoMunic": {
          "type": "string"
        },
        "DescServicoMunic": {
          "type": "string"
        },
        "RegistroExportacao": {
          "type": "string"
        },
        "DrawbackExportacao": {
          "type": "string"
        },
        "CodigoSituacaoICMSTabA": {
          "type": "string"
        },
        "CodigoSituacaoICMSTabB": {
          "type": "string"
        },
        "CodigoNaturezaOperacao": {
          "type": "string"
        },
        "ValorBaseICMS": {
          "type": "number",
          "format": "double"
        },
        "AliquotaICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSTributado": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSIsento": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSOutros": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSReducao": {
          "type": "number",
          "format": "double"
        },
        "AliquotaReducaoICMS": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "AliquotaICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSSubst": {
          "type": "number",
          "format": "double"
        },
        "PeriodoApuracaoIPI": {
          "type": "string"
        },
        "CodigoSituacaoIPI": {
          "type": "string"
        },
        "CodigoEnquadraIPI": {
          "type": "string"
        },
        "ValorBaseIPI": {
          "type": "number",
          "format": "double"
        },
        "AliquotaIPI": {
          "type": "number",
          "format": "double"
        },
        "ValorIPI": {
          "type": "number",
          "format": "double"
        },
        "CodigoSeloIPI": {
          "type": "string"
        },
        "QuantidadeSeloIPI": {
          "type": "integer",
          "format": "int32"
        },
        "CodigoClassseIPI": {
          "type": "string"
        },
        "ValorPautadoIPI": {
          "type": "number",
          "format": "double"
        },
        "QuantidadePautadaIPI": {
          "type": "number",
          "format": "double"
        },
        "CodigoSituacaoPIS": {
          "type": "integer",
          "format": "int32"
        },
        "ValorBasePIS": {
          "type": "number",
          "format": "double"
        },
        "AliquotaPIS": {
          "type": "number",
          "format": "double"
        },
        "QuantidadePautadaPIS": {
          "type": "number",
          "format": "double"
        },
        "ValorPautadoPIS": {
          "type": "number",
          "format": "double"
        },
        "ValorPIS": {
          "type": "number",
          "format": "double"
        },
        "CodigoSituacaoCOFINS": {
          "type": "integer",
          "format": "int32"
        },
        "ValorBaseCOFINS": {
          "type": "number",
          "format": "double"
        },
        "AliquotaCOFINS": {
          "type": "number",
          "format": "double"
        },
        "QuantidadePautadaCOFINS": {
          "type": "number",
          "format": "double"
        },
        "ValorPautadoCOFINS": {
          "type": "number",
          "format": "double"
        },
        "ValorCOFINS": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseISSQN": {
          "type": "number",
          "format": "double"
        },
        "AliquotaISSQN": {
          "type": "number",
          "format": "double"
        },
        "ValorISSQN": {
          "type": "number",
          "format": "double"
        },
        "ValorFrete": {
          "type": "number",
          "format": "double"
        },
        "ValorSeguro": {
          "type": "number",
          "format": "double"
        },
        "ValorDespesas": {
          "type": "number",
          "format": "double"
        },
        "DescontoZonaFranca": {
          "type": "number",
          "format": "double"
        },
        "DescontoLivreComercio": {
          "type": "number",
          "format": "double"
        },
        "ValorContabilItem": {
          "type": "number",
          "format": "double"
        },
        "PercentualPartilha": {
          "type": "number",
          "format": "double"
        },
        "PercentualFCP": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSFCP": {
          "type": "number",
          "format": "double"
        },
        "AliquotaInternaDestino": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSDestino": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSOrigem": {
          "type": "number",
          "format": "double"
        },
        "ValorBaseII": {
          "type": "number",
          "format": "double"
        },
        "ValorDespesaAduaneira": {
          "type": "number",
          "format": "double"
        },
        "ValorII": {
          "type": "number",
          "format": "double"
        },
        "AliquotaII": {
          "type": "number",
          "format": "double"
        },
        "ValorIOF": {
          "type": "number",
          "format": "double"
        },
        "NumeroPedidoCliente": {
          "type": "string"
        },
        "LinhaPedidoCliente": {
          "type": "integer",
          "format": "int32"
        },
        "ValorBaseICMSDifal": {
          "type": "number",
          "format": "double"
        },
        "AliquotaICMSDifal": {
          "type": "number",
          "format": "double"
        },
        "ValorICMSDifal": {
          "type": "number",
          "format": "double"
        },
        "CEST": {
          "$ref": "#/definitions/CEST"
        },
        "UnidadesMedidasTributaveisComercioExterior": {
          "$ref": "#/definitions/UnidadesMedidasTributaveisComercioExterior"
        },
        "QuantidadeItemTribComExt": {
          "type": "number",
          "format": "double"
        },
        "ValorUnidadeTribComExt": {
          "type": "number",
          "format": "double"
        },
        "UnidadesMedidasTributaveisComercioExteriorDescricao": {
          "type": "string"
        },
        "Textos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaItemTexto"
          }
        },
        "Contabilizacoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaItemConta"
          }
        },
        "Importacoes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoNotaItemImportacao"
          }
        }
      }
    },
    "PedidoNotaItemConta": {
      "type": "object",
      "properties": {
        "PedidoNotaItem": {
          "$ref": "#/definitions/PedidoNotaItem"
        },
        "TipoConta": {
          "type": "string"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "TipoLancamento": {
          "type": "string"
        },
        "ValorLancamento": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PedidoNotaItemImportacao": {
      "type": "object",
      "properties": {
        "PedidoNotaItem": {
          "$ref": "#/definitions/PedidoNotaItem"
        },
        "ParceiroFabricante": {
          "$ref": "#/definitions/Parceiro"
        },
        "ParceiroExportador": {
          "$ref": "#/definitions/Parceiro"
        },
        "SequenciaItemImportacao": {
          "type": "integer",
          "format": "int32"
        },
        "NumeroDI": {
          "type": "string"
        },
        "DataDI": {
          "type": "string",
          "format": "date-time"
        },
        "UFDesembaraco": {
          "type": "string"
        },
        "DataDesembaraco": {
          "type": "string",
          "format": "date-time"
        },
        "LocalDesembaraco": {
          "type": "string"
        },
        "AtoDrawback": {
          "type": "string"
        },
        "NumeroAdicao": {
          "type": "string"
        },
        "SequenciaAdicao": {
          "type": "integer",
          "format": "int32"
        },
        "ValorDesconto": {
          "type": "number",
          "format": "double"
        },
        "ViaTransporte": {
          "type": "integer",
          "format": "int32"
        },
        "ValorAdicionalFrete": {
          "type": "number",
          "format": "double"
        },
        "TipoIntermediario": {
          "type": "integer",
          "format": "int32"
        },
        "CNPJIntermediario": {
          "type": "string"
        }
      }
    },
    "PedidoNotaItemTexto": {
      "type": "object",
      "properties": {
        "PedidoNotaItem": {
          "$ref": "#/definitions/PedidoNotaItem"
        },
        "InformacaoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "DescricaoComplementar": {
          "type": "string"
        }
      }
    },
    "PedidoNotaLacre": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "Lacre": {
          "type": "string"
        }
      }
    },
    "PedidoNotaReboque": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "RTNCReboque": {
          "type": "string"
        },
        "PlacaReboque": {
          "type": "string"
        },
        "EstadoReboque": {
          "$ref": "#/definitions/Estado"
        }
      }
    },
    "PedidoNotaRetencao": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "AtribuicaoAliquotasRetencao": {
          "$ref": "#/definitions/AtribuicaoAliquotasRetencao"
        },
        "DataPagamento": {
          "type": "string",
          "format": "date-time"
        },
        "CodigoReceita": {
          "type": "string"
        },
        "ValorBaseRetencao": {
          "type": "number",
          "format": "double"
        },
        "AliquotaRetencao": {
          "type": "number",
          "format": "double"
        },
        "ValorRetido": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PedidoNotaTexto": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "InformacaoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "DescricaoComplementar": {
          "type": "string"
        }
      }
    },
    "PedidoNotaVolume": {
      "type": "object",
      "properties": {
        "PedidoNota": {
          "$ref": "#/definitions/PedidoNota"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Quantidade": {
          "type": "number",
          "format": "double"
        },
        "Especie": {
          "type": "string"
        },
        "Marca": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "PesoBruto": {
          "type": "number",
          "format": "double"
        },
        "PesoLiquido": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PerfilContabilizacao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "EntradaSaida": {
          "type": "string"
        },
        "PartidaContabilFrete": {
          "$ref": "#/definitions/PartidaContabil"
        },
        "PartidaContabilSeguro": {
          "$ref": "#/definitions/PartidaContabil"
        },
        "PartidaContabilDespesas": {
          "$ref": "#/definitions/PartidaContabil"
        },
        "PartidaContabilCustos": {
          "$ref": "#/definitions/PartidaContabil"
        },
        "PartidaContabilComVen": {
          "$ref": "#/definitions/PartidaContabil"
        },
        "PerfilContabilizacaoImp": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfilContabilizacaoImp"
          }
        }
      }
    },
    "PerfilContabilizacaoImp": {
      "type": "object",
      "properties": {
        "PerfilContabilizacao": {
          "$ref": "#/definitions/PerfilContabilizacao"
        },
        "Imposto": {
          "$ref": "#/definitions/Imposto"
        },
        "PartidaContabil": {
          "$ref": "#/definitions/PartidaContabil"
        },
        "PartidaContabilValor": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PerfilIncidenciaImposto": {
      "type": "object",
      "properties": {
        "PerfilTributacao": {
          "$ref": "#/definitions/PerfilTributacao"
        },
        "Imposto": {
          "$ref": "#/definitions/Imposto"
        },
        "IndicadorTributacao": {
          "type": "string"
        },
        "FlagAplicaII": {
          "type": "boolean"
        },
        "FlagAplicaIE": {
          "type": "boolean"
        },
        "FlagAplicaICMS": {
          "type": "boolean"
        },
        "FlagAplicaIPI": {
          "type": "boolean"
        },
        "FlagAplicaPIS": {
          "type": "boolean"
        },
        "FlagAplicaCOFINS": {
          "type": "boolean"
        },
        "FlagAplicaMercadoria": {
          "type": "boolean"
        },
        "FlagAplicaFrete": {
          "type": "boolean"
        },
        "FlagAplicaSeguro": {
          "type": "boolean"
        },
        "FlagAplicaDespesas": {
          "type": "boolean"
        },
        "FlagAplicaDesconto": {
          "type": "boolean"
        },
        "FlagAplicaMarkup": {
          "type": "boolean"
        },
        "FlagSomaTotalNota": {
          "type": "boolean"
        },
        "FlagSubtraiTotalNota": {
          "type": "boolean"
        },
        "FlagOperacaoEmitente": {
          "type": "boolean"
        },
        "FlagOperacaoDestinatario": {
          "type": "boolean"
        },
        "FlagMunEmitente": {
          "type": "boolean"
        },
        "FlagMunDestinatario": {
          "type": "boolean"
        },
        "FlagTranspDespesas": {
          "type": "boolean"
        },
        "FlagSubtraiINSS": {
          "type": "boolean"
        }
      }
    },
    "PerfilOperacaoFiscal": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "EntradaSaida": {
          "type": "string"
        },
        "CriterioRateioEncargo": {
          "type": "string"
        },
        "FlagContasReceber": {
          "type": "string"
        },
        "FlagContasPagar": {
          "type": "string"
        },
        "FlagLivroFiscal": {
          "type": "string"
        },
        "FlagContabilidade": {
          "type": "string"
        },
        "FlagAnaliseVendas": {
          "type": "string"
        },
        "FlagEDIDestinatario": {
          "type": "string"
        },
        "FlagMovimentaEstoque": {
          "type": "string"
        },
        "FlagDevolucaoCliente": {
          "type": "string"
        },
        "FlagTransferencia": {
          "type": "string"
        },
        "FlagGeraRecComercial": {
          "type": "string"
        },
        "FlagDiferencialAliquota": {
          "type": "string"
        },
        "FlagImportacao": {
          "type": "string"
        },
        "FlagSaldoFiscal": {
          "type": "string"
        },
        "FlagCalculaCustoVenda": {
          "type": "string"
        },
        "NotasAcobertadas": {
          "type": "string"
        }
      }
    },
    "PerfilTributacao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "EntradaSaida": {
          "type": "string"
        },
        "FlagEspecie": {
          "type": "string"
        },
        "CodigoSituacaoICMS": {
          "type": "string"
        },
        "CodigoSituacaoIPI": {
          "type": "string"
        },
        "CodigoSituacaoPIS": {
          "type": "string"
        },
        "CodigoSituacaoCOFINS": {
          "type": "string"
        },
        "InformacoesComplementares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfilTributacaoImpTexto"
          }
        },
        "IncidenciaImpostos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfilIncidenciaImposto"
          }
        }
      }
    },
    "PerfilTributacaoImpTexto": {
      "type": "object",
      "properties": {
        "PerfilTributacao": {
          "$ref": "#/definitions/PerfilTributacao"
        },
        "InformacaoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        }
      }
    },
    "Permissao": {
      "type": "object",
      "properties": {
        "RotaAcaoRota": {
          "$ref": "#/definitions/RotaAcaoRota"
        },
        "GrupoUsuario": {
          "$ref": "#/definitions/GrupoUsuario"
        }
      }
    },
    "PlanoConta": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "DataAtualizacaoSistContabil",
        "Descricao",
        "IndicadorTipoConta",
        "Nivel",
        "NaturezaConta"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 28,
          "description": "Código da Conta analítica / Grupo de Contas"
        },
        "DataAtualizacaoSistContabil": {
          "type": "string",
          "format": "date-time",
          "description": "Data da inclusão / alteração"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição da  Conta analítica / Grupo de Contas"
        },
        "IndicadorTipoConta": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do Tipo de Conta"
        },
        "Nivel": {
          "type": "integer",
          "format": "int32",
          "description": "Nível da conta analítica / grupo de contas"
        },
        "NaturezaConta": {
          "$ref": "#/definitions/NaturezaConta"
        },
        "GrupoContabil": {
          "$ref": "#/definitions/GrupoContabil"
        },
        "DataEfetividadeDe": {
          "type": "string",
          "format": "date-time",
          "description": "Data de início de efetividade da conta contábil"
        },
        "DataEfetividadeAte": {
          "type": "string",
          "format": "date-time",
          "description": "Data de término de efetividade da conta contábil"
        }
      }
    },
    "PlanoContaReferenciado": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "InicioValidade": {
          "type": "string",
          "format": "date-time"
        },
        "FimValidade": {
          "type": "string",
          "format": "date-time"
        },
        "Tipo": {
          "type": "string"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "ContaSuperior": {
          "type": "string"
        },
        "Nivel": {
          "type": "integer",
          "format": "int32"
        },
        "Natureza": {
          "type": "string"
        }
      }
    },
    "ProcessoReferenciado": {
      "type": "object",
      "required": [
        "CabecalhoDocFiscal",
        "InfoComplementar",
        "NumeroProcesso"
      ],
      "properties": {
        "CabecalhoDocFiscal": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "InfoComplementar": {
          "$ref": "#/definitions/InformacaoComplementar"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 30,
          "description": "Identificação do processo ou ato concessório"
        },
        "OrigemProcesso": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador da origem do processo"
        }
      }
    },
    "ProcessoReferenciadoAcaoJudicial": {
      "type": "object",
      "required": [
        "PeriodoEscrituracao",
        "NumeroProcesso",
        "SecaoJudiciaria",
        "IdentificacaoVara",
        "IndicadorNaturezaAcaoJudicial"
      ],
      "properties": {
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período Escrituração"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 20,
          "description": "Identificação do Número do Processo Judicial"
        },
        "SecaoJudiciaria": {
          "type": "string",
          "maxLength": 255,
          "description": "Identificação da Seção Judiciária"
        },
        "IdentificacaoVara": {
          "type": "string",
          "maxLength": 2,
          "description": "Identificação da Vara"
        },
        "IndicadorNaturezaAcaoJudicial": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador da Natureza da Ação Judicial, impetrada na Justiça Federal"
        },
        "DescricaoResumidaEfeitosTributarios": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição Resumida dos Efeitos Tributários abrangidos pela Decisão Judicial proferida."
        },
        "DataSentencaDecisaoJudicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data da Sentença/Decisão Judicial"
        }
      }
    },
    "ProcessoReferenciadoContribuicaoPrevidenciario": {
      "type": "object",
      "required": [
        "ApuracaoContribuicaoPrevidenciaria",
        "NumeroProcessoRefereciado",
        "IndicadorOrigemProcessoReferenciado"
      ],
      "properties": {
        "ApuracaoContribuicaoPrevidenciaria": {
          "$ref": "#/definitions/ApuracaoContribuicaoPrevidenciaria"
        },
        "NumeroProcessoRefereciado": {
          "type": "string",
          "maxLength": 20,
          "description": "Num Proc Ref"
        },
        "IndicadorOrigemProcessoReferenciado": {
          "type": "string",
          "maxLength": 1,
          "description": "Ind Ori Proc Ref"
        }
      }
    },
    "ProcessoReferenciadoLancamentoBLalurLacs": {
      "type": "object",
      "properties": {
        "LancamentoContabilParteBLalurLacs": {
          "$ref": "#/definitions/LancamentoContabilParteBLALURLACS"
        },
        "TipoProcesso": {
          "type": "string"
        },
        "NumeroProcesso": {
          "type": "string"
        }
      }
    },
    "ProcessoReferenciadoLancamentoLalurLacs": {
      "type": "object",
      "properties": {
        "LancamentoParteALalurLacs": {
          "$ref": "#/definitions/LancamentoParteALalurLacs"
        },
        "TipoProcesso": {
          "type": "string"
        },
        "NumeroProcesso": {
          "type": "string"
        }
      }
    },
    "ProcessoReferenciadoProcessoAdministrativo": {
      "type": "object",
      "required": [
        "PeriodoEscrituracao",
        "Numero",
        "IndicadorNaturezaAcao",
        "DataDespachoDecisaoAdministrativa"
      ],
      "properties": {
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período Escrituração"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Numero": {
          "type": "string",
          "maxLength": 20,
          "description": "Identificação do Processo Administrativo ou da Decisão Administrativa"
        },
        "IndicadorNaturezaAcao": {
          "type": "string",
          "maxLength": 2,
          "description": "Indicador da Natureza da Ação, decorrente de Processo Administrativo na Secretaria da Receita Federal do Brasil"
        },
        "DataDespachoDecisaoAdministrativa": {
          "type": "string",
          "format": "date-time",
          "description": "Data do despacho / Decisão Administrativa"
        }
      }
    },
    "ProductVersion": {
      "type": "object",
      "properties": {
        "SoftwareVersion": {
          "type": "string"
        },
        "ConfigurationVersion": {
          "type": "string"
        },
        "UpdateDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Provento": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Usuario": {
          "$ref": "#/definitions/Usuario"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 3,
          "description": "Código do Provento"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 45,
          "description": "Descrição do Provento"
        }
      }
    },
    "QualificacaoAssinante": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "QualificacaoSocioTitular": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicioValidade": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimValidade": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RazaoAuxiliarSubConta": {
      "type": "object",
      "required": [
        "Companhia",
        "NaturezaSubConta",
        "SubConta",
        "CodigoPatrimonioItem",
        "QuantidadeItem",
        "IdentificacaoItem",
        "DescricaoItem",
        "DataRecebimentoInicial",
        "SaldoInicialItem",
        "IndicadorSaldoInicialItem",
        "RealizacaoItem",
        "IndicadorRealizacaoItem",
        "SaldoFinalItem",
        "IndicadorSaldoFinalItem",
        "SaldoInicialSubConta",
        "IndicadorSaldoInicialSubConta",
        "DebitoSubConta",
        "CreditoSubConta",
        "SaldoFimSubConta",
        "IndicadorSaldoFinalSubConta",
        "DataLancamento",
        "NumeroLancamento",
        "ValorLancamento",
        "IndicadorValorLancamento",
        "IndicadorAdocaoInicial",
        "Periodo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "NaturezaSubConta": {
          "$ref": "#/definitions/NaturezaSubConta"
        },
        "SubConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "CNPJInvestida": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ Investida"
        },
        "CodigoPatrimonioItem": {
          "type": "string",
          "maxLength": 10,
          "description": "Código Patrimônio Item"
        },
        "QuantidadeItem": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade Item"
        },
        "IdentificacaoItem": {
          "type": "string",
          "maxLength": 30,
          "description": "Identidade Item"
        },
        "DescricaoItem": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição Item"
        },
        "DataRecebimentoInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Recebimento Item"
        },
        "SaldoInicialItem": {
          "type": "number",
          "format": "double",
          "description": "Saldo Inicial Item - [17 inteiros e 2 decimais]"
        },
        "IndicadorSaldoInicialItem": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Saldo Inicial Item: D (Débito) ou C (Crédito)"
        },
        "RealizacaoItem": {
          "type": "number",
          "format": "double",
          "description": "Real Item - [17 inteiros e 2 decimais]"
        },
        "IndicadorRealizacaoItem": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Real Item: D (Débito) ou C (Crédito)"
        },
        "SaldoFinalItem": {
          "type": "number",
          "format": "double",
          "description": "Saldo Final Item - [17 inteiros e 2 decimais]"
        },
        "IndicadorSaldoFinalItem": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Saldo Final Item: D (Débito) ou C (Crédito)"
        },
        "SaldoInicialSubConta": {
          "type": "number",
          "format": "double",
          "description": "Saldo Inicial Sub Conta - [17 inteiros e 2 decimais]"
        },
        "IndicadorSaldoInicialSubConta": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Saldo Inicial Sub Conta: D (Débito) ou C (Crédito)"
        },
        "DebitoSubConta": {
          "type": "number",
          "format": "double",
          "description": "Débito Sub Conta - [17 inteiros e 2 decimais]"
        },
        "CreditoSubConta": {
          "type": "number",
          "format": "double",
          "description": "Crédito Sub Conta - [17 inteiros e 2 decimais]"
        },
        "SaldoFimSubConta": {
          "type": "number",
          "format": "double",
          "description": "Saldo Final Sub Conta - [17 inteiros e 2 decimais]"
        },
        "IndicadorSaldoFinalSubConta": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Saldo Final Sub Conta: D (Débito) ou C (Crédito)"
        },
        "DataLancamento": {
          "type": "string",
          "format": "date-time",
          "description": "Data Lançamento"
        },
        "NumeroLancamento": {
          "type": "string",
          "maxLength": 20,
          "description": "Número Lançamento"
        },
        "ValorLancamento": {
          "type": "number",
          "format": "double",
          "description": "Valor Lançamento - [17 inteiros e 2 decimais]"
        },
        "IndicadorValorLancamento": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Valor Lançamento: D (Débito) ou C (Crédito)"
        },
        "IndicadorAdocaoInicial": {
          "type": "integer",
          "enum": [
            "1",
            "2"
          ],
          "format": "int32",
          "description": "Indicador Adoção Inicial: 1 (Sim) ou 2 (Não)"
        },
        "Periodo": {
          "type": "string",
          "maxLength": 6,
          "description": "Período"
        }
      }
    },
    "ReceitaVendasCNAE": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time"
        },
        "DataFim": {
          "type": "string",
          "format": "date-time"
        },
        "CNAE": {
          "$ref": "#/definitions/CNAE"
        },
        "CNPJ": {
          "type": "string"
        },
        "ReceitaVendas": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Reducao": {
      "type": "object",
      "required": [
        "EquipamentoECF",
        "NumeroCaixa",
        "DataMovimentacao",
        "NumeroFimDia"
      ],
      "properties": {
        "EquipamentoECF": {
          "$ref": "#/definitions/EquipamentoECF"
        },
        "NumeroCaixa": {
          "type": "integer",
          "format": "int32",
          "description": "Número do caixa atribuido ao ECF"
        },
        "DataMovimentacao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Movimento a que se refere a Redução Z"
        },
        "ContadorReinicioOperacao": {
          "type": "integer",
          "format": "int32",
          "description": "Posição do Contador de Reinicio de Operação"
        },
        "ContadorReducaoOperacao": {
          "type": "integer",
          "format": "int32",
          "description": "Posição do Contador de Redução Z"
        },
        "NumeroFimDia": {
          "type": "integer",
          "format": "int32",
          "description": "Número do Contador de Ordem de operação do último documento emitido no dia (Número do COO na Redução Z)"
        },
        "ValorTotal": {
          "type": "number",
          "format": "double",
          "description": "Valor do grande total final - [15 inteiros e 2 decimais]"
        },
        "ValorBruto": {
          "type": "number",
          "format": "double",
          "description": "Valor da Venda bruta - [15 inteiros e 2 decimais]"
        },
        "NumeroInicioDia": {
          "type": "integer",
          "format": "int32",
          "description": "Número do Contador de Ordem de operação do primeiro documento emitido no dia (Número do COO na Redução Z)"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período de Escrituração"
        },
        "ReducoesParciais": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReducaoParcial"
          }
        }
      }
    },
    "ReducaoParcial": {
      "type": "object",
      "required": [
        "Reducao",
        "CodigoTotalizador",
        "EquipamentoECF"
      ],
      "properties": {
        "Reducao": {
          "$ref": "#/definitions/Reducao"
        },
        "CodigoTotalizador": {
          "type": "string",
          "maxLength": 10,
          "description": "Código do totalizador, conforme tabela 4.4.6 do SPED"
        },
        "NumeroTotalizador": {
          "type": "integer",
          "format": "int32",
          "description": "Número do totalizador quando ocorrer mais de uma situação com a mesma carga tributária"
        },
        "DescricaoTotalizador": {
          "type": "string",
          "maxLength": 100,
          "description": "Descrição da situação tributária relativa ao totalizador parcial, quando houver mais de um com a mesma carga tributária efetiva."
        },
        "ValorAcumulado": {
          "type": "number",
          "format": "double",
          "description": "Valor Acumulado a que se refere a Redução Z - [15 inteiros e 2 decimais]"
        },
        "EquipamentoECF": {
          "$ref": "#/definitions/EquipamentoECF"
        }
      }
    },
    "RegraValidacao": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Nome": {
          "type": "string"
        },
        "NomeTabela": {
          "type": "string"
        },
        "NomeCampo": {
          "type": "string"
        },
        "Customizavel": {
          "type": "boolean"
        },
        "RegraMaster": {
          "type": "boolean"
        },
        "RegraValidacaoMaster": {
          "$ref": "#/definitions/RegraValidacao"
        },
        "Ativa": {
          "type": "boolean"
        },
        "Mensagem": {
          "type": "string"
        },
        "Severidade": {
          "type": "string",
          "enum": [
            "Baixa",
            "Alta"
          ]
        },
        "GrupoConfiguracao": {
          "type": "string",
          "enum": [
            "Campo",
            "Conteudo",
            "Integridade"
          ]
        }
      }
    },
    "RegraValidacaoCampo": {
      "type": "object",
      "properties": {
        "RegraValidacao": {
          "$ref": "#/definitions/RegraValidacao"
        },
        "TipoValidacaoCampo": {
          "type": "string",
          "enum": [
            "Obrigatoriedade",
            "TipoDado",
            "Tamanho"
          ]
        },
        "Obrigatorio": {
          "type": "boolean"
        },
        "TipoCampo": {
          "type": "string",
          "enum": [
            "Numerico",
            "Texto",
            "Data",
            "Decimal"
          ]
        },
        "Tamanho": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RegraValidacaoConteudo": {
      "type": "object",
      "properties": {
        "RegraValidacao": {
          "$ref": "#/definitions/RegraValidacao"
        },
        "TipoValidacaoConteudo": {
          "type": "string",
          "enum": [
            "Condicao",
            "RegraSistema"
          ]
        },
        "Condicao": {
          "type": "string",
          "enum": [
            "Equal",
            "NotEqual",
            "GreaterThan",
            "GreaterThanOrEqual",
            "LessThan",
            "LessThanOrEqual",
            "In",
            "NotIn"
          ]
        },
        "Valor": {
          "type": "string"
        },
        "RegraSistema": {
          "type": "string",
          "enum": [
            "CNPJ",
            "CPF"
          ]
        },
        "RegraParametros": {
          "type": "string"
        },
        "RegraCampos": {
          "type": "string"
        }
      }
    },
    "RegraValidacaoIntegridade": {
      "type": "object",
      "properties": {
        "RegraValidacao": {
          "$ref": "#/definitions/RegraValidacao"
        },
        "Tabela1": {
          "type": "string"
        },
        "Campo1": {
          "type": "string"
        },
        "Tabela2": {
          "type": "string"
        },
        "Campo2": {
          "type": "string"
        }
      }
    },
    "RelacionamentoContaContabilLalurLacs": {
      "type": "object",
      "properties": {
        "LancamentoParteALalurLacs": {
          "$ref": "#/definitions/LancamentoParteALalurLacs"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "ValorConta": {
          "type": "number",
          "format": "double"
        },
        "IndValorConta": {
          "type": "string"
        },
        "RelacionamentoLancamentoContabilLalurLacs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelacionamentoLancamentoContabilLalurLacs"
          }
        }
      }
    },
    "RelacionamentoContaParteBLalurLacs": {
      "type": "object",
      "properties": {
        "LancamentoParteALalurLacs": {
          "$ref": "#/definitions/LancamentoParteALalurLacs"
        },
        "ContaParteBLALURLACS": {
          "$ref": "#/definitions/ContaParteBLALURLACS"
        },
        "ValorLancamento": {
          "type": "number",
          "format": "double"
        },
        "IndValorLancamento": {
          "type": "string"
        }
      }
    },
    "RelacionamentoLancamentoContabilLalurLacs": {
      "type": "object",
      "properties": {
        "RelacionamentoContaContabilLalurLacs": {
          "$ref": "#/definitions/RelacionamentoContaContabilLalurLacs"
        },
        "NumeroLancamento": {
          "type": "string"
        }
      }
    },
    "Relatorio": {
      "type": "object",
      "properties": {
        "IDRelatorioParametro": {
          "type": "integer",
          "format": "int32"
        },
        "IDUsuario": {
          "type": "integer",
          "format": "int32"
        },
        "Nome": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Ativo": {
          "type": "boolean"
        },
        "TipoRelatorio": {
          "type": "integer",
          "format": "int32"
        },
        "Categoria": {
          "type": "integer",
          "format": "int32"
        },
        "Arquivo": {
          "type": "string",
          "format": "binary"
        }
      }
    },
    "RelatorioParametro": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Valor": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        },
        "TipoRelatorio": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RendimentoDirigenteConselheiroSocioTitular": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time"
        },
        "DataFim": {
          "type": "string",
          "format": "date-time"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "IndPessoaFisicaJuridica": {
          "type": "string"
        },
        "CNPJCPF": {
          "type": "string"
        },
        "NomeSocioTitular": {
          "type": "string"
        },
        "QualificacaoSocioTitular": {
          "$ref": "#/definitions/QualificacaoSocioTitular"
        },
        "Rendimentos": {
          "type": "number",
          "format": "double"
        },
        "LucrosDividendos": {
          "type": "number",
          "format": "double"
        },
        "JurosCapitalProprio": {
          "type": "number",
          "format": "double"
        },
        "DemaisRendimentos": {
          "type": "number",
          "format": "double"
        },
        "IRRetidoFonte": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RendimentosDirigentesConselheiros": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "CPF",
        "Nome",
        "Qualificacao",
        "RendimentosTrabalho",
        "DemaisRendimentos",
        "IRRetidoFonte"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "CPF": {
          "type": "string",
          "maxLength": 11,
          "description": "CPF"
        },
        "Nome": {
          "type": "string",
          "maxLength": 255,
          "description": "Nome"
        },
        "Qualificacao": {
          "type": "integer",
          "format": "int32",
          "description": "Qualificação"
        },
        "RendimentosTrabalho": {
          "type": "number",
          "format": "double",
          "description": "Rendimentos do trabalho - [17 inteiros e 2 decimais]"
        },
        "DemaisRendimentos": {
          "type": "number",
          "format": "double",
          "description": "Demais rendimentos - [17 inteiros e 2 decimais]"
        },
        "IRRetidoFonte": {
          "type": "number",
          "format": "double",
          "description": "IR retido na fonte - [17 inteiros e 2 decimais]"
        }
      }
    },
    "ReprocessamentoReparoConsumo": {
      "type": "object",
      "required": [
        "ReprocessamentoReparoProduto",
        "Item"
      ],
      "properties": {
        "ReprocessamentoReparoProduto": {
          "$ref": "#/definitions/ReprocessamentoReparoProduto"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "QuantidadeConsumida": {
          "type": "number",
          "format": "double",
          "description": "Quantidade consumida - saida do estoque - [16 inteiros e 3 decimais]"
        },
        "QuantidadeRetornada": {
          "type": "number",
          "format": "double",
          "description": "Quantidade retornada  - entrada em estoque - [16 inteiros e 3 decimais]"
        }
      }
    },
    "ReprocessamentoReparoProduto": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "PeriodoEscrituracao",
        "Item",
        "QuantidadeSaida"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Periodo da escrituração"
        },
        "CodigoOPOS": {
          "type": "string",
          "maxLength": 30,
          "description": "Código da ordem produção/serviço"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "DataSaida": {
          "type": "string",
          "format": "date-time",
          "description": "Data de saida do estoque"
        },
        "QuantidadeSaida": {
          "type": "number",
          "format": "double",
          "description": "Quantidade  saida do estoque - [16 inteiros e 3 decimais]"
        },
        "DataRetorno": {
          "type": "string",
          "format": "date-time",
          "description": "Data de retorno ao estoque (entrada)"
        },
        "QuantidadeRetorno": {
          "type": "number",
          "format": "double",
          "description": "Quantidade de retorno ao estoque (entrada) - [16 inteiros e 3 decimais]"
        },
        "ReprocessamentoReparoConsumo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReprocessamentoReparoConsumo"
          }
        }
      }
    },
    "ResponsavelArquivoDigital": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabFiscal",
        "Nome",
        "Cargo",
        "DataIniServ",
        "DataFinServ"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Nome": {
          "type": "string",
          "maxLength": 50,
          "description": "Nome da Empresa ou Reponsável pelo Arquivo"
        },
        "Cargo": {
          "type": "string",
          "maxLength": 50,
          "description": "Cargo"
        },
        "DataIniServ": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Início da Prestação de Serviço"
        },
        "DataFinServ": {
          "type": "string",
          "format": "date-time",
          "description": "Data de Término da Prestação de Serviço"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ"
        },
        "CPF": {
          "type": "string",
          "maxLength": 12,
          "description": "CPF"
        },
        "Telefone": {
          "type": "string",
          "maxLength": 20,
          "description": "Telefone"
        },
        "FAX": {
          "type": "string",
          "maxLength": 20,
          "description": "Fax"
        },
        "Email": {
          "type": "string",
          "maxLength": 50,
          "description": "E-mail"
        }
      }
    },
    "Rota": {
      "type": "object",
      "properties": {
        "Route": {
          "type": "string"
        },
        "Actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcaoRota"
          }
        }
      }
    },
    "RotaAcaoRota": {
      "type": "object",
      "properties": {
        "Rota": {
          "$ref": "#/definitions/Rota"
        },
        "AcaoRota": {
          "$ref": "#/definitions/AcaoRota"
        }
      }
    },
    "RoyaltiesRecebidosPagosBREX": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Pais",
        "TipoRoyalties",
        "DataInicial"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "TipoRoyalties": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de Homepage Disponível"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "ValorRelativosSoftware": {
          "type": "number",
          "format": "double",
          "description": "Valor da Exploração/Econômica dos Direitos/Patrimoniais do Autor Relativos a Software - [16 inteiros e 2 decimais]"
        },
        "ValorExcetoSoftware": {
          "type": "number",
          "format": "double",
          "description": "Valor da Exploração/Econômica dos Direitos/Patrimoniais do Autor, exceto Software - [17 inteiros e 2 decimais]"
        },
        "ValorMarcas": {
          "type": "number",
          "format": "double",
          "description": "Valor da Exploração/Econômica dos Direitos/Patrimoniais de Marcas - [17 inteiros e 2 decimais]"
        },
        "ValorDesenhoIndustrial": {
          "type": "number",
          "format": "double",
          "description": "Valor da exploração econômica dos direitos patrimoniais de patentes e de desenho industrial - [17 inteiros e 2 decimais]"
        },
        "ValorExploracaoKnowHow": {
          "type": "number",
          "format": "double",
          "description": "Valor da exploração de know-how - [17 inteiros e 2 decimais]"
        },
        "ValorExploracaoFranquias": {
          "type": "number",
          "format": "double",
          "description": "Valor da exploração de franquias - [17 inteiros e 2 decimais]"
        },
        "ValorPropriedadeIntelectual": {
          "type": "number",
          "format": "double",
          "description": "Valor da exploração dos direitos relativos à propriedade intelectual referente a cultivares - [17 inteiros e 2 decimais]"
        }
      }
    },
    "SaldoContabil": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "PlanoConta",
        "DataPeriodo",
        "SituacaoSaldoInicial",
        "SituacaoSaldoFinal",
        "TipoSaldo"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "PlanoConta": {
          "$ref": "#/definitions/PlanoConta"
        },
        "DataPeriodo": {
          "type": "string",
          "maxLength": 6,
          "description": "Período. Formato AAAAMM"
        },
        "SaldoInicialPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Saldo Inicial no periodo - [15 inteiros e 2 decimais]"
        },
        "SituacaoSaldoInicial": {
          "type": "string",
          "maxLength": 1,
          "description": "Situacao do Saldo no inicio do periodo"
        },
        "ValorDebitoPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Valor de Debitos no periodo - [15 inteiros e 2 decimais]"
        },
        "ValorCreditoPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Valor de Creditos no periodo - [15 inteiros e 2 decimais]"
        },
        "SaldoFinalPeriodo": {
          "type": "number",
          "format": "double",
          "description": "Saldo Final no periodo - [15 inteiros e 2 decimais]"
        },
        "SituacaoSaldoFinal": {
          "type": "string",
          "maxLength": 1,
          "description": "Situacao do Saldo no final do período"
        },
        "TipoSaldo": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo do saldo. Valores: N – normal & E – antes do encerramento"
        },
        "SaldoInicialAuxiliar": {
          "type": "number",
          "format": "double",
          "description": "Saldo Inicial Auxiliar - [17 inteiros e 2 decimais]"
        },
        "IndicadorDebitoCreditoInicialAuxiliar": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Débito/Crédito Inicial Auxiliar. Valores válidos: D, C"
        },
        "ValorDebitoAuxiliar": {
          "type": "number",
          "format": "double",
          "description": "Valor Débito Auxiliar - [17 inteiros e 2 decimais]"
        },
        "ValorCreditoAuxiliar": {
          "type": "number",
          "format": "double",
          "description": "Valor Crédito Auxiliar - [17 inteiros e 2 decimais]"
        },
        "SaldoFinalAuxiliar": {
          "type": "number",
          "format": "double",
          "description": "Saldo Final Auxiliar - [17 inteiros e 2 decimais]"
        },
        "IndicadorDebitoCreditoFinalAuxiliar": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Débito/Crédito Final Auxiliar. Valores válidos: D, C"
        }
      }
    },
    "SaldoFechamento": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "UnidadeMedida",
        "Item",
        "Ano",
        "Mes"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "UnidadeMedida": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Ano": {
          "type": "string",
          "maxLength": 4,
          "description": "Ano a que se refere o saldo de inventário"
        },
        "Mes": {
          "type": "string",
          "maxLength": 2,
          "description": "Mês a que se refere o saldo de inventário"
        },
        "SaldoFinalQuantidade": {
          "type": "number",
          "format": "double",
          "description": "Saldo Final - quantidade - [14 inteiros e 3 decimais]"
        },
        "SaldoFinalValor": {
          "type": "number",
          "format": "double",
          "description": "Saldo Final - valor - [15 inteiros e 2 decimais]"
        },
        "CustoUnitario": {
          "type": "number",
          "format": "double",
          "description": "Custo unitário - [12 inteiros e 5 decimais]"
        }
      }
    },
    "SeloIPI": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Cor": {
          "type": "string"
        }
      }
    },
    "SerieDocumento": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "NumeroDocumento": {
          "type": "number",
          "format": "double"
        },
        "LinhaDocumento": {
          "type": "number",
          "format": "double"
        },
        "FlagNotaFiscalFatura": {
          "type": "string"
        },
        "FlagImprimeEnderecoEmit": {
          "type": "string"
        },
        "FlagImprimeSerie": {
          "type": "string"
        },
        "FlagImprimeDataHora": {
          "type": "string"
        },
        "Modelo": {
          "$ref": "#/definitions/Modelo"
        },
        "CodigoModelo": {
          "type": "string"
        }
      }
    },
    "ServicoFederalXMunicipal": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "ListaServico": {
          "$ref": "#/definitions/ListaServico"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "CodServicoMunicipal": {
          "type": "string"
        },
        "DescServicoMunicipal": {
          "type": "string"
        }
      }
    },
    "Signatario": {
      "type": "object",
      "properties": {
        "QualificacaoAssinante": {
          "$ref": "#/definitions/QualificacaoAssinante"
        },
        "EstadoCaixaPostal": {
          "$ref": "#/definitions/Estado"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "EstadoCRCExpedidor": {
          "$ref": "#/definitions/Estado"
        },
        "Nome": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "CRC": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "DDD": {
          "type": "string"
        },
        "Telefone": {
          "type": "string"
        },
        "Ramal": {
          "type": "string"
        },
        "DDDFax": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "RG": {
          "type": "string"
        },
        "CaixaPostal": {
          "type": "string"
        },
        "CEPCaixaPostal": {
          "type": "string"
        },
        "Cargo": {
          "type": "string"
        },
        "NumeracaoSequencialCRC": {
          "type": "string"
        },
        "DataValDeclHabiliProfiContabil": {
          "type": "string",
          "format": "date-time"
        },
        "IndValidacaoRespRFB": {
          "type": "string"
        }
      }
    },
    "SignatarioEstabelecimentoFiscal": {
      "type": "object",
      "properties": {
        "Signatario": {
          "$ref": "#/definitions/Signatario"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SituacaoTributariaCOFINS": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SituacaoTributariaICMSTabA": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SituacaoTributariaICMSTabB": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SituacaoTributariaIPI": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SituacaoTributariaPIS": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SocioTitular": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "DataAlteracaoContrato": {
          "type": "string",
          "format": "date-time"
        },
        "DataFimSocietario": {
          "type": "string",
          "format": "date-time"
        },
        "Pais": {
          "$ref": "#/definitions/Pais"
        },
        "IndicadorQualificacaoSocio": {
          "type": "string"
        },
        "CNPJCPF": {
          "type": "string"
        },
        "NomeSocioTitular": {
          "type": "string"
        },
        "QualificacaoSocioTitular": {
          "$ref": "#/definitions/QualificacaoSocioTitular"
        },
        "PercentualCapitalTotal": {
          "type": "number",
          "format": "double"
        },
        "PercentualCapitalVotante": {
          "type": "number",
          "format": "double"
        },
        "CPFRepresentanteLegal": {
          "type": "string"
        },
        "QualificacaoRepresentanteLegal": {
          "type": "string"
        }
      }
    },
    "SuspensaoImposto": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "ImpostoRetido",
        "CodigoReceita",
        "DataApuracao",
        "MotivoSuspensao",
        "ValorSuspenso",
        "Deposito"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "ImpostoRetido": {
          "$ref": "#/definitions/ImpostoRetido"
        },
        "CodigoReceita": {
          "$ref": "#/definitions/CodigoReceita"
        },
        "DataApuracao": {
          "type": "string",
          "format": "date-time",
          "description": "Data Apuracao"
        },
        "MotivoSuspensao": {
          "type": "string",
          "maxLength": 1,
          "description": "Motivo Suspensao"
        },
        "ValorSuspenso": {
          "type": "number",
          "format": "double",
          "description": "Valor Suspenso - [15 inteiros e 2 decimais]"
        },
        "Deposito": {
          "type": "string",
          "maxLength": 1,
          "description": "Deposito"
        },
        "NumeroProcesso": {
          "type": "string",
          "maxLength": 24,
          "description": "Numero Processo"
        },
        "Vara": {
          "type": "string",
          "maxLength": 2,
          "description": "Vara"
        },
        "NomeMunicipio": {
          "type": "string",
          "maxLength": 50,
          "description": "Nome Municipio"
        },
        "UF": {
          "type": "string",
          "maxLength": 2,
          "description": "UF"
        },
        "IdentificacaoDeposito": {
          "type": "string",
          "maxLength": 20,
          "description": "Identificacao Deposito"
        },
        "DataVencimento": {
          "type": "string",
          "format": "date-time",
          "description": "Data Vencimento"
        },
        "ValorPrincipal": {
          "type": "number",
          "format": "double",
          "description": "Valor Principal - [15 inteiros e 2 decimais]"
        },
        "ValorMulta": {
          "type": "number",
          "format": "double",
          "description": "Valor Multa - [15 inteiros e 2 decimais]"
        },
        "ValorJuros": {
          "type": "number",
          "format": "double",
          "description": "Valor Juros - [15 inteiros e 2 decimais]"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        }
      }
    },
    "TabelaECF": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "TipoAtivoExteriorECF": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Grupo": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TipoCalculoIsencaoReducaoImpostoSobreLucroRealIRPJ": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time"
        },
        "DataFim": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "TipoCalculoIsencaoReducaoLucroPresumido": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicio": {
          "type": "string",
          "format": "date-time"
        },
        "DataFim": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "TipoCreditoPISCOFINS": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "TipoDemonstracaoLucroExploracaoIRPJ": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "TipoDemonstracaoReceitasIncentivadas": {
      "type": "object",
      "properties": {
        "TabelaECF": {
          "$ref": "#/definitions/TabelaECF"
        },
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time"
        },
        "DataFinal": {
          "type": "string",
          "format": "date-time"
        },
        "Ordem": {
          "type": "integer",
          "format": "int32"
        },
        "Tipo": {
          "type": "string"
        }
      }
    },
    "TipoEstabelecimento": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "TipoItem": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "TipoMovimentacaoInventario": {
      "type": "object",
      "required": [
        "Companhia",
        "CodigoMovimento",
        "IndicadorPropriedade",
        "TipoMovimento",
        "IDContrato"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "CodigoMovimento": {
          "type": "string",
          "maxLength": 3,
          "description": "Código movimentação de inventário"
        },
        "IndicadorPropriedade": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador de propriedade"
        },
        "TipoMovimento": {
          "type": "string",
          "maxLength": 1,
          "description": "Tipo Movimentação"
        },
        "IDContrato": {
          "type": "integer",
          "format": "int32",
          "description": "Código movimentação de inventário"
        }
      }
    },
    "TipoNotaFiscalServico": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "TipoPedidoPerfilOperacaoFiscal": {
      "type": "object",
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "PerfilOperacaoFiscal": {
          "$ref": "#/definitions/PerfilOperacaoFiscal"
        },
        "TipoPedido": {
          "type": "string"
        },
        "TipoOperacao": {
          "type": "string"
        }
      }
    },
    "TipoServico": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "integer",
          "format": "int32"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "TipoUtilizacaoCredito": {
      "type": "object",
      "properties": {
        "Estado": {
          "$ref": "#/definitions/Estado"
        },
        "TipoUtilizacao": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "TransferenciaSaldoContabil": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Periodo",
        "ContaContabil",
        "ContaContabilAnterior",
        "SaldoInicial",
        "IndicadorDebitoCreditoInicial"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Periodo": {
          "type": "string",
          "maxLength": 6,
          "description": "Período"
        },
        "ContaContabil": {
          "$ref": "#/definitions/ContaContabil"
        },
        "CentroCusto": {
          "$ref": "#/definitions/CentroCusto"
        },
        "ContaContabilAnterior": {
          "$ref": "#/definitions/ContaContabil"
        },
        "CentroCustoAnterior": {
          "$ref": "#/definitions/CentroCusto"
        },
        "SaldoInicial": {
          "type": "number",
          "format": "double",
          "description": "Saldo Inicial - [17 inteiros e 2 decimais]"
        },
        "IndicadorDebitoCreditoInicial": {
          "type": "string",
          "enum": [
            "C",
            "D"
          ],
          "maxLength": 1,
          "description": "Indicador Saldo Inicial: C (Crédito) ou D (Débito)"
        }
      }
    },
    "TransporteRodoviarioComplemento": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "TipoFrete"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "ParceiroConsignatario": {
          "$ref": "#/definitions/Parceiro"
        },
        "ParceiroRedespacho": {
          "$ref": "#/definitions/Parceiro"
        },
        "TipoFrete": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo do frete da operação de redespacho: 0 - Sem redespacho; 1 - Por conta do emitente; 2 - Por conta do destinatário; 9 - Outros"
        },
        "MunicipioOrigem": {
          "$ref": "#/definitions/Municipio"
        },
        "MunicipioDestino": {
          "$ref": "#/definitions/Municipio"
        },
        "PlacaVeiculo": {
          "type": "string",
          "maxLength": 7,
          "description": "Placa de identificação do veículo"
        },
        "ValorLiquidoFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor líquido do frete - [13 inteiros e 2 decimais]"
        },
        "ValorSecCat": {
          "type": "number",
          "format": "double",
          "description": "Soma de valores de Sec/Cat (serviços de coleta/custo adicional de transporte) - [13 inteiros e 2 decimais]"
        },
        "ValorDespacho": {
          "type": "number",
          "format": "double",
          "description": "Soma de valores de despacho - [13 inteiros e 2 decimais]"
        },
        "ValorPedagio": {
          "type": "number",
          "format": "double",
          "description": "Soma dos valores de pedágio - [13 inteiros e 2 decimais]"
        },
        "ValorOutros": {
          "type": "number",
          "format": "double",
          "description": "Outros valores - [13 inteiros e 2 decimais]"
        },
        "ValorTotalFrete": {
          "type": "number",
          "format": "double",
          "description": "Valor total do frete - [13 inteiros e 2 decimais]"
        },
        "Estado": {
          "$ref": "#/definitions/Estado"
        }
      }
    },
    "TransporteRodoviarioNotaFiscal": {
      "type": "object",
      "required": [
        "DocumentoFiscalCabecalho",
        "NumeroNF",
        "QtdVolume"
      ],
      "properties": {
        "DocumentoFiscalCabecalho": {
          "$ref": "#/definitions/DocumentoFiscal"
        },
        "CodigoModeloNF": {
          "type": "string",
          "maxLength": 2,
          "description": "Código do modelo do documento fiscal associado ao CT, conforme a Tabela 4.1.1"
        },
        "SerieNF": {
          "type": "string",
          "maxLength": 4,
          "description": "Série do documento fiscal associado ao CT"
        },
        "NumeroNF": {
          "type": "integer",
          "format": "int32",
          "description": "Número do documento fiscal associado ao CT"
        },
        "DataEmissaoNF": {
          "type": "string",
          "format": "date-time",
          "description": "Data da emissão do documento fiscal associado ao CT"
        },
        "ValorTotalDocumento": {
          "type": "integer",
          "format": "int32",
          "description": "Valor total do documento fiscal associado ao CT"
        },
        "ValorMercadoria": {
          "type": "integer",
          "format": "int32",
          "description": "Valor das mercadorias constantes no documento fiscal associado ao CT"
        },
        "QtdVolume": {
          "type": "integer",
          "format": "int32",
          "description": "Quantidade de volumes transportados"
        },
        "PesoBruto": {
          "type": "integer",
          "format": "int32",
          "description": "Peso bruto dos volumes transportados (em Kg)"
        },
        "PesoLiquido": {
          "type": "integer",
          "format": "int32",
          "description": "Peso líquido dos volumes transportados (em Kg)"
        },
        "Despacho": {
          "type": "string",
          "maxLength": 100,
          "description": "Identificação do número do Despacho quando se tratar de transporte ferroviário de cargas"
        },
        "CNPJCPFRemetente": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ ou CPF do rementente das mercadorias que constam na nota fiscal"
        },
        "InscricaoEstadualRemetente": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual do remetente das mercadorias que constam na nota fiscal"
        },
        "MunicipioOrigem": {
          "$ref": "#/definitions/Municipio"
        },
        "CNPJCPFDestinatario": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ ou CPF do destinatário das mercadorias que constam na nota fiscal."
        },
        "InscricaoEstadualDestinatario": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual do destinatário das mercadorias que constam na nota fiscal."
        },
        "MunicipioDestino": {
          "$ref": "#/definitions/Municipio"
        },
        "IndicadorTipoTransporteCarga": {
          "type": "string",
          "maxLength": 1,
          "description": "Indicador do tipo de transporte de carga coletada: 0 - Rodoviário 1 - Ferroviário 2 - Rodo-Ferroviário 3 - Aquaviário 4 - Dutoviário 5 - Aéreo 9 - Outros"
        },
        "CNPJCPFcoleta": {
          "type": "string",
          "maxLength": 14,
          "description": "Número do CNPJ ou CPF do local da coleta"
        },
        "MunicipioColeta": {
          "$ref": "#/definitions/Municipio"
        },
        "CNPJCPFentrega": {
          "type": "string",
          "maxLength": 14,
          "description": "Número do CNPJ ou CPF do local da entrega"
        },
        "InscricaoEstadualEntrega": {
          "type": "string",
          "maxLength": 14,
          "description": "Inscrição Estadual do contribuinte do local de entrega"
        },
        "MunicipioEntrega": {
          "$ref": "#/definitions/Municipio"
        }
      }
    },
    "UnidadeMedida": {
      "type": "object",
      "required": [
        "Companhia",
        "Codigo",
        "Descricao"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "Codigo": {
          "type": "string",
          "maxLength": 6,
          "description": "Código Unidade de Medida"
        },
        "Descricao": {
          "type": "string",
          "maxLength": 50,
          "description": "Descrição Unidade de Medida"
        }
      }
    },
    "UnidadeMedidaConversao": {
      "type": "object",
      "required": [
        "UnidadeMedidaOrigem",
        "UnidadeMedidaDestino",
        "FatorConversao",
        "OperacaoConversao"
      ],
      "properties": {
        "UnidadeMedidaOrigem": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "UnidadeMedidaDestino": {
          "$ref": "#/definitions/UnidadeMedida"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "FatorConversao": {
          "type": "number",
          "format": "double",
          "description": "Fator de Conversão - [12 inteiros e 7 decimais]"
        },
        "OperacaoConversao": {
          "type": "string",
          "maxLength": 1,
          "description": "Indica que operação utilizar com o fator: D = divisão M = multiplicação"
        }
      }
    },
    "UnidadeMedidaECF": {
      "type": "object",
      "properties": {
        "Codigo": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "UnidadeMedidaFCI": {
      "type": "object",
      "properties": {
        "UnidadeMedida": {
          "type": "string"
        },
        "DescricaoUnidadeMedida": {
          "type": "string"
        }
      }
    },
    "UnidadesMedidasTributaveisComercioExterior": {
      "type": "object",
      "properties": {
        "NCM": {
          "type": "string"
        },
        "CodigoUMTrib": {
          "type": "string"
        },
        "DescricaoUMTrib": {
          "type": "string"
        },
        "DataVigenciaDe": {
          "type": "string",
          "format": "date-time"
        },
        "DataVigenciaAte": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Usuario": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Login": {
          "type": "string"
        },
        "Senha": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Telefone": {
          "type": "string"
        },
        "Ramal": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Admin": {
          "type": "boolean"
        },
        "AlterarSenha": {
          "type": "boolean"
        },
        "Principal": {
          "type": "boolean"
        }
      }
    },
    "UsuarioCadastro": {
      "type": "object",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Login": {
          "type": "string"
        },
        "Senha": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Telefone": {
          "type": "string"
        },
        "Ramal": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Admin": {
          "type": "boolean"
        },
        "AlterarSenha": {
          "type": "boolean"
        },
        "Principal": {
          "type": "boolean"
        },
        "EstabelecimentosFiscais": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstabelecimentoFiscal"
          }
        },
        "Relatorios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relatorio"
          }
        }
      }
    },
    "UsuarioEstabelecimentoFiscal": {
      "type": "object",
      "properties": {
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        }
      }
    },
    "UsuarioGrupoUsuario": {
      "type": "object",
      "properties": {
        "Usuario": {
          "$ref": "#/definitions/UsuarioCadastro"
        },
        "GrupoUsuario": {
          "$ref": "#/definitions/GrupoUsuario"
        }
      }
    },
    "UsuarioRelatorio": {
      "type": "object",
      "properties": {}
    },
    "ValorAgregado": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "Periodo",
        "ItemIndiceParticipacao",
        "Item",
        "Municipio"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "Periodo": {
          "type": "string",
          "maxLength": 6,
          "description": "Período"
        },
        "ItemIndiceParticipacao": {
          "$ref": "#/definitions/ItemIndiceParticipacao"
        },
        "Item": {
          "$ref": "#/definitions/Item"
        },
        "Municipio": {
          "$ref": "#/definitions/Municipio"
        },
        "Valor": {
          "type": "number",
          "format": "double",
          "description": "Valor - [13 inteiros e 4 decimais]"
        }
      }
    },
    "ValorRetidoFontePISCOFINS": {
      "type": "object",
      "required": [
        "PeriodoEscrituracao",
        "Companhia",
        "CodigoImposto",
        "IndicadorNaturezaRetencaoFonte",
        "PeriodoRecebimentoRetencao",
        "ValorTotalRetencao",
        "ValorRetencaoDeduzida",
        "ValorRetencaoPedidoRestituicao",
        "ValorRetencaoDeclaracaoCompensacao"
      ],
      "properties": {
        "PeriodoEscrituracao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período Escrituração"
        },
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "CodigoImposto": {
          "type": "string",
          "maxLength": 6,
          "description": "Código Imposto"
        },
        "IndicadorNaturezaRetencaoFonte": {
          "type": "integer",
          "format": "int32",
          "description": "Indicador de Natureza da Retenção na Fonte"
        },
        "PeriodoRecebimentoRetencao": {
          "type": "string",
          "maxLength": 6,
          "description": "Período do Recebimento e da Retenção (MM/AAAA)"
        },
        "ValorTotalRetencao": {
          "type": "number",
          "format": "double",
          "description": "Valor Total da Retenção - [13 inteiros e 2 decimais]"
        },
        "ValorRetencaoDeduzida": {
          "type": "number",
          "format": "double",
          "description": "Valor da Retenção deduzida da Contribuição devida no período da escrituração e em períodos anteriores. - [13 inteiros e 2 decimais]"
        },
        "ValorRetencaoPedidoRestituicao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Retenção utilizada mediante Pedido de Restituição. - [13 inteiros e 2 decimais]"
        },
        "ValorRetencaoDeclaracaoCompensacao": {
          "type": "number",
          "format": "double",
          "description": "Valor da Retenção utilizada mediante Declaração de Compensação. - [13 inteiros e 2 decimais]"
        }
      }
    },
    "VendasComercialExportadoraFEE": {
      "type": "object",
      "required": [
        "Companhia",
        "EstabelecimentoFiscal",
        "DataInicial",
        "CNPJ",
        "NCM"
      ],
      "properties": {
        "Companhia": {
          "$ref": "#/definitions/Companhia"
        },
        "EstabelecimentoFiscal": {
          "$ref": "#/definitions/EstabelecimentoFiscal"
        },
        "DataInicial": {
          "type": "string",
          "format": "date-time",
          "description": "Data Inicial"
        },
        "CNPJ": {
          "type": "string",
          "maxLength": 14,
          "description": "CNPJ da Comercial Exportadora"
        },
        "NCM": {
          "type": "string",
          "maxLength": 14,
          "description": "Código NCM, conforme tabela do Sped"
        },
        "ValorVenda": {
          "type": "number",
          "format": "double",
          "description": "Valor da venda - [17 inteiros e 2 decimais]"
        }
      }
    },
    "Document": {
      "description": "Document XML Information",
      "type": "object",
      "required": [
        "documentType",
        "xmlData"
      ],
      "properties": {
        "documentType": {
          "description": "Document Type",
          "type": "string",
          "enum": [
            "SERVICO",
            "MERCADORIA",
            "TRANSPORTE"
          ]
        },
        "xmlData": {
          "description": "the document in xml format (parsed to string)",
          "type": "string",
          "maxLength": 500000
        },
        "additionalParameters": {
          "description": "Additional informations that should be attached to the document",
          "type": "string",
          "maxLength": 500000
        }
      }
    }
  },
  "x-swagger-namespace": "BR",
  "x-swagger-erouter-validation-rules": {
    "/agasts/*": {
      "in": "header",
      "field": "Avalara-Product-Type",
      "rules": {
        "goods": "/agasts/*?goods",
        "_default": "/agasts/*?service"
      }
    },
    "/calculations/*": {
      "in": "body",
      "field": "header.messageType",
      "rules": {
        "goods": {
          "field": "header.transactionType",
          "rules": {
            "_default": "/calculations/*?goods"
          }
        },
        "_default": {
          "field": "header.transactionType",
          "rules": {
            "Purchase": "/calculations/*?service-purchase",
            "Payment": "/calculations/*?service-payment",
            "Receipt": "/calculations/*?service-receipt",
            "_default": "/calculations/*?service-sales"
          }
        }
      }
    },
    "/companies/agasts/*": {
      "in": "header",
      "field": "Avalara-Product-Type",
      "rules": {
        "goods": "/companies/agasts/*?goods",
        "_default": "/companies/agasts/*?service"
      }
    },
    "/companies/items/*": {
      "in": "header",
      "field": "Avalara-Product-Type",
      "rules": {
        "goods": "/companies/items/*?goods",
        "_default": "/companies/items/*?service"
      }
    },
    "/transactions/*": {
      "in": "body",
      "field": "header.messageType",
      "rules": {
        "goods": {
          "field": "header.transactionType",
          "rules": {
            "_default": "/transactions/*?goods"
          }
        },
        "_default": {
          "field": "header.transactionType",
          "rules": {
            "Purchase": "/transactions/*?service-purchase",
            "Payment": "/transactions/*?service-payment",
            "Receipt": "/transactions/*?service-receipt",
            "_default": "/transactions/*?service-sales"
          }
        }
      }
    }
  }
}